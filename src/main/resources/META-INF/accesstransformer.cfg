public net.minecraft.advancements.CriteriaTriggers register(Ljava/lang/String;Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; # register
default net.minecraft.client.KeyMapping isDown # isDown
public net.minecraft.client.Minecraft textureManager # textureManager
public net.minecraft.client.Minecraft createSearchTrees()V # createSearchTrees
public-f net.minecraft.client.Options keyMappings # keyMappings
public net.minecraft.client.Options$FieldAccess
#group protected net.minecraft.client.gui.Gui *
protected net.minecraft.client.gui.Gui scopeScale # scopeScale
protected net.minecraft.client.gui.Gui SPYGLASS_SCOPE_LOCATION # SPYGLASS_SCOPE_LOCATION
protected net.minecraft.client.gui.Gui POWDER_SNOW_OUTLINE_LOCATION # POWDER_SNOW_OUTLINE_LOCATION
protected net.minecraft.client.gui.Gui COLOR_WHITE # COLOR_WHITE
protected net.minecraft.client.gui.Gui MIN_CROSSHAIR_ATTACK_SPEED # MIN_CROSSHAIR_ATTACK_SPEED
protected net.minecraft.client.gui.Gui NUM_HEARTS_PER_ROW # NUM_HEARTS_PER_ROW
protected net.minecraft.client.gui.Gui LINE_HEIGHT # LINE_HEIGHT
protected net.minecraft.client.gui.Gui SPACER # SPACER
protected net.minecraft.client.gui.Gui PORTAL_OVERLAY_ALPHA_MIN # PORTAL_OVERLAY_ALPHA_MIN
protected net.minecraft.client.gui.Gui HEART_SIZE # HEART_SIZE
protected net.minecraft.client.gui.Gui HEART_SEPARATION # HEART_SEPARATION
protected net.minecraft.client.gui.Gui autosaveIndicatorValue # autosaveIndicatorValue
protected net.minecraft.client.gui.Gui lastAutosaveIndicatorValue # lastAutosaveIndicatorValue
protected net.minecraft.client.gui.Gui SAVING_TEXT # SAVING_TEXT
protected net.minecraft.client.gui.Gui AUTOSAVE_FADE_SPEED_FACTOR # AUTOSAVE_FADE_SPEED_FACTOR
protected net.minecraft.client.gui.Gui chatDisabledByPlayerShown # chatDisabledByPlayerShown
protected net.minecraft.client.gui.Gui ARMOR_HALF_SPRITE # ARMOR_HALF_SPRITE
protected net.minecraft.client.gui.Gui EXPERIENCE_BAR_BACKGROUND_SPRITE # EXPERIENCE_BAR_BACKGROUND_SPRITE
protected net.minecraft.client.gui.Gui EFFECT_BACKGROUND_AMBIENT_SPRITE # EFFECT_BACKGROUND_AMBIENT_SPRITE
protected net.minecraft.client.gui.Gui HOTBAR_SPRITE # HOTBAR_SPRITE
protected net.minecraft.client.gui.Gui JUMP_BAR_PROGRESS_SPRITE # JUMP_BAR_PROGRESS_SPRITE
protected net.minecraft.client.gui.Gui FOOD_HALF_HUNGER_SPRITE # FOOD_HALF_HUNGER_SPRITE
protected net.minecraft.client.gui.Gui CROSSHAIR_SPRITE # CROSSHAIR_SPRITE
protected net.minecraft.client.gui.Gui FOOD_FULL_HUNGER_SPRITE # FOOD_FULL_HUNGER_SPRITE
protected net.minecraft.client.gui.Gui HOTBAR_ATTACK_INDICATOR_PROGRESS_SPRITE # HOTBAR_ATTACK_INDICATOR_PROGRESS_SPRITE
protected net.minecraft.client.gui.Gui FOOD_EMPTY_SPRITE # FOOD_EMPTY_SPRITE
protected net.minecraft.client.gui.Gui ARMOR_FULL_SPRITE # ARMOR_FULL_SPRITE
protected net.minecraft.client.gui.Gui AIR_BURSTING_SPRITE # AIR_BURSTING_SPRITE
protected net.minecraft.client.gui.Gui FOOD_EMPTY_HUNGER_SPRITE # FOOD_EMPTY_HUNGER_SPRITE
protected net.minecraft.client.gui.Gui CROSSHAIR_ATTACK_INDICATOR_PROGRESS_SPRITE # CROSSHAIR_ATTACK_INDICATOR_PROGRESS_SPRITE
protected net.minecraft.client.gui.Gui CROSSHAIR_ATTACK_INDICATOR_FULL_SPRITE # CROSSHAIR_ATTACK_INDICATOR_FULL_SPRITE
protected net.minecraft.client.gui.Gui HOTBAR_SELECTION_SPRITE # HOTBAR_SELECTION_SPRITE
protected net.minecraft.client.gui.Gui HEART_VEHICLE_FULL_SPRITE # HEART_VEHICLE_FULL_SPRITE
protected net.minecraft.client.gui.Gui HOTBAR_OFFHAND_RIGHT_SPRITE # HOTBAR_OFFHAND_RIGHT_SPRITE
protected net.minecraft.client.gui.Gui EFFECT_BACKGROUND_SPRITE # EFFECT_BACKGROUND_SPRITE
protected net.minecraft.client.gui.Gui HEART_VEHICLE_HALF_SPRITE # HEART_VEHICLE_HALF_SPRITE
protected net.minecraft.client.gui.Gui ARMOR_EMPTY_SPRITE # ARMOR_EMPTY_SPRITE
protected net.minecraft.client.gui.Gui FOOD_FULL_SPRITE # FOOD_FULL_SPRITE
protected net.minecraft.client.gui.Gui JUMP_BAR_COOLDOWN_SPRITE # JUMP_BAR_COOLDOWN_SPRITE
protected net.minecraft.client.gui.Gui EXPERIENCE_BAR_PROGRESS_SPRITE # EXPERIENCE_BAR_PROGRESS_SPRITE
protected net.minecraft.client.gui.Gui CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_SPRITE # CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_SPRITE
protected net.minecraft.client.gui.Gui FOOD_HALF_SPRITE # FOOD_HALF_SPRITE
protected net.minecraft.client.gui.Gui HOTBAR_OFFHAND_LEFT_SPRITE # HOTBAR_OFFHAND_LEFT_SPRITE
protected net.minecraft.client.gui.Gui AIR_SPRITE # AIR_SPRITE
protected net.minecraft.client.gui.Gui HEART_VEHICLE_CONTAINER_SPRITE # HEART_VEHICLE_CONTAINER_SPRITE
protected net.minecraft.client.gui.Gui JUMP_BAR_BACKGROUND_SPRITE # JUMP_BAR_BACKGROUND_SPRITE
protected net.minecraft.client.gui.Gui HOTBAR_ATTACK_INDICATOR_BACKGROUND_SPRITE # HOTBAR_ATTACK_INDICATOR_BACKGROUND_SPRITE
protected net.minecraft.client.gui.Gui debugOverlay # debugOverlay
protected net.minecraft.client.gui.Gui titleFadeInTime # titleFadeInTime
protected net.minecraft.client.gui.Gui titleStayTime # titleStayTime
protected net.minecraft.client.gui.Gui titleFadeOutTime # titleFadeOutTime
protected net.minecraft.client.gui.Gui lastHealth # lastHealth
protected net.minecraft.client.gui.Gui displayHealth # displayHealth
protected net.minecraft.client.gui.Gui lastHealthTime # lastHealthTime
protected net.minecraft.client.gui.Gui healthBlinkTime # healthBlinkTime
protected net.minecraft.client.gui.Gui screenWidth # screenWidth
protected net.minecraft.client.gui.Gui screenHeight # screenHeight
protected net.minecraft.client.gui.Gui VIGNETTE_LOCATION # VIGNETTE_LOCATION
protected net.minecraft.client.gui.Gui PUMPKIN_BLUR_LOCATION # PUMPKIN_BLUR_LOCATION
protected net.minecraft.client.gui.Gui DEMO_EXPIRED_TEXT # DEMO_EXPIRED_TEXT
protected net.minecraft.client.gui.Gui random # random
protected net.minecraft.client.gui.Gui minecraft # minecraft
protected net.minecraft.client.gui.Gui itemRenderer # itemRenderer
protected net.minecraft.client.gui.Gui chat # chat
protected net.minecraft.client.gui.Gui tickCount # tickCount
protected net.minecraft.client.gui.Gui overlayMessageString # overlayMessageString
protected net.minecraft.client.gui.Gui overlayMessageTime # overlayMessageTime
protected net.minecraft.client.gui.Gui animateOverlayMessageColor # animateOverlayMessageColor
protected net.minecraft.client.gui.Gui toolHighlightTimer # toolHighlightTimer
protected net.minecraft.client.gui.Gui lastToolHighlight # lastToolHighlight
protected net.minecraft.client.gui.Gui subtitleOverlay # subtitleOverlay
protected net.minecraft.client.gui.Gui spectatorGui # spectatorGui
protected net.minecraft.client.gui.Gui tabList # tabList
protected net.minecraft.client.gui.Gui bossOverlay # bossOverlay
protected net.minecraft.client.gui.Gui titleTime # titleTime
protected net.minecraft.client.gui.Gui title # title
protected net.minecraft.client.gui.Gui subtitle # subtitle
#endgroup
protected net.minecraft.client.gui.Gui renderHearts(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/entity/player/Player;IIIIFIIIZ)V # renderHearts
public net.minecraft.client.gui.Gui displayScoreboardSidebar(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/scores/Objective;)V # displayScoreboardSidebar
public net.minecraft.client.gui.Gui renderCrosshair(Lnet/minecraft/client/gui/GuiGraphics;)V # renderCrosshair
public net.minecraft.client.gui.Gui renderVignette(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/entity/Entity;)V # renderVignette
protected net.minecraft.client.gui.Gui renderTextureOverlay(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;F)V # renderTextureOverlay
public net.minecraft.client.gui.Gui renderSpyglassOverlay(Lnet/minecraft/client/gui/GuiGraphics;F)V # renderSpyglassOverlay
protected net.minecraft.client.gui.Gui renderPortalOverlay(Lnet/minecraft/client/gui/GuiGraphics;F)V # renderPortalOverlay
public net.minecraft.client.gui.Gui renderHotbar(FLnet/minecraft/client/gui/GuiGraphics;)V # renderHotbar
public net.minecraft.client.gui.Gui renderEffects(Lnet/minecraft/client/gui/GuiGraphics;)V # renderEffects
protected net.minecraft.client.gui.Gui drawBackdrop(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;III)V # drawBackdrop
protected net.minecraft.client.gui.components.AbstractSelectionList$Entry list # list
protected net.minecraft.client.gui.components.AbstractSliderButton getSprite()Lnet/minecraft/resources/ResourceLocation; # getSprite
protected net.minecraft.client.gui.components.AbstractSliderButton getHandleSprite()Lnet/minecraft/resources/ResourceLocation; # getHandleSprite
protected net.minecraft.client.gui.components.DebugScreenOverlay renderProfilerChart # renderProfilerChart
protected net.minecraft.client.gui.components.DebugScreenOverlay renderNetworkCharts # renderNetworkCharts
protected net.minecraft.client.gui.components.DebugScreenOverlay renderFpsCharts # renderFpsCharts
protected net.minecraft.client.gui.components.DebugScreenOverlay block # block
protected net.minecraft.client.gui.components.DebugScreenOverlay liquid # liquid
public net.minecraft.client.gui.screens.MenuScreens register(Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V # register
public net.minecraft.client.gui.screens.MenuScreens$ScreenConstructor
public net.minecraft.client.gui.screens.Screen renderables # renderables
public net.minecraft.client.model.geom.LayerDefinitions OUTER_ARMOR_DEFORMATION # OUTER_ARMOR_DEFORMATION
public net.minecraft.client.model.geom.LayerDefinitions INNER_ARMOR_DEFORMATION # INNER_ARMOR_DEFORMATION
public net.minecraft.client.multiplayer.ClientCommonPacketListenerImpl connection # connection
public net.minecraft.client.multiplayer.ClientPacketListener commands # commands
public net.minecraft.client.particle.FireworkParticles$Starter createParticle(DDDDDD[I[IZZ)V # createParticle
public net.minecraft.client.particle.FireworkParticles$Starter createParticleBall(DI[I[IZZ)V # createParticleBall
public net.minecraft.client.particle.FireworkParticles$Starter createParticleShape(D[[D[I[IZZZ)V # createParticleShape
public net.minecraft.client.particle.FireworkParticles$Starter createParticleBurst([I[IZZ)V # createParticleBurst
public net.minecraft.client.particle.ParticleEngine register(Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V # register
public net.minecraft.client.particle.ParticleEngine register(Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V # register
public net.minecraft.client.particle.ParticleEngine register(Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider$Sprite;)V # register
public net.minecraft.client.particle.ParticleEngine$SpriteParticleRegistration
public net.minecraft.client.player.LocalPlayer getPermissionLevel()I # getPermissionLevel
public net.minecraft.client.renderer.GameRenderer loadEffect(Lnet/minecraft/resources/ResourceLocation;)V # loadEffect
public net.minecraft.client.renderer.LevelRenderer shouldShowEntityOutlines()Z # shouldShowEntityOutlines
protected-f net.minecraft.client.renderer.RenderStateShard setupState # setupState
public net.minecraft.client.renderer.RenderStateShard$BooleanStateShard
public net.minecraft.client.renderer.RenderStateShard$CullStateShard
public net.minecraft.client.renderer.RenderStateShard$DepthTestStateShard
public net.minecraft.client.renderer.RenderStateShard$EmptyTextureStateShard
public net.minecraft.client.renderer.RenderStateShard$LayeringStateShard
public net.minecraft.client.renderer.RenderStateShard$LightmapStateShard
public net.minecraft.client.renderer.RenderStateShard$MultiTextureStateShard
public net.minecraft.client.renderer.RenderStateShard$OffsetTexturingStateShard
public net.minecraft.client.renderer.RenderStateShard$OutputStateShard
public net.minecraft.client.renderer.RenderStateShard$OverlayStateShard
public net.minecraft.client.renderer.RenderStateShard$ShaderStateShard
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard
protected-f net.minecraft.client.renderer.RenderStateShard$TextureStateShard blur # blur
protected-f net.minecraft.client.renderer.RenderStateShard$TextureStateShard mipmap # mipmap
public net.minecraft.client.renderer.RenderStateShard$TexturingStateShard
public net.minecraft.client.renderer.RenderStateShard$TransparencyStateShard
public net.minecraft.client.renderer.RenderStateShard$WriteMaskStateShard
public net.minecraft.client.renderer.RenderType create(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; # create
public net.minecraft.client.renderer.RenderType$CompositeState
public net.minecraft.client.renderer.block.model.BlockElement uvsByFace(Lnet/minecraft/core/Direction;)[F # uvsByFace
public net.minecraft.client.renderer.block.model.BlockElement$Deserializer
public net.minecraft.client.renderer.block.model.BlockElement$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.block.model.BlockElementFace$Deserializer
public net.minecraft.client.renderer.block.model.BlockElementFace$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.block.model.BlockFaceUV$Deserializer
public net.minecraft.client.renderer.block.model.BlockFaceUV$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.block.model.BlockModel textureMap # textureMap
public net.minecraft.client.renderer.block.model.BlockModel parent # parent
public net.minecraft.client.renderer.block.model.BlockModel hasAmbientOcclusion # hasAmbientOcclusion
public net.minecraft.client.renderer.block.model.BlockModel bakeFace(Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; # bakeFace
public net.minecraft.client.renderer.block.model.ItemModelGenerator processFrames(ILjava/lang/String;Lnet/minecraft/client/renderer/texture/SpriteContents;)Ljava/util/List; # processFrames
public net.minecraft.client.renderer.block.model.ItemOverride$Deserializer
public net.minecraft.client.renderer.block.model.ItemOverride$Deserializer <init>()V # constructor
protected net.minecraft.client.renderer.block.model.ItemOverrides <init>()V # constructor
public net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer DEFAULT_ROTATION # DEFAULT_ROTATION
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer DEFAULT_TRANSLATION # DEFAULT_TRANSLATION
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer DEFAULT_SCALE # DEFAULT_SCALE
public net.minecraft.client.renderer.block.model.ItemTransforms$Deserializer
public net.minecraft.client.renderer.block.model.ItemTransforms$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher fontRenderer # fontRenderer - needed for rendering text in TESR items before entering world
public net.minecraft.client.renderer.blockentity.BlockEntityRenderers register(Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider;)V # register
private-f net.minecraft.client.renderer.blockentity.PistonHeadRenderer blockRenderer # blockRenderer - it's static so we need to un-finalize in case this class loads to early.
public net.minecraft.client.renderer.blockentity.SkullBlockRenderer SKIN_BY_TYPE # SKIN_BY_TYPE
public net.minecraft.client.renderer.entity.EntityRenderDispatcher renderers # renderers
public net.minecraft.client.renderer.entity.EntityRenderers register(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRendererProvider;)V # register
protected net.minecraft.client.renderer.entity.ItemEntityRenderer getRenderAmount(Lnet/minecraft/world/item/ItemStack;)I # getRenderAmount
public net.minecraft.client.renderer.entity.ItemRenderer renderQuadList(Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V # renderQuadList
public net.minecraft.client.renderer.entity.ItemRenderer renderModelLists(Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V # renderModelLists
public net.minecraft.client.renderer.entity.LivingEntityRenderer addLayer(Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z # addLayer
public net.minecraft.client.renderer.texture.SpriteContents byMipLevel # byMipLevel
default net.minecraft.client.renderer.texture.SpriteContents animatedTexture # animatedTexture
default net.minecraft.client.renderer.texture.SpriteContents getFrameCount()I # getFrameCount
public net.minecraft.client.resources.ClientPackSource createVanillaPackSource(Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResources; # createVanillaPackSource
protected net.minecraft.client.resources.TextureAtlasHolder textureAtlas # textureAtlas
protected net.minecraft.client.resources.model.ModelBakery loadBlockModel(Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockModel; # loadBlockModel
public net.minecraft.client.resources.model.SimpleBakedModel$Builder <init>(ZZZLnet/minecraft/client/renderer/block/model/ItemTransforms;Lnet/minecraft/client/renderer/block/model/ItemOverrides;)V # constructor
public net.minecraft.client.sounds.SoundEngine soundManager # soundManager
public net.minecraft.commands.CommandSourceStack source # source
public net.minecraft.commands.arguments.selector.EntitySelectorParser finalizePredicates()V # finalizePredicates
public net.minecraft.commands.arguments.selector.EntitySelectorParser parseOptions()V # parseOptions
public net.minecraft.commands.arguments.selector.options.EntitySelectorOptions register(Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V # register
public net.minecraft.core.Holder$Reference bindTags(Ljava/util/Collection;)V # bindTags
public net.minecraft.core.Holder$Reference bindKey(Lnet/minecraft/resources/ResourceKey;)V # bindKey
public net.minecraft.core.Holder$Reference bindValue(Ljava/lang/Object;)V # bindValue
public net.minecraft.core.Holder$Reference$Type
public net.minecraft.core.HolderSet$Named bind(Ljava/util/List;)V # bind
protected net.minecraft.core.IdMapper nextId # nextId
protected net.minecraft.core.IdMapper tToId # tToId - internal map
protected net.minecraft.core.IdMapper idToT # idToT - internal index list
protected net.minecraft.core.MappedRegistry unregisteredIntrusiveHolders # unregisteredIntrusiveHolders
public net.minecraft.core.RegistrySynchronization$NetworkedRegistryData
public net.minecraft.core.particles.ParticleType <init>(ZLnet/minecraft/core/particles/ParticleOptions$Deserializer;)V # constructor
public net.minecraft.core.particles.SimpleParticleType <init>(Z)V # constructor
protected net.minecraft.data.loot.BlockLootSubProvider createSilkTouchOnlyTable(Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; # createSilkTouchOnlyTable
protected net.minecraft.data.loot.BlockLootSubProvider createPotFlowerItemTable(Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; # createPotFlowerItemTable
protected net.minecraft.data.loot.BlockLootSubProvider createSelfDropDispatchTable(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; # createSelfDropDispatchTable
protected net.minecraft.data.loot.EntityLootSubProvider canHaveLootTable(Lnet/minecraft/world/entity/EntityType;)Z # canHaveLootTable
protected net.minecraft.data.recipes.RecipeProvider recipePathProvider # recipePathProvider
protected net.minecraft.data.recipes.RecipeProvider advancementPathProvider # advancementPathProvider
protected net.minecraft.data.recipes.RecipeProvider insideOf(Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; # insideOf
protected net.minecraft.data.recipes.RecipeProvider inventoryTrigger([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/Criterion; # inventoryTrigger
protected net.minecraft.data.recipes.RecipeProvider has(Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/Criterion; # has
protected net.minecraft.data.recipes.RecipeProvider getBaseBlock(Lnet/minecraft/data/BlockFamily;Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; # getBaseBlock
protected net.minecraft.data.recipes.RecipeProvider buttonBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # buttonBuilder
protected net.minecraft.data.recipes.RecipeProvider fenceBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # fenceBuilder
protected net.minecraft.data.recipes.RecipeProvider fenceGateBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # fenceGateBuilder
protected net.minecraft.data.recipes.RecipeProvider trapdoorBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # trapdoorBuilder
protected net.minecraft.data.recipes.RecipeProvider signBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # signBuilder
protected net.minecraft.data.recipes.RecipeProvider smeltingResultFromBase(Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V # smeltingResultFromBase
protected net.minecraft.data.recipes.RecipeProvider cutBuilder(Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; # cutBuilder
protected net.minecraft.data.recipes.RecipeProvider oreCooking(Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/item/crafting/RecipeSerializer;Ljava/util/List;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;Ljava/lang/String;)V # oreCooking
protected net.minecraft.data.recipes.RecipeProvider wallBuilder(Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # wallBuilder
protected net.minecraft.data.recipes.RecipeProvider polishedBuilder(Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # polishedBuilder
protected net.minecraft.data.recipes.RecipeProvider pressurePlateBuilder(Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # pressurePlateBuilder
protected net.minecraft.data.recipes.RecipeProvider nineBlockStorageRecipes(Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V # nineBlockStorageRecipes
protected net.minecraft.data.recipes.RecipeProvider simpleCookingRecipe(Lnet/minecraft/data/recipes/RecipeOutput;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;ILnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;F)V # simpleCookingRecipe
protected net.minecraft.data.recipes.RecipeProvider inventoryTrigger([Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; # inventoryTrigger
public net.minecraft.data.recipes.ShapedRecipeBuilder$Result
public net.minecraft.data.recipes.packs.VanillaRecipeProvider COAL_SMELTABLES # COAL_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider IRON_SMELTABLES # IRON_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider COPPER_SMELTABLES # COPPER_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider DIAMOND_SMELTABLES # DIAMOND_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider GOLD_SMELTABLES # GOLD_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider EMERALD_SMELTABLES # EMERALD_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider REDSTONE_SMELTABLES # REDSTONE_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider LAPIS_SMELTABLES # LAPIS_SMELTABLES
public-f net.minecraft.data.registries.RegistriesDatapackGenerator getName()Ljava/lang/String; # getName
public net.minecraft.data.tags.IntrinsicHolderTagsProvider$IntrinsicTagAppender
protected net.minecraft.data.tags.TagsProvider builders # builders
public-f net.minecraft.data.tags.TagsProvider getName()Ljava/lang/String; # getName
public net.minecraft.data.tags.TagsProvider$TagAppender
public net.minecraft.gametest.framework.GameTestServer <init>(Ljava/lang/Thread;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/server/WorldStem;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;)V # constructor
protected net.minecraft.resources.RegistryOps <init>(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;)V # constructor
public net.minecraft.resources.ResourceLocation validNamespaceChar(C)Z # validNamespaceChar
public net.minecraft.resources.ResourceLocation isValidPath(Ljava/lang/String;)Z # isValidPath
public net.minecraft.resources.ResourceLocation isValidNamespace(Ljava/lang/String;)Z # isValidNamespace
protected net.minecraft.server.MinecraftServer nextTickTime # nextTickTime
public net.minecraft.server.MinecraftServer$ReloadableResources
public net.minecraft.server.dedicated.DedicatedServer consoleInput # consoleInput
public net.minecraft.server.level.ServerChunkCache level # level
public net.minecraft.server.level.ServerLevel getEntities()Lnet/minecraft/world/level/entity/LevelEntityGetter; # getEntities
public net.minecraft.server.level.ServerPlayer containerCounter # containerCounter
public net.minecraft.server.level.ServerPlayer initMenu(Lnet/minecraft/world/inventory/AbstractContainerMenu;)V # initMenu
public net.minecraft.server.level.ServerPlayer nextContainerCounter()V # nextContainerCounter
public net.minecraft.server.network.ServerCommonPacketListenerImpl connection # connection
public net.minecraft.server.network.ServerLoginPacketListenerImpl authenticatedProfile # authenticatedProfile
public net.minecraft.server.packs.FilePackResources <init>(Ljava/lang/String;Lnet/minecraft/server/packs/FilePackResources$SharedZipFileAccess;ZLjava/lang/String;)V # constructor
public net.minecraft.server.packs.FilePackResources$SharedZipFileAccess
public net.minecraft.server.packs.FilePackResources$SharedZipFileAccess <init>(Ljava/io/File;)V # constructor
public net.minecraft.server.packs.repository.BuiltInPackSource fixedResources(Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier; # fixedResources
public net.minecraft.server.packs.repository.ServerPacksSource createVanillaPackSource()Lnet/minecraft/server/packs/VanillaPackResources; # createVanillaPackSource
public net.minecraft.server.packs.resources.FallbackResourceManager fallbacks # fallbacks
public net.minecraft.util.ExtraCodecs$EitherCodec
public net.minecraft.util.datafix.fixes.StructuresBecomeConfiguredFix$Conversion
public net.minecraft.util.thread.BlockableEventLoop submitAsync(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; # submitAsync
#group public net.minecraft.world.damagesource.DamageSource *() #All methods public, most are already
public net.minecraft.world.damagesource.DamageSource <init>(Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;)V # constructor
#endgroup
protected net.minecraft.world.entity.Entity ENTITY_COUNTER # ENTITY_COUNTER
public net.minecraft.world.entity.Entity getEncodeId()Ljava/lang/String; # getEncodeId
public net.minecraft.world.entity.ExperienceOrb value # value
public net.minecraft.world.entity.Mob goalSelector # goalSelector
public net.minecraft.world.entity.Mob targetSelector # targetSelector
public net.minecraft.world.entity.SpawnPlacements register(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V # register
public net.minecraft.world.entity.ai.memory.MemoryModuleType <init>(Ljava/util/Optional;)V # constructor
public net.minecraft.world.entity.ai.sensing.SensorType <init>(Ljava/util/function/Supplier;)V # constructor
protected net.minecraft.world.entity.item.PrimedTnt explode()V # explode - make it easier to extend TNTEntity with custom explosion logic
protected net.minecraft.world.entity.monster.AbstractSkeleton getStepSound()Lnet/minecraft/sounds/SoundEvent; # getStepSound - make AbstractSkeletonEntity implementable
protected net.minecraft.world.entity.monster.Skeleton getStepSound()Lnet/minecraft/sounds/SoundEvent; # getStepSound - make AbstractSkeletonEntity implementable
protected net.minecraft.world.entity.monster.Stray getStepSound()Lnet/minecraft/sounds/SoundEvent; # getStepSound - make AbstractSkeletonEntity implementable
protected net.minecraft.world.entity.monster.WitherSkeleton getStepSound()Lnet/minecraft/sounds/SoundEvent; # getStepSound - make AbstractSkeletonEntity implementable
public net.minecraft.world.entity.npc.VillagerType <init>(Ljava/lang/String;)V # constructor
public net.minecraft.world.entity.player.Player closeContainer()V # closeContainer
protected net.minecraft.world.entity.projectile.Projectile <init>(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;)V # constructor
private-f net.minecraft.world.entity.raid.Raid$RaiderType VALUES # VALUES
public net.minecraft.world.entity.schedule.Activity <init>(Ljava/lang/String;)V # constructor
protected net.minecraft.world.entity.vehicle.AbstractMinecart getDropItem()Lnet/minecraft/world/item/Item; # getDropItem - make AbstractMinecart implementable
public net.minecraft.world.inventory.AnvilMenu repairItemCountCost # repairItemCountCost
public net.minecraft.world.inventory.MenuType <init>(Lnet/minecraft/world/inventory/MenuType$MenuSupplier;Lnet/minecraft/world/flag/FeatureFlagSet;)V # constructor
public net.minecraft.world.inventory.MenuType$MenuSupplier
public net.minecraft.world.item.CreativeModeTab$Output
public net.minecraft.world.item.CreativeModeTab$TabVisibility
public net.minecraft.world.item.CreativeModeTabs COLORED_BLOCKS # COLORED_BLOCKS
public net.minecraft.world.item.CreativeModeTabs SPAWN_EGGS # SPAWN_EGGS
public net.minecraft.world.item.CreativeModeTabs SEARCH # SEARCH
public net.minecraft.world.item.CreativeModeTabs NATURAL_BLOCKS # NATURAL_BLOCKS
public net.minecraft.world.item.CreativeModeTabs BUILDING_BLOCKS # BUILDING_BLOCKS
public net.minecraft.world.item.CreativeModeTabs FUNCTIONAL_BLOCKS # FUNCTIONAL_BLOCKS
public net.minecraft.world.item.CreativeModeTabs COMBAT # COMBAT
public net.minecraft.world.item.CreativeModeTabs OP_BLOCKS # OP_BLOCKS
public net.minecraft.world.item.CreativeModeTabs FOOD_AND_DRINKS # FOOD_AND_DRINKS
public net.minecraft.world.item.CreativeModeTabs TOOLS_AND_UTILITIES # TOOLS_AND_UTILITIES
public net.minecraft.world.item.CreativeModeTabs HOTBAR # HOTBAR
public net.minecraft.world.item.CreativeModeTabs INGREDIENTS # INGREDIENTS
public net.minecraft.world.item.CreativeModeTabs REDSTONE_BLOCKS # REDSTONE_BLOCKS
public net.minecraft.world.item.CreativeModeTabs INVENTORY # INVENTORY
#group public net.minecraft.world.item.Item <init>
public net.minecraft.world.item.AxeItem <init>(Lnet/minecraft/world/item/Tier;FFLnet/minecraft/world/item/Item$Properties;)V # constructor
public net.minecraft.world.item.DiggerItem <init>(FFLnet/minecraft/world/item/Tier;Lnet/minecraft/tags/TagKey;Lnet/minecraft/world/item/Item$Properties;)V # constructor
public net.minecraft.world.item.HoeItem <init>(Lnet/minecraft/world/item/Tier;IFLnet/minecraft/world/item/Item$Properties;)V # constructor
public net.minecraft.world.item.PickaxeItem <init>(Lnet/minecraft/world/item/Tier;IFLnet/minecraft/world/item/Item$Properties;)V # constructor
public net.minecraft.world.item.RecordItem <init>(ILnet/minecraft/sounds/SoundEvent;Lnet/minecraft/world/item/Item$Properties;I)V # constructor
#endgroup
private-f net.minecraft.world.item.ItemDisplayContext id # id
public net.minecraft.world.item.ItemStack <init>(Lnet/minecraft/world/level/ItemLike;ILjava/util/Optional;)V # constructor
public net.minecraft.world.item.ItemStackLinkedSet TYPE_AND_TAG # TYPE_AND_TAG
public net.minecraft.world.item.alchemy.PotionBrewing$Mix
public net.minecraft.world.item.alchemy.PotionBrewing$Mix ingredient # ingredient
public net.minecraft.world.item.context.BlockPlaceContext <init>(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/BlockHitResult;)V # constructor
public net.minecraft.world.item.context.UseOnContext <init>(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/BlockHitResult;)V # constructor
public-f net.minecraft.world.item.crafting.Ingredient
protected net.minecraft.world.item.crafting.Ingredient <init>(Ljava/util/stream/Stream;)V # constructor
public net.minecraft.world.item.crafting.Ingredient values # values
public+f net.minecraft.world.item.crafting.Ingredient toNetwork(Lnet/minecraft/network/FriendlyByteBuf;)V # toNetwork
public net.minecraft.world.item.crafting.Ingredient fromValues(Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; # fromValues
public net.minecraft.world.item.crafting.Ingredient$ItemValue
public net.minecraft.world.item.crafting.Ingredient$ItemValue <init>(Lnet/minecraft/world/item/ItemStack;)V # constructor
public net.minecraft.world.item.crafting.Ingredient$TagValue
public net.minecraft.world.item.crafting.Ingredient$TagValue <init>(Lnet/minecraft/tags/TagKey;)V # constructor
public net.minecraft.world.item.crafting.Ingredient$Value
public net.minecraft.world.level.GameRules register(Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; # register
public net.minecraft.world.level.GameRules$BooleanValue create(Z)Lnet/minecraft/world/level/GameRules$Type; # create
public net.minecraft.world.level.GameRules$BooleanValue create(ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; # create
public net.minecraft.world.level.GameRules$IntegerValue create(ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; # create
public net.minecraft.world.level.GameRules$IntegerValue create(I)Lnet/minecraft/world/level/GameRules$Type; # create
public net.minecraft.world.level.Level oRainLevel # oRainLevel
public net.minecraft.world.level.Level rainLevel # rainLevel
public net.minecraft.world.level.Level oThunderLevel # oThunderLevel
public net.minecraft.world.level.Level thunderLevel # thunderLevel
public net.minecraft.world.level.biome.Biome$ClimateSettings
protected net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder features # features
protected net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder carvers # carvers
protected net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder addFeatureStepsUpTo(I)V # addFeatureStepsUpTo
#group protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder *
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder fogColor # fogColor
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder waterColor # waterColor
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder waterFogColor # waterFogColor
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder skyColor # skyColor
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder foliageColorOverride # foliageColorOverride
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder grassColorOverride # grassColorOverride
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder grassColorModifier # grassColorModifier
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder ambientParticle # ambientParticle
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder ambientLoopSoundEvent # ambientLoopSoundEvent
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder ambientMoodSettings # ambientMoodSettings
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder ambientAdditionsSettings # ambientAdditionsSettings
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder backgroundMusic # backgroundMusic
#endgroup
protected net.minecraft.world.level.biome.MobSpawnSettings$Builder spawners # spawners
protected net.minecraft.world.level.biome.MobSpawnSettings$Builder mobSpawnCosts # mobSpawnCosts
protected net.minecraft.world.level.biome.MobSpawnSettings$Builder creatureGenerationProbability # creatureGenerationProbability
#group public net.minecraft.world.level.block.Block <init>
public net.minecraft.world.level.block.AirBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.AttachedStemBlock <init>(Lnet/minecraft/world/level/block/StemGrownBlock;Ljava/util/function/Supplier;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.AzaleaBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BarrierBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BaseCoralFanBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BaseCoralPlantBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BaseCoralPlantTypeBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BaseCoralWallFanBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BigDripleafBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BigDripleafStemBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BlastFurnaceBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BushBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.ButtonBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/world/level/block/state/properties/BlockSetType;IZ)V # constructor
public net.minecraft.world.level.block.CactusBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CakeBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CandleCakeBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CartographyTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CarvedPumpkinBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.ChestBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Ljava/util/function/Supplier;)V # constructor
public net.minecraft.world.level.block.ChorusFlowerBlock <init>(Lnet/minecraft/world/level/block/ChorusPlantBlock;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.ChorusPlantBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CoralFanBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CoralPlantBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CoralWallFanBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CraftingTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CropBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CrossCollisionBlock <init>(FFFFFLnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DeadBushBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DecoratedPotBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DirtPathBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DispenserBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DoorBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/world/level/block/state/properties/BlockSetType;)V # constructor
public net.minecraft.world.level.block.EnchantmentTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EndGatewayBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EndPortalBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EndRodBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EnderChestBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EquipableCarvedPumpkinBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.FarmBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.FletchingTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.FungusBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/block/Block;)V # constructor
public net.minecraft.world.level.block.FurnaceBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.GrindstoneBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.HalfTransparentBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.HangingRootsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.IronBarsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.JigsawBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.JukeboxBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.KelpBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.KelpPlantBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LadderBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LecternBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LeverBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LiquidBlock <init>(Lnet/minecraft/world/level/material/FlowingFluid;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LoomBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.MangroveRootsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.MelonBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.NetherWartBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.NyliumBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PinkPetalsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PipeBlock <init>(FLnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PlayerHeadBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PlayerWallHeadBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PoweredRailBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PressurePlateBlock <init>(Lnet/minecraft/world/level/block/PressurePlateBlock$Sensitivity;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/world/level/block/state/properties/BlockSetType;)V # constructor
public net.minecraft.world.level.block.PumpkinBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RailBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RedstoneTorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RedstoneWallTorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RepeaterBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RodBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RootsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SaplingBlock <init>(Lnet/minecraft/world/level/block/grower/AbstractTreeGrower;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.ScaffoldingBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SeaPickleBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SeagrassBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SkullBlock <init>(Lnet/minecraft/world/level/block/SkullBlock$Type;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SmithingTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SmokerBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SnowLayerBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SnowyDirtBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SpawnerBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SpongeBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.StairBlock <init>(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.StemBlock <init>(Lnet/minecraft/world/level/block/StemGrownBlock;Ljava/util/function/Supplier;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.StructureBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.StructureVoidBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SugarCaneBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.TallGrassBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.TorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/core/particles/ParticleOptions;)V # constructor
public net.minecraft.world.level.block.TrapDoorBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/world/level/block/state/properties/BlockSetType;)V # constructor
public net.minecraft.world.level.block.WallSkullBlock <init>(Lnet/minecraft/world/level/block/SkullBlock$Type;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WallTorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/core/particles/ParticleOptions;)V # constructor
public net.minecraft.world.level.block.WaterlilyBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WeightedPressurePlateBlock <init>(ILnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/world/level/block/state/properties/BlockSetType;)V # constructor
public net.minecraft.world.level.block.WetSpongeBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WitherSkullBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WitherWallSkullBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WoolCarpetBlock <init>(Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
#endgroup
public net.minecraft.world.level.block.Block popExperience(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V # popExperience
public net.minecraft.world.level.block.FireBlock getBurnOdds(Lnet/minecraft/world/level/block/state/BlockState;)I # getBurnOdds
public net.minecraft.world.level.block.FireBlock getIgniteOdds(Lnet/minecraft/world/level/block/state/BlockState;)I # getIgniteOdds
public net.minecraft.world.level.block.entity.BlockEntityType$BlockEntitySupplier
public net.minecraft.world.level.block.entity.HopperBlockEntity setCooldown(I)V # setCooldown
public net.minecraft.world.level.block.entity.HopperBlockEntity isOnCustomCooldown()Z # isOnCustomCooldown
public net.minecraft.world.level.block.state.properties.BlockSetType register(Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/state/properties/BlockSetType; # register
public net.minecraft.world.level.block.state.properties.WoodType register(Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; # register
public net.minecraft.world.level.chunk.ChunkStatus <init>(Lnet/minecraft/world/level/chunk/ChunkStatus;IZLjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;Lnet/minecraft/world/level/chunk/ChunkStatus$LoadingTask;)V # constructor
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer barrierNoise # barrierNoise
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer lavaNoise # lavaNoise
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer aquiferCache # aquiferCache
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer aquiferLocationCache # aquiferLocationCache
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer shouldScheduleFluidUpdate # shouldScheduleFluidUpdate
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer minGridX # minGridX
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer minGridY # minGridY
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer minGridZ # minGridZ
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridSizeX # gridSizeX
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridSizeZ # gridSizeZ
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer similarity(II)D # similarity
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer getIndex(III)I # getIndex
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridX(I)I # gridX
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridY(I)I # gridY
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridZ(I)I # gridZ
protected net.minecraft.world.level.levelgen.Beardifier pieceIterator # pieceIterator
protected net.minecraft.world.level.levelgen.Beardifier junctionIterator # junctionIterator
protected net.minecraft.world.level.levelgen.Beardifier getBuryContribution(III)D # getBuryContribution
protected net.minecraft.world.level.levelgen.Beardifier getBeardContribution(IIII)D # getBeardContribution
private-f net.minecraft.world.level.levelgen.DebugLevelSource ALL_BLOCKS # ALL_BLOCKS
private-f net.minecraft.world.level.levelgen.DebugLevelSource GRID_WIDTH # GRID_WIDTH
private-f net.minecraft.world.level.levelgen.DebugLevelSource GRID_HEIGHT # GRID_HEIGHT
public-f net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator
protected net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator iterateNoiseColumn(Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt; # iterateNoiseColumn
#group public net.minecraft.world.level.levelgen.NoiseGeneratorSettings *()
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings caves(Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # caves
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings end(Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # end
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings overworld(Lnet/minecraft/data/worldgen/BootstapContext;ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # overworld
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings floatingIslands(Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # floatingIslands
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings nether(Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # nether
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings lambda$static$0(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; # lambda$static$0
#endgroup
public net.minecraft.world.level.levelgen.feature.featuresize.FeatureSizeType <init>(Lcom/mojang/serialization/Codec;)V # constructor
public net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacerType <init>(Lcom/mojang/serialization/Codec;)V # constructor
public net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacerType <init>(Lcom/mojang/serialization/Codec;)V # constructor
public net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProviderType <init>(Lcom/mojang/serialization/Codec;)V # constructor
public net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType <init>(Lcom/mojang/serialization/Codec;)V # constructor
public net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType <init>(Lcom/mojang/serialization/Codec;)V # constructor
protected net.minecraft.world.level.portal.PortalForcer level # level
public net.minecraft.world.level.storage.LevelResource <init>(Ljava/lang/String;)V # constructor
private-f net.minecraft.world.level.storage.loot.LootPool rolls # rolls
private-f net.minecraft.world.level.storage.loot.LootPool bonusRolls # bonusRolls