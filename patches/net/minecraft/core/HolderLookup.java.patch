--- a/net/minecraft/core/HolderLookup.java
+++ b/net/minecraft/core/HolderLookup.java
@@ -26,7 +_,7 @@
         return this.listTags().map(HolderSet.Named::key);
     }
 
-    public interface Provider extends HolderGetter.Provider {
+    public interface Provider extends HolderGetter.Provider, net.neoforged.neoforge.common.extensions.IHolderLookupProviderExtension {
         Stream<ResourceKey<? extends Registry<?>>> listRegistryKeys();
 
         default Stream<HolderLookup.RegistryLookup<?>> listRegistries() {
@@ -96,6 +_,18 @@
             };
         }
 
+        /**
+         * {@return the data map value attached with the object with the key, or {@code null} if there's no attached value}
+         *
+         * @param type the type of the data map
+         * @param key  the object to get the value for
+         * @param <A>  the data type
+         */
+        @org.jetbrains.annotations.Nullable
+        default <A> A getData(net.neoforged.neoforge.registries.datamaps.DataMapType<T, A> type, ResourceKey<T> key) {
+            return null;
+        }
+
         public interface Delegate<T> extends HolderLookup.RegistryLookup<T> {
             HolderLookup.RegistryLookup<T> parent();
 
@@ -127,6 +_,12 @@
             @Override
             default Stream<HolderSet.Named<T>> listTags() {
                 return this.parent().listTags();
+            }
+
+            @Override
+            @org.jetbrains.annotations.Nullable
+            default <A> A getData(net.neoforged.neoforge.registries.datamaps.DataMapType<T, A> attachment, ResourceKey<T> key) {
+                return parent().getData(attachment, key);
             }
         }
     }
