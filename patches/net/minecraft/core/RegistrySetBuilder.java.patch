--- a/net/minecraft/core/RegistrySetBuilder.java
+++ b/net/minecraft/core/RegistrySetBuilder.java
@@ -40,6 +_,10 @@
       return this.add(p_256261_, Lifecycle.stable(), p_256010_);
    }
 
+   public List<? extends ResourceKey<? extends Registry<?>>> getEntryKeys() {
+      return this.entries.stream().map(RegistrySetBuilder.RegistryStub::key).toList();
+   }
+
    private RegistrySetBuilder.BuildState createState(RegistryAccess p_256400_) {
       RegistrySetBuilder.BuildState registrysetbuilder$buildstate = RegistrySetBuilder.BuildState.create(
          p_256400_, this.entries.stream().map(RegistrySetBuilder.RegistryStub::key)
@@ -88,7 +_,7 @@
          RegistrySetBuilder.UniversalLookup registrysetbuilder$universallookup = new RegistrySetBuilder.UniversalLookup(registrysetbuilder$compositeowner);
          Builder<ResourceLocation, HolderGetter<?>> builder = ImmutableMap.builder();
          p_255995_.registries()
-            .forEach(p_258197_ -> builder.put(p_258197_.key().location(), RegistrySetBuilder.wrapContextLookup(p_258197_.value().asLookup())));
+            .forEach(p_258197_ -> builder.put(p_258197_.key().location(), net.neoforged.neoforge.common.CommonHooks.wrapRegistryLookup(p_258197_.value().asLookup())));
          p_256495_.forEach(p_256603_ -> builder.put(p_256603_.location(), registrysetbuilder$universallookup));
          return new RegistrySetBuilder.BuildState(registrysetbuilder$compositeowner, registrysetbuilder$universallookup, builder.build(), new HashMap<>(), list);
       }
@@ -110,6 +_,11 @@
             @Override
             public <S> HolderGetter<S> lookup(ResourceKey<? extends Registry<? extends S>> p_255961_) {
                return (HolderGetter<S>)BuildState.this.registries.getOrDefault(p_255961_.location(), BuildState.this.lookup);
+            }
+
+            @Override
+            public <S> Optional<HolderLookup.RegistryLookup<S>> registryLookup(ResourceKey<? extends Registry<? extends S>> registry) {
+               return Optional.ofNullable((HolderLookup.RegistryLookup<S>) BuildState.this.registries.get(registry.location()));
             }
          };
       }
