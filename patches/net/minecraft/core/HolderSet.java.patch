--- a/net/minecraft/core/HolderSet.java
+++ b/net/minecraft/core/HolderSet.java
@@ -15,7 +_,7 @@
 import net.minecraft.util.RandomSource;
 import org.jetbrains.annotations.VisibleForTesting;
 
-public interface HolderSet<T> extends Iterable<Holder<T>> {
+public interface HolderSet<T> extends Iterable<Holder<T>>, net.neoforged.neoforge.common.extensions.IHolderSetExtension<T> {
     Stream<Holder<T>> stream();
 
     int size();
@@ -174,6 +_,9 @@
 
         void bind(List<Holder<T>> contents) {
             this.contents = List.copyOf(contents);
+            for (Runnable runnable : this.invalidationCallbacks) {
+                runnable.run(); // FORGE: invalidate listeners when tags rebind
+            }
         }
 
         public TagKey<T> key() {
@@ -208,6 +_,11 @@
         @Override
         public boolean canSerializeIn(HolderOwner<T> owner) {
             return this.owner.canSerializeIn(owner);
+        }
+        // FORGE: Keep a list of invalidation callbacks so they can be run when tags rebind
+        private List<Runnable> invalidationCallbacks = new java.util.ArrayList<>();
+        public void addInvalidationListener(Runnable runnable) {
+            invalidationCallbacks.add(runnable);
         }
     }
 }
