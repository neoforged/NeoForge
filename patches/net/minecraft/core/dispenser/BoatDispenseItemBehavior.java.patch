--- a/net/minecraft/core/dispenser/BoatDispenseItemBehavior.java
+++ b/net/minecraft/core/dispenser/BoatDispenseItemBehavior.java
@@ -35,21 +_,22 @@
         double d2 = vec3.y() + (double)((float)direction.getStepY() * 1.125F);
         double d3 = vec3.z() + (double)direction.getStepZ() * d0;
         BlockPos blockpos = blockSource.pos().relative(direction);
+        Boat boat = (Boat)(this.isChestBoat ? new ChestBoat(serverlevel, d1, d2, d3) : new Boat(serverlevel, d1, d2, d3));
+        EntityType.<Boat>createDefaultStackConfig(serverlevel, item, null).accept(boat);
+        boat.setVariant(this.type);
+        boat.setYRot(direction.toYRot());
         double d4;
-        if (serverlevel.getFluidState(blockpos).is(FluidTags.WATER)) {
+        if (boat.canBoatInFluid(serverlevel.getFluidState(blockpos))) {
             d4 = 1.0;
         } else {
-            if (!serverlevel.getBlockState(blockpos).isAir() || !serverlevel.getFluidState(blockpos.below()).is(FluidTags.WATER)) {
+            if (!serverlevel.getBlockState(blockpos).isAir() || !boat.canBoatInFluid(serverlevel.getFluidState(blockpos.below()))) {
                 return this.defaultDispenseItemBehavior.dispense(blockSource, item);
             }
 
             d4 = 0.0;
         }
 
-        Boat boat = (Boat)(this.isChestBoat ? new ChestBoat(serverlevel, d1, d2 + d4, d3) : new Boat(serverlevel, d1, d2 + d4, d3));
-        EntityType.<Boat>createDefaultStackConfig(serverlevel, item, null).accept(boat);
-        boat.setVariant(this.type);
-        boat.setYRot(direction.toYRot());
+        boat.setPos(d1, d2 + d4, d3);
         serverlevel.addFreshEntity(boat);
         item.shrink(1);
         return item;
