--- a/net/minecraft/commands/Commands.java
+++ b/net/minecraft/commands/Commands.java
@@ -214,7 +_,7 @@
             JfrCommand.register(this.dispatcher);
         }
 
-        if (SharedConstants.IS_RUNNING_IN_IDE) {
+        if (net.neoforged.neoforge.gametest.GameTestHooks.isGametestEnabled()) {
             TestCommand.register(this.dispatcher);
             RaidCommand.register(this.dispatcher, context);
             DebugPathCommand.register(this.dispatcher);
@@ -248,6 +_,7 @@
         if (selection.includeIntegrated) {
             PublishCommand.register(this.dispatcher);
         }
+        net.neoforged.neoforge.event.EventHooks.onCommandRegister(this.dispatcher, selection, context);
 
         this.dispatcher.setConsumer(ExecutionCommandSource.resultConsumer());
     }
@@ -265,6 +_,16 @@
 
     public void performCommand(ParseResults<CommandSourceStack> parseResults, String command) {
         CommandSourceStack commandsourcestack = parseResults.getContext().getSource();
+        net.neoforged.neoforge.event.CommandEvent event = new net.neoforged.neoforge.event.CommandEvent(parseResults);
+        if (net.neoforged.neoforge.common.NeoForge.EVENT_BUS.post(event).isCanceled()) {
+            if (event.getException() != null) {
+                commandsourcestack.sendFailure(Component.literal(Util.describeError(event.getException())));
+                LOGGER.error("'/{}' threw an exception", command, event.getException());
+            }
+            return;
+        }
+        parseResults = event.getParseResults();
+
         commandsourcestack.getServer().getProfiler().push(() -> "/" + command);
         ContextChain<CommandSourceStack> contextchain = finishParsing(parseResults, command, commandsourcestack);
 
@@ -362,7 +_,8 @@
         Map<CommandNode<CommandSourceStack>, CommandNode<SharedSuggestionProvider>> map = Maps.newHashMap();
         RootCommandNode<SharedSuggestionProvider> rootcommandnode = new RootCommandNode<>();
         map.put(this.dispatcher.getRoot(), rootcommandnode);
-        this.fillUsableCommands(this.dispatcher.getRoot(), rootcommandnode, player.createCommandSourceStack(), map);
+        // FORGE: Use our own command node merging method to handle redirect nodes properly, see issue #7551
+        net.neoforged.neoforge.server.command.CommandHelper.mergeCommandNode(this.dispatcher.getRoot(), rootcommandnode, map, player.createCommandSourceStack(), ctx -> 0, suggest -> SuggestionProviders.safelySwap((com.mojang.brigadier.suggestion.SuggestionProvider<SharedSuggestionProvider>) (com.mojang.brigadier.suggestion.SuggestionProvider<?>) suggest));
         player.connection.send(new ClientboundCommandsPacket(rootcommandnode));
     }
 
