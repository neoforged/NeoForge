--- a/net/minecraft/server/packs/repository/Pack.java
+++ b/net/minecraft/server/packs/repository/Pack.java
@@ -29,6 +_,7 @@
    private final Pack.Position defaultPosition;
    private final boolean required;
    private final boolean fixedPosition;
+   private final boolean hidden; // Forge: Allow packs to be hidden from the UI entirely
    private final PackSource packSource;
 
    @Nullable
@@ -77,6 +_,7 @@
       this.defaultPosition = p_251298_;
       this.fixedPosition = p_249753_;
       this.packSource = p_251608_;
+      this.hidden = p_250162_.isHidden();
    }
 
    @Nullable
@@ -96,7 +_,7 @@
             PackCompatibility packcompatibility = PackCompatibility.forVersion(inclusiverange, p_294759_);
             OverlayMetadataSection overlaymetadatasection = packresources.getMetadataSection(OverlayMetadataSection.TYPE);
             List<String> list = overlaymetadatasection != null ? overlaymetadatasection.overlaysForVersion(p_294759_) : List.of();
-            pack$info = new Pack.Info(packmetadatasection.description(), packcompatibility, featureflagset, list);
+            pack$info = new Pack.Info(packmetadatasection.description(), packmetadatasection.packFormat(PackType.SERVER_DATA), packmetadatasection.packFormat(PackType.CLIENT_RESOURCES), packcompatibility, featureflagset, list, packresources.isHidden());
          }
 
          return pack$info;
@@ -170,7 +_,8 @@
       return this.packSource;
    }
 
-   @Override
+   public boolean isHidden() { return hidden; }
+
    public boolean equals(Object p_10448_) {
       if (this == p_10448_) {
          return true;
@@ -187,7 +_,10 @@
       return this.id.hashCode();
    }
 
-   public static record Info(Component description, PackCompatibility compatibility, FeatureFlagSet requestedFeatures, List<String> overlays) {
+   public static record Info(Component description, int dataFormat, int resourceFormat, PackCompatibility compatibility, FeatureFlagSet requestedFeatures, List<String> overlays, boolean isHidden) {
+      public int getFormat(PackType type) {
+         return type == PackType.SERVER_DATA ? this.dataFormat : this.resourceFormat;
+      }
    }
 
    public static enum Position {
