--- a/net/minecraft/nbt/CompoundTag.java
+++ b/net/minecraft/nbt/CompoundTag.java
@@ -46,13 +_,19 @@
             return compoundtag;
         }
 
+        private static byte readNamedTagType(DataInput input, NbtAccounter nbtAccounter) throws IOException {
+            nbtAccounter.accountBytes(2);
+            return input.readByte();
+        }
+
         private static CompoundTag loadCompound(DataInput input, NbtAccounter nbtAccounter) throws IOException {
             nbtAccounter.accountBytes(48L);
             Map<String, Tag> map = Maps.newHashMap();
 
             byte b0;
-            while ((b0 = input.readByte()) != 0) {
-                String s = readString(input, nbtAccounter);
+            while((b0 = readNamedTagType(input, nbtAccounter)) != 0) {
+                String s = nbtAccounter.readUTF(input.readUTF());
+                nbtAccounter.accountBytes(4); //Forge: 4 extra bytes for the object allocation.
                 Tag tag = CompoundTag.readNamedTagData(TagTypes.getType(b0), s, input, nbtAccounter);
                 if (map.put(s, tag) == null) {
                     nbtAccounter.accountBytes(36L);
@@ -211,6 +_,7 @@
 
     @Nullable
     public Tag put(String key, Tag value) {
+        if (value == null) throw new IllegalArgumentException("Invalid null NBT value with key " + key);
         return this.tags.put(key, value);
     }
 
