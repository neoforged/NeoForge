--- a/net/minecraft/world/level/pathfinder/WalkNodeEvaluator.java
+++ b/net/minecraft/world/level/pathfinder/WalkNodeEvaluator.java
@@ -471,6 +_,12 @@
                 for (int k = -1; k <= 1; k++) {
                     if (i != 0 || k != 0) {
                         PathType pathtype = context.getPathTypeFromState(x + i, y + j, z + k);
+                        BlockState blockState = context.level().getBlockState(context.currentEvalPos());
+                        PathType blockPathType = blockState.getAdjacentBlockPathType(context.level(), context.currentEvalPos(), null, pathtype);
+                        if (blockPathType != null) return blockPathType;
+                        net.minecraft.world.level.material.FluidState fluidState = blockState.getFluidState();
+                        PathType fluidPathType = fluidState.getAdjacentBlockPathType(context.level(), context.currentEvalPos(), null, pathtype);
+                        if (fluidPathType != null) return fluidPathType;
                         if (pathtype == PathType.DAMAGE_OTHER) {
                             return PathType.DANGER_OTHER;
                         }
@@ -496,6 +_,8 @@
 
     protected static PathType getPathTypeFromState(BlockGetter level, BlockPos pos) {
         BlockState blockstate = level.getBlockState(pos);
+        PathType type = blockstate.getBlockPathType(level, pos, null);
+        if (type != null) return type;
         Block block = blockstate.getBlock();
         if (blockstate.isAir()) {
             return PathType.OPEN;
@@ -511,6 +_,8 @@
             return PathType.COCOA;
         } else if (!blockstate.is(Blocks.WITHER_ROSE) && !blockstate.is(Blocks.POINTED_DRIPSTONE)) {
             FluidState fluidstate = blockstate.getFluidState();
+            PathType nonLoggableFluidPathType = fluidstate.getBlockPathType(level, pos, null, false);
+            if (nonLoggableFluidPathType != null) return nonLoggableFluidPathType;
             if (fluidstate.is(FluidTags.LAVA)) {
                 return PathType.LAVA;
             } else if (isBurningBlock(blockstate)) {
@@ -531,6 +_,8 @@
                 if (!blockstate.isPathfindable(PathComputationType.LAND)) {
                     return PathType.BLOCKED;
                 } else {
+                    PathType loggableFluidPathType = fluidstate.getBlockPathType(level, pos, null, true);
+                    if (loggableFluidPathType != null) return loggableFluidPathType;
                     return fluidstate.is(FluidTags.WATER) ? PathType.WATER : PathType.OPEN;
                 }
             } else {
