--- a/net/minecraft/world/level/block/MushroomBlock.java
+++ b/net/minecraft/world/level/block/MushroomBlock.java
@@ -87,13 +_,21 @@
         BlockState blockstate = p_54881_.getBlockState(blockpos);
         return blockstate.is(BlockTags.MUSHROOM_GROW_BLOCK)
             ? true
-            : p_54881_.getRawBrightness(p_54882_, 0) < 13 && this.mayPlaceOn(blockstate, p_54881_, blockpos);
+            : p_54881_.getRawBrightness(p_54882_, 0) < 13 && blockstate.canSustainPlant(p_54881_, blockpos, net.minecraft.core.Direction.UP, this);
     }
 
     public boolean growMushroom(ServerLevel p_221774_, BlockPos p_221775_, BlockState p_221776_, RandomSource p_221777_) {
         Optional<? extends Holder<ConfiguredFeature<?, ?>>> optional = p_221774_.registryAccess()
             .registryOrThrow(Registries.CONFIGURED_FEATURE)
             .getHolder(this.feature);
+
+        // Neo: Fire the BlockGrowFeatureEvent and update the result of the Optional local with the new feature.
+        var event = net.neoforged.neoforge.event.EventHooks.fireBlockGrowFeature(p_221774_, p_221777_, p_221775_, optional.orElse(null));
+        if (event.isCanceled()) {
+            return false;
+        }
+        optional = Optional.ofNullable(event.getFeature());
+
         if (optional.isEmpty()) {
             return false;
         } else {
