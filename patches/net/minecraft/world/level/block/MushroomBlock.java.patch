--- a/net/minecraft/world/level/block/MushroomBlock.java
+++ b/net/minecraft/world/level/block/MushroomBlock.java
@@ -85,15 +_,24 @@
     protected boolean canSurvive(BlockState state, LevelReader level, BlockPos pos) {
         BlockPos blockpos = pos.below();
         BlockState blockstate = level.getBlockState(blockpos);
+        net.neoforged.neoforge.common.util.TriState soilDecision = blockstate.canSustainPlant(level, blockpos, net.minecraft.core.Direction.UP, state);
         return blockstate.is(BlockTags.MUSHROOM_GROW_BLOCK)
             ? true
-            : level.getRawBrightness(pos, 0) < 13 && this.mayPlaceOn(blockstate, level, blockpos);
+            : soilDecision.isDefault() ? (level.getRawBrightness(pos, 0) < 13 && this.mayPlaceOn(blockstate, level, blockpos)) : soilDecision.isTrue();
     }
 
     public boolean growMushroom(ServerLevel level, BlockPos pos, BlockState state, RandomSource random) {
         Optional<? extends Holder<ConfiguredFeature<?, ?>>> optional = level.registryAccess()
             .registryOrThrow(Registries.CONFIGURED_FEATURE)
             .getHolder(this.feature);
+
+        // Neo: Fire the BlockGrowFeatureEvent and update the result of the Optional local with the new feature.
+        var event = net.neoforged.neoforge.event.EventHooks.fireBlockGrowFeature(level, random, pos, optional.orElse(null));
+        if (event.isCanceled()) {
+            return false;
+        }
+        optional = Optional.ofNullable(event.getFeature());
+
         if (optional.isEmpty()) {
             return false;
         } else {
