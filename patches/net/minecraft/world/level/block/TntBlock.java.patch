--- a/net/minecraft/world/level/block/TntBlock.java
+++ b/net/minecraft/world/level/block/TntBlock.java
@@ -41,10 +_,14 @@
     }
 
     @Override
+    public void onCaughtFire(BlockState state, Level world, BlockPos pos, @Nullable net.minecraft.core.Direction face, @Nullable LivingEntity igniter) {
+        explode(world, pos, igniter);
+    }
+
     protected void onPlace(BlockState state, Level level, BlockPos pos, BlockState oldState, boolean isMoving) {
         if (!oldState.is(state.getBlock())) {
             if (level.hasNeighborSignal(pos)) {
-                explode(level, pos);
+                onCaughtFire(state, level, pos, null, null);
                 level.removeBlock(pos, false);
             }
         }
@@ -53,7 +_,7 @@
     @Override
     protected void neighborChanged(BlockState state, Level level, BlockPos pos, Block block, BlockPos fromPos, boolean isMoving) {
         if (level.hasNeighborSignal(pos)) {
-            explode(level, pos);
+            onCaughtFire(state, level, pos, null, null);
             level.removeBlock(pos, false);
         }
     }
@@ -61,7 +_,7 @@
     @Override
     public BlockState playerWillDestroy(Level level, BlockPos pos, BlockState state, Player player) {
         if (!level.isClientSide() && !player.isCreative() && state.getValue(UNSTABLE)) {
-            explode(level, pos);
+            onCaughtFire(state, level, pos, null, null);
         }
 
         return super.playerWillDestroy(level, pos, state, player);
@@ -79,10 +_,12 @@
         }
     }
 
+    @Deprecated //Forge: Prefer using IForgeBlock#catchFire
     public static void explode(Level level, BlockPos pos) {
         explode(level, pos, null);
     }
 
+    @Deprecated //Forge: Prefer using IForgeBlock#catchFire
     private static void explode(Level level, BlockPos pos, @Nullable LivingEntity entity) {
         if (!level.isClientSide) {
             PrimedTnt primedtnt = new PrimedTnt(level, (double)pos.getX() + 0.5, (double)pos.getY(), (double)pos.getZ() + 0.5, entity);
@@ -99,7 +_,7 @@
         if (!stack.is(Items.FLINT_AND_STEEL) && !stack.is(Items.FIRE_CHARGE)) {
             return super.useItemOn(stack, state, level, pos, player, hand, hitResult);
         } else {
-            explode(level, pos, player);
+            onCaughtFire(state, level, pos, hitResult.getDirection(), player);
             level.setBlock(pos, Blocks.AIR.defaultBlockState(), 11);
             Item item = stack.getItem();
             if (stack.is(Items.FLINT_AND_STEEL)) {
@@ -119,7 +_,7 @@
             BlockPos blockpos = hit.getBlockPos();
             Entity entity = projectile.getOwner();
             if (projectile.isOnFire() && projectile.mayInteract(level, blockpos)) {
-                explode(level, blockpos, entity instanceof LivingEntity ? (LivingEntity)entity : null);
+                onCaughtFire(state, level, blockpos, null, entity instanceof LivingEntity ? (LivingEntity)entity : null);
                 level.removeBlock(blockpos, false);
             }
         }
