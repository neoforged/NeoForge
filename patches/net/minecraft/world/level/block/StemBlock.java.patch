--- a/net/minecraft/world/level/block/StemBlock.java
+++ b/net/minecraft/world/level/block/StemBlock.java
@@ -74,23 +_,23 @@
 
     @Override
     protected boolean mayPlaceOn(BlockState state, BlockGetter level, BlockPos pos) {
-        return state.is(Blocks.FARMLAND);
+        return state.getBlock() instanceof net.minecraft.world.level.block.FarmBlock;
     }
 
     @Override
     protected void randomTick(BlockState state, ServerLevel level, BlockPos pos, RandomSource random) {
+        if (!level.isAreaLoaded(pos, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
         if (level.getRawBrightness(pos, 0) >= 9) {
-            float f = CropBlock.getGrowthSpeed(this, level, pos);
-            if (random.nextInt((int)(25.0F / f) + 1) == 0) {
+            float f = CropBlock.getGrowthSpeed(state, level, pos);
+            if (net.neoforged.neoforge.common.CommonHooks.canCropGrow(level, pos, state, random.nextInt((int)(25.0F / f) + 1) == 0)) {
                 int i = state.getValue(AGE);
                 if (i < 7) {
-                    state = state.setValue(AGE, Integer.valueOf(i + 1));
-                    level.setBlock(pos, state, 2);
+                    level.setBlock(pos, state.setValue(AGE, Integer.valueOf(i + 1)), 2);
                 } else {
                     Direction direction = Direction.Plane.HORIZONTAL.getRandomDirection(random);
                     BlockPos blockpos = pos.relative(direction);
                     BlockState blockstate = level.getBlockState(blockpos.below());
-                    if (level.getBlockState(blockpos).isAir() && (blockstate.is(Blocks.FARMLAND) || blockstate.is(BlockTags.DIRT))) {
+                    if (level.isEmptyBlock(blockpos) && (blockstate.getBlock() instanceof net.minecraft.world.level.block.FarmBlock || blockstate.is(BlockTags.DIRT))) {
                         Registry<Block> registry = level.registryAccess().registryOrThrow(Registries.BLOCK);
                         Optional<Block> optional = registry.getOptional(this.fruit);
                         Optional<Block> optional1 = registry.getOptional(this.attachedStem);
@@ -100,6 +_,7 @@
                         }
                     }
                 }
+                net.neoforged.neoforge.common.CommonHooks.fireCropGrowPost(level, pos, state);
             }
         }
     }
