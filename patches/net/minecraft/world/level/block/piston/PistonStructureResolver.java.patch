--- a/net/minecraft/world/level/block/piston/PistonStructureResolver.java
+++ b/net/minecraft/world/level/block/piston/PistonStructureResolver.java
@@ -50,7 +_,7 @@
         } else {
             for (int i = 0; i < this.toPush.size(); i++) {
                 BlockPos blockpos = this.toPush.get(i);
-                if (isSticky(this.level.getBlockState(blockpos)) && !this.addBranchingBlocks(blockpos)) {
+                if (this.level.getBlockState(blockpos).isStickyBlock() && !this.addBranchingBlocks(blockpos)) {
                     return false;
                 }
             }
@@ -59,18 +_,6 @@
         }
     }
 
-    private static boolean isSticky(BlockState state) {
-        return state.is(Blocks.SLIME_BLOCK) || state.is(Blocks.HONEY_BLOCK);
-    }
-
-    private static boolean canStickToEachOther(BlockState state1, BlockState state2) {
-        if (state1.is(Blocks.HONEY_BLOCK) && state2.is(Blocks.SLIME_BLOCK)) {
-            return false;
-        } else {
-            return state1.is(Blocks.SLIME_BLOCK) && state2.is(Blocks.HONEY_BLOCK) ? false : isSticky(state1) || isSticky(state2);
-        }
-    }
-
     private boolean addBlockLine(BlockPos originPos, Direction direction) {
         BlockState blockstate = this.level.getBlockState(originPos);
         if (blockstate.isAir()) {
@@ -86,12 +_,13 @@
             if (i + this.toPush.size() > 12) {
                 return false;
             } else {
-                while (isSticky(blockstate)) {
+                BlockState oldState;
+                while(blockstate.isStickyBlock()) {
                     BlockPos blockpos = originPos.relative(this.pushDirection.getOpposite(), i);
-                    BlockState blockstate1 = blockstate;
+                    oldState = blockstate;
                     blockstate = this.level.getBlockState(blockpos);
                     if (blockstate.isAir()
-                        || !canStickToEachOther(blockstate1, blockstate)
+                        || !(oldState.canStickTo(blockstate) && blockstate.canStickTo(oldState))
                         || !PistonBaseBlock.isPushable(blockstate, this.level, blockpos, this.pushDirection, false, this.pushDirection.getOpposite())
                         || blockpos.equals(this.pistonPos)) {
                         break;
@@ -119,7 +_,7 @@
 
                         for (int k = 0; k <= j + l; k++) {
                             BlockPos blockpos2 = this.toPush.get(k);
-                            if (isSticky(this.level.getBlockState(blockpos2)) && !this.addBranchingBlocks(blockpos2)) {
+                            if (this.level.getBlockState(blockpos2).isStickyBlock() && !this.addBranchingBlocks(blockpos2)) {
                                 return false;
                             }
                         }
@@ -174,7 +_,7 @@
             if (direction.getAxis() != this.pushDirection.getAxis()) {
                 BlockPos blockpos = fromPos.relative(direction);
                 BlockState blockstate1 = this.level.getBlockState(blockpos);
-                if (canStickToEachOther(blockstate1, blockstate) && !this.addBlockLine(blockpos, direction)) {
+                if (blockstate1.canStickTo(blockstate) && blockstate.canStickTo(blockstate1) && !this.addBlockLine(blockpos, direction)) {
                     return false;
                 }
             }
