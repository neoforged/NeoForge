--- a/net/minecraft/world/level/block/ChorusPlantBlock.java
+++ b/net/minecraft/world/level/block/ChorusPlantBlock.java
@@ -42,14 +_,15 @@
     }
 
     public static BlockState getStateWithConnections(BlockGetter p_51711_, BlockPos p_51712_, BlockState p_304771_) {
-        BlockState blockstate = p_51711_.getBlockState(p_51712_.below());
+        BlockState blockstate = p_51711_.getBlockState(p_51712_.below()).getGroundStateForPlantChecks(p_51711_, p_51712_.below());
         BlockState blockstate1 = p_51711_.getBlockState(p_51712_.above());
         BlockState blockstate2 = p_51711_.getBlockState(p_51712_.north());
         BlockState blockstate3 = p_51711_.getBlockState(p_51712_.east());
         BlockState blockstate4 = p_51711_.getBlockState(p_51712_.south());
         BlockState blockstate5 = p_51711_.getBlockState(p_51712_.west());
         Block block = p_304771_.getBlock();
-        return p_304771_.trySetValue(DOWN, Boolean.valueOf(blockstate.is(block) || blockstate.is(Blocks.CHORUS_FLOWER) || blockstate.is(Blocks.END_STONE)))
+        net.neoforged.neoforge.common.util.TriState soilDecision = blockstate.canSustainPlant(p_51711_, p_51712_.below(), Direction.UP, p_304771_);
+        return p_304771_.trySetValue(DOWN, Boolean.valueOf(blockstate.is(block) || blockstate.is(Blocks.CHORUS_FLOWER) || blockstate.is(Blocks.END_STONE) || soilDecision == net.neoforged.neoforge.common.util.TriState.TRUE))
             .trySetValue(UP, Boolean.valueOf(blockstate1.is(block) || blockstate1.is(Blocks.CHORUS_FLOWER)))
             .trySetValue(NORTH, Boolean.valueOf(blockstate2.is(block) || blockstate2.is(Blocks.CHORUS_FLOWER)))
             .trySetValue(EAST, Boolean.valueOf(blockstate3.is(block) || blockstate3.is(Blocks.CHORUS_FLOWER)))
@@ -63,7 +_,14 @@
             p_51731_.scheduleTick(p_51732_, this, 1);
             return super.updateShape(p_51728_, p_51729_, p_51730_, p_51731_, p_51732_, p_51733_);
         } else {
+            if (p_51729_ == Direction.DOWN) p_51730_ = p_51730_.getGroundStateForPlantChecks(p_51731_, p_51733_.relative(p_51729_));
             boolean flag = p_51730_.is(this) || p_51730_.is(Blocks.CHORUS_FLOWER) || p_51729_ == Direction.DOWN && p_51730_.is(Blocks.END_STONE);
+            if (p_51729_ == Direction.DOWN) {
+                net.neoforged.neoforge.common.util.TriState soilDecision = p_51730_.canSustainPlant(p_51731_, p_51733_.relative(p_51729_), p_51729_.getOpposite(), p_51728_);
+                if (soilDecision != net.neoforged.neoforge.common.util.TriState.DEFAULT) {
+                    flag = soilDecision == net.neoforged.neoforge.common.util.TriState.TRUE;
+                }
+            }
             return p_51728_.setValue(PROPERTY_BY_DIRECTION.get(p_51729_), Boolean.valueOf(flag));
         }
     }
@@ -77,7 +_,7 @@
 
     @Override
     protected boolean canSurvive(BlockState p_51724_, LevelReader p_51725_, BlockPos p_51726_) {
-        BlockState blockstate = p_51725_.getBlockState(p_51726_.below());
+        BlockState blockstate = p_51725_.getBlockState(p_51726_.below()).getGroundStateForPlantChecks(p_51725_, p_51726_.below());
         boolean flag = !p_51725_.getBlockState(p_51726_.above()).isAir() && !blockstate.isAir();
 
         for (Direction direction : Direction.Plane.HORIZONTAL) {
@@ -95,7 +_,8 @@
             }
         }
 
-        return blockstate.is(this) || blockstate.is(Blocks.END_STONE);
+        net.neoforged.neoforge.common.util.TriState soilDecision = blockstate.canSustainPlant(p_51725_, p_51726_.below(), Direction.UP, p_51724_);
+        return blockstate.is(this) || blockstate.is(Blocks.END_STONE) || soilDecision == net.neoforged.neoforge.common.util.TriState.TRUE;
     }
 
     @Override
