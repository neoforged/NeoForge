--- a/net/minecraft/world/level/block/ChorusPlantBlock.java
+++ b/net/minecraft/world/level/block/ChorusPlantBlock.java
@@ -49,7 +_,8 @@
         BlockState blockstate4 = level.getBlockState(pos.south());
         BlockState blockstate5 = level.getBlockState(pos.west());
         Block block = state.getBlock();
-        return state.trySetValue(DOWN, Boolean.valueOf(blockstate.is(block) || blockstate.is(Blocks.CHORUS_FLOWER) || blockstate.is(Blocks.END_STONE)))
+        net.neoforged.neoforge.common.util.TriState soilDecision = blockstate.canSustainPlant(level, pos.below(), Direction.UP, state);
+        return state.trySetValue(DOWN, Boolean.valueOf(blockstate.is(block) || blockstate.is(Blocks.CHORUS_FLOWER) || blockstate.is(Blocks.END_STONE) || soilDecision.isTrue()))
             .trySetValue(UP, Boolean.valueOf(blockstate1.is(block) || blockstate1.is(Blocks.CHORUS_FLOWER)))
             .trySetValue(NORTH, Boolean.valueOf(blockstate2.is(block) || blockstate2.is(Blocks.CHORUS_FLOWER)))
             .trySetValue(EAST, Boolean.valueOf(blockstate3.is(block) || blockstate3.is(Blocks.CHORUS_FLOWER)))
@@ -64,6 +_,12 @@
             return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
         } else {
             boolean flag = facingState.is(this) || facingState.is(Blocks.CHORUS_FLOWER) || facing == Direction.DOWN && facingState.is(Blocks.END_STONE);
+            if (facing == Direction.DOWN) {
+                net.neoforged.neoforge.common.util.TriState soilDecision = facingState.canSustainPlant(level, facingPos.relative(facing), facing.getOpposite(), state);
+                if (!soilDecision.isDefault()) {
+                    flag = soilDecision.isTrue();
+                }
+            }
             return state.setValue(PROPERTY_BY_DIRECTION.get(facing), Boolean.valueOf(flag));
         }
     }
@@ -95,6 +_,8 @@
             }
         }
 
+        net.neoforged.neoforge.common.util.TriState soilDecision = blockstate.canSustainPlant(level, pos.below(), Direction.UP, state);
+        if (!soilDecision.isDefault()) return soilDecision.isTrue();
         return blockstate.is(this) || blockstate.is(Blocks.END_STONE);
     }
 
