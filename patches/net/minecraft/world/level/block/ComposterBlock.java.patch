--- a/net/minecraft/world/level/block/ComposterBlock.java
+++ b/net/minecraft/world/level/block/ComposterBlock.java
@@ -47,6 +_,8 @@
     public static final int MIN_LEVEL = 0;
     public static final int MAX_LEVEL = 7;
     public static final IntegerProperty LEVEL = BlockStateProperties.LEVEL_COMPOSTER;
+    /** @deprecated Neo: Use the {@link net.neoforged.neoforge.registries.datamaps.builtin.NeoForgeDataMaps#COMPOSTABLES compostable} data map instead */
+    @Deprecated
     public static final Object2FloatMap<ItemLike> COMPOSTABLES = new Object2FloatOpenHashMap<>();
     private static final int AABB_SIDE_THICKNESS = 2;
     private static final VoxelShape OUTER_SHAPE = Shapes.block();
@@ -231,6 +_,15 @@
         if (p_51978_.getValue(LEVEL) == 7) {
             p_51979_.scheduleTick(p_51980_, p_51978_.getBlock(), 20);
         }
+        // Neo: Invalidate composter capabilities when a composter is added
+        if (!p_51981_.is(this)) p_51979_.invalidateCapabilities(p_51980_);
+    }
+
+    @Override
+    protected void onRemove(BlockState p_60515_, Level p_60516_, BlockPos p_60517_, BlockState p_60518_, boolean p_60519_) {
+        super.onRemove(p_60515_, p_60516_, p_60517_, p_60518_, p_60519_);
+        // Neo: Invalidate composter capabilities when a composter is removed
+        if (!p_60515_.is(p_60518_.getBlock())) p_60516_.invalidateCapabilities(p_60517_);
     }
 
     @Override
@@ -238,7 +_,7 @@
         ItemStack p_316332_, BlockState p_316118_, Level p_316624_, BlockPos p_316660_, Player p_316715_, InteractionHand p_316472_, BlockHitResult p_316606_
     ) {
         int i = p_316118_.getValue(LEVEL);
-        if (i < 8 && COMPOSTABLES.containsKey(p_316332_.getItem())) {
+        if (i < 8 && getValue(p_316332_) > 0) {
             if (i < 7 && !p_316624_.isClientSide) {
                 BlockState blockstate = addItem(p_316715_, p_316118_, p_316624_, p_316660_, p_316332_);
                 p_316624_.levelEvent(1500, p_316660_, p_316118_ != blockstate ? 1 : 0);
@@ -265,7 +_,7 @@
 
     public static BlockState insertItem(Entity p_270919_, BlockState p_270087_, ServerLevel p_270284_, ItemStack p_270253_, BlockPos p_270678_) {
         int i = p_270087_.getValue(LEVEL);
-        if (i < 7 && COMPOSTABLES.containsKey(p_270253_.getItem())) {
+        if (i < 7 && getValue(p_270253_) > 0) {
             BlockState blockstate = addItem(p_270919_, p_270087_, p_270284_, p_270678_, p_270253_);
             p_270253_.shrink(1);
             return blockstate;
@@ -296,7 +_,7 @@
 
     static BlockState addItem(@Nullable Entity p_270464_, BlockState p_270603_, LevelAccessor p_270151_, BlockPos p_270547_, ItemStack p_270354_) {
         int i = p_270603_.getValue(LEVEL);
-        float f = COMPOSTABLES.getFloat(p_270354_.getItem());
+        float f = getValue(p_270354_);
         if ((i != 0 || !(f > 0.0F)) && !(p_270151_.getRandom().nextDouble() < (double)f)) {
             return p_270603_;
         } else {
@@ -396,7 +_,7 @@
 
         @Override
         public boolean canPlaceItemThroughFace(int p_52028_, ItemStack p_52029_, @Nullable Direction p_52030_) {
-            return !this.changed && p_52030_ == Direction.UP && ComposterBlock.COMPOSTABLES.containsKey(p_52029_.getItem());
+            return !this.changed && p_52030_ == Direction.UP && getValue(p_52029_) > 0f;
         }
 
         @Override
@@ -454,5 +_,11 @@
             ComposterBlock.empty(null, this.state, this.level, this.pos);
             this.changed = true;
         }
+    }
+
+    public static float getValue(ItemStack item) {
+        var value = item.getItemHolder().getData(net.neoforged.neoforge.registries.datamaps.builtin.NeoForgeDataMaps.COMPOSTABLES);
+        if (value != null) return value.chance();
+        return -1f;
     }
 }
