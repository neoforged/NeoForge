--- a/net/minecraft/world/level/block/entity/BlockEntityType.java
+++ b/net/minecraft/world/level/block/entity/BlockEntityType.java
@@ -268,6 +_,7 @@
     );
     public static final BlockEntityType<VaultBlockEntity> VAULT = register("vault", BlockEntityType.Builder.of(VaultBlockEntity::new, Blocks.VAULT));
     private final BlockEntityType.BlockEntitySupplier<? extends T> factory;
+    // Neo: This field will be modified by BlockEntityTypeAddBlocksEvent event. Please use the event to add to this field for vanilla or other mod's BlockEntityTypes.
     private final Set<Block> validBlocks;
     private final Type<?> dataType;
     private final Holder.Reference<BlockEntityType<?>> builtInRegistryHolder = BuiltInRegistries.BLOCK_ENTITY_TYPE.createIntrusiveHolder(this);
@@ -299,6 +_,13 @@
 
     public boolean isValid(BlockState p_155263_) {
         return this.validBlocks.contains(p_155263_.getBlock());
+    }
+
+    /**
+     * Neo: Add getter for an immutable view of the set of valid blocks.
+     */
+    public Set<Block> getValidBlocks() {
+        return java.util.Collections.unmodifiableSet(this.validBlocks);
     }
 
     @Nullable
