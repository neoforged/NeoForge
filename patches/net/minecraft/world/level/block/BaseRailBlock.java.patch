--- a/net/minecraft/world/level/block/BaseRailBlock.java
+++ b/net/minecraft/world/level/block/BaseRailBlock.java
@@ -23,7 +_,7 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
-public abstract class BaseRailBlock extends Block implements SimpleWaterloggedBlock {
+public abstract class BaseRailBlock extends Block implements SimpleWaterloggedBlock, net.neoforged.neoforge.common.extensions.IBaseRailBlockExtension {
     protected static final VoxelShape FLAT_AABB = Block.box(0.0, 0.0, 0.0, 16.0, 2.0, 16.0);
     protected static final VoxelShape HALF_BLOCK_AABB = Block.box(0.0, 0.0, 0.0, 16.0, 8.0, 16.0);
     public static final BooleanProperty WATERLOGGED = BlockStateProperties.WATERLOGGED;
@@ -51,7 +_,7 @@
 
     @Override
     protected VoxelShape getShape(BlockState p_49403_, BlockGetter p_49404_, BlockPos p_49405_, CollisionContext p_49406_) {
-        RailShape railshape = p_49403_.is(this) ? p_49403_.getValue(this.getShapeProperty()) : null;
+        RailShape railshape = p_49403_.is(this) ? getRailDirection(p_49403_, p_49404_, p_49405_, null) : null;
         return railshape != null && railshape.isSlope() ? HALF_BLOCK_AABB : FLAT_AABB;
     }
 
@@ -79,7 +_,7 @@
     @Override
     protected void neighborChanged(BlockState p_49377_, Level p_49378_, BlockPos p_49379_, Block p_49380_, @Nullable Orientation p_361387_, boolean p_49382_) {
         if (!p_49378_.isClientSide && p_49378_.getBlockState(p_49379_).is(this)) {
-            RailShape railshape = p_49377_.getValue(this.getShapeProperty());
+            RailShape railshape = getRailDirection(p_49377_, p_49378_, p_49379_, null);
             if (shouldBeRemoved(p_49379_, p_49378_, railshape)) {
                 dropResources(p_49377_, p_49378_, p_49379_);
                 p_49378_.removeBlock(p_49379_, p_49382_);
@@ -115,7 +_,7 @@
         if (p_49368_.isClientSide) {
             return p_49370_;
         } else {
-            RailShape railshape = p_49370_.getValue(this.getShapeProperty());
+            RailShape railshape = getRailDirection(p_49370_, p_49368_, p_49369_, null);
             return new RailState(p_49368_, p_49369_, p_49370_).place(p_49368_.hasNeighborSignal(p_49369_), p_49371_, railshape).getState();
         }
     }
@@ -124,7 +_,7 @@
     protected void onRemove(BlockState p_49384_, Level p_49385_, BlockPos p_49386_, BlockState p_49387_, boolean p_49388_) {
         if (!p_49388_) {
             super.onRemove(p_49384_, p_49385_, p_49386_, p_49387_, p_49388_);
-            if (p_49384_.getValue(this.getShapeProperty()).isSlope()) {
+            if (getRailDirection(p_49384_, p_49385_, p_49386_, null).isSlope()) {
                 p_49385_.updateNeighborsAt(p_49386_.above(), this);
             }
 
@@ -145,6 +_,11 @@
         return blockstate.setValue(this.getShapeProperty(), flag1 ? RailShape.EAST_WEST : RailShape.NORTH_SOUTH).setValue(WATERLOGGED, Boolean.valueOf(flag));
     }
 
+    /**
+     * @deprecated Forge: Use {@link BaseRailBlock#getRailDirection(BlockState, BlockGetter, BlockPos, net.minecraft.world.entity.vehicle.AbstractMinecart)} for enhanced ability
+     * If you do change this property be aware that other functions in this/subclasses may break as they can make assumptions about this property
+     */
+    @Deprecated
     public abstract Property<RailShape> getShapeProperty();
 
     @Override
@@ -168,5 +_,15 @@
     @Override
     protected FluidState getFluidState(BlockState p_152158_) {
         return p_152158_.getValue(WATERLOGGED) ? Fluids.WATER.getSource(false) : super.getFluidState(p_152158_);
+    }
+
+    @Override
+    public boolean isFlexibleRail(BlockState state, BlockGetter world, BlockPos pos) {
+         return !this.isStraight;
+    }
+
+    @Override
+    public RailShape getRailDirection(BlockState state, BlockGetter world, BlockPos pos, @org.jetbrains.annotations.Nullable net.minecraft.world.entity.vehicle.AbstractMinecart cart) {
+         return state.getValue(getShapeProperty());
     }
 }
