--- a/net/minecraft/world/level/storage/DimensionDataStorage.java
+++ b/net/minecraft/world/level/storage/DimensionDataStorage.java
@@ -54,16 +_,20 @@
     @Nullable
     public <T extends SavedData> T get(SavedData.Factory<T> factory, String name) {
         SavedData saveddata = this.cache.get(name);
+        if (saveddata == net.neoforged.neoforge.common.util.DummySavedData.DUMMY) return null;
         if (saveddata == null && !this.cache.containsKey(name)) {
             saveddata = this.readSavedData(factory.deserializer(), factory.type(), name);
             this.cache.put(name, saveddata);
+        } else if (saveddata == null) {
+            this.cache.put(name, net.neoforged.neoforge.common.util.DummySavedData.DUMMY);
+            return null;
         }
 
         return (T)saveddata;
     }
 
     @Nullable
-    private <T extends SavedData> T readSavedData(BiFunction<CompoundTag, HolderLookup.Provider, T> reader, DataFixTypes dataFixType, String filename) {
+    private <T extends SavedData> T readSavedData(BiFunction<CompoundTag, HolderLookup.Provider, T> reader, @Nullable DataFixTypes dataFixType, String filename) {
         try {
             File file1 = this.getDataFile(filename);
             if (file1.exists()) {
@@ -81,7 +_,7 @@
         this.cache.put(name, savedData);
     }
 
-    public CompoundTag readTagFromDisk(String filename, DataFixTypes dataFixType, int version) throws IOException {
+    public CompoundTag readTagFromDisk(String filename, @Nullable DataFixTypes dataFixType, int version) throws IOException {
         File file1 = this.getDataFile(filename);
 
         CompoundTag compoundtag1;
@@ -98,8 +_,12 @@
                 }
             }
 
-            int i = NbtUtils.getDataVersion(compoundtag, 1343);
-            compoundtag1 = dataFixType.update(this.fixerUpper, compoundtag, i, version);
+            if (dataFixType != null) {
+                int i = NbtUtils.getDataVersion(compoundtag, 1343);
+                compoundtag1 = dataFixType.update(this.fixerUpper, compoundtag, i, version);
+            } else {
+                compoundtag1 = compoundtag;
+            }
         }
 
         return compoundtag1;
