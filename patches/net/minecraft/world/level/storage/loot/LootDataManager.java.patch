--- a/net/minecraft/world/level/storage/loot/LootDataManager.java
+++ b/net/minecraft/world/level/storage/loot/LootDataManager.java
@@ -26,7 +_,7 @@
 import net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;
 import org.slf4j.Logger;
 
-public class LootDataManager implements PreparableReloadListener, LootDataResolver {
+public class LootDataManager extends net.neoforged.neoforge.resource.ContextAwareReloadListener implements PreparableReloadListener, LootDataResolver {
     private static final Logger LOGGER = LogUtils.getLogger();
     private static final Gson GSON = new GsonBuilder().create();
     public static final LootDataId<LootTable> EMPTY_LOOT_TABLE_KEY = new LootDataId<>(LootDataType.TABLE, BuiltInLootTables.EMPTY);
@@ -49,19 +_,33 @@
     ) {
         Map<LootDataType<?>, Map<ResourceLocation, ?>> map = new HashMap<>();
         CompletableFuture<?>[] completablefuture = LootDataType.values()
-            .map(p_323463_ -> scheduleElementParse(p_323463_, this.registries, p_279377_, p_279148_, map))
+            .map(p_323463_ -> scheduleElementParse(p_323463_, this.registries, p_279377_, p_279148_, map, this.makeConditionalOps()))
             .toArray(p_279126_ -> new CompletableFuture[p_279126_]);
         return CompletableFuture.allOf(completablefuture).thenCompose(p_279240_::wait).thenAcceptAsync(p_279096_ -> this.apply(map), p_279169_);
     }
 
+    /**
+     * @deprecated Neo: Use the variant with a custom codec ops
+     */
+    @Deprecated
+    private static <T> CompletableFuture<?> scheduleElementParse(
+            LootDataType<T> p_279205_,
+            HolderLookup.Provider p_324250_,
+            ResourceManager p_279441_,
+            Executor p_279233_,
+            Map<LootDataType<?>, Map<ResourceLocation, ?>> p_279241_
+    ) {
+        return scheduleElementParse(p_279205_, p_324250_, p_279441_, p_279233_, p_279241_, p_324250_.createSerializationContext(JsonOps.INSTANCE));
+    }
+
     private static <T> CompletableFuture<?> scheduleElementParse(
         LootDataType<T> p_279205_,
         HolderLookup.Provider p_324250_,
         ResourceManager p_279441_,
         Executor p_279233_,
-        Map<LootDataType<?>, Map<ResourceLocation, ?>> p_279241_
+        Map<LootDataType<?>, Map<ResourceLocation, ?>> p_279241_,
+        com.mojang.serialization.DynamicOps<JsonElement> registryops
     ) {
-        RegistryOps<JsonElement> registryops = p_324250_.createSerializationContext(JsonOps.INSTANCE);
         Map<ResourceLocation, T> map = new HashMap<>();
         p_279241_.put(p_279205_, map);
         return CompletableFuture.runAsync(
