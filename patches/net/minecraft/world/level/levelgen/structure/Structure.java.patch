--- a/net/minecraft/world/level/levelgen/structure/Structure.java
+++ b/net/minecraft/world/level/levelgen/structure/Structure.java
@@ -42,10 +_,11 @@
 public abstract class Structure {
     public static final Codec<Structure> DIRECT_CODEC = BuiltInRegistries.STRUCTURE_TYPE.byNameCodec().dispatch(Structure::type, StructureType::codec);
     public static final Codec<Holder<Structure>> CODEC = RegistryFileCodec.create(Registries.STRUCTURE, DIRECT_CODEC);
-    protected final Structure.StructureSettings settings;
+    /** Neo: Field accesses are redirected to {@link #getModifiedStructureSettings()} with a coremod. */
+    private final Structure.StructureSettings settings;
 
     public static <S extends Structure> RecordCodecBuilder<S, Structure.StructureSettings> settingsCodec(Instance<S> instance) {
-        return Structure.StructureSettings.CODEC.forGetter(p_226595_ -> p_226595_.settings);
+        return Structure.StructureSettings.CODEC.forGetter(p_226595_ -> p_226595_.modifiableStructureInfo().getOriginalStructureInfo().structureSettings()); // FORGE: Patch codec to ignore field redirect coremods.
     }
 
     public static <S extends Structure> MapCodec<S> simpleCodec(Function<Structure.StructureSettings, S> factory) {
@@ -54,6 +_,7 @@
 
     protected Structure(Structure.StructureSettings settings) {
         this.settings = settings;
+        this.modifiableStructureInfo = new net.neoforged.neoforge.common.world.ModifiableStructureInfo(new net.neoforged.neoforge.common.world.ModifiableStructureInfo.StructureInfo(settings)); // FORGE: cache original structure info on construction so we can bypass our field read coremods where necessary
     }
 
     public HolderSet<Biome> biomes() {
@@ -196,6 +_,25 @@
     }
 
     public abstract StructureType<?> type();
+
+    // Neo: Grant ability to modify Structures in specific ways such as adding new natural mob spawns to structures
+    private final net.neoforged.neoforge.common.world.ModifiableStructureInfo modifiableStructureInfo;
+
+    /**
+     * {@return Cache of original structure data and structure data modified by structure modifiers}
+     * Modified structure data is set by server after datapacks and serverconfigs load.
+     * Settings field reads are coremodded to redirect to this.
+     **/
+    public net.neoforged.neoforge.common.world.ModifiableStructureInfo modifiableStructureInfo() {
+        return this.modifiableStructureInfo;
+    }
+
+    /**
+     * {@return The structure's settings, with modifications if called after modifiers are applied in server init.}
+     */
+    public StructureSettings getModifiedStructureSettings() {
+        return this.modifiableStructureInfo().get().structureSettings();
+    }
 
     public static record GenerationContext(
         RegistryAccess registryAccess,
