--- a/net/minecraft/world/level/biome/BiomeSpecialEffects.java
+++ b/net/minecraft/world/level/biome/BiomeSpecialEffects.java
@@ -212,7 +_,9 @@
         }
     }
 
-    public static enum GrassColorModifier implements StringRepresentable {
+    @net.neoforged.fml.common.asm.enumextension.NamedEnum
+    @net.neoforged.fml.common.asm.enumextension.NetworkedEnum(net.neoforged.fml.common.asm.enumextension.NetworkedEnum.NetworkCheck.CLIENTBOUND)
+    public static enum GrassColorModifier implements StringRepresentable, net.neoforged.fml.common.asm.enumextension.IExtensibleEnum {
         NONE("none") {
             @Override
             public int modifyColor(double p_48081_, double p_48082_, int p_48083_) {
@@ -234,12 +_,22 @@
         };
 
         private final String name;
+        private final ColorModifier delegate;
         public static final Codec<BiomeSpecialEffects.GrassColorModifier> CODEC = StringRepresentable.fromEnum(BiomeSpecialEffects.GrassColorModifier::values);
 
-        public abstract int modifyColor(double x, double z, int grassColor);
+        public int modifyColor(double x, double z, int grassColor) {
+            return delegate.modifyGrassColor(x, z, grassColor);
+        }
 
+        @net.neoforged.fml.common.asm.enumextension.ReservedConstructor
         GrassColorModifier(String name) {
             this.name = name;
+            this.delegate = null;
+        }
+
+        GrassColorModifier(String name, ColorModifier delegate) {
+            this.name = name;
+            this.delegate = delegate;
         }
 
         public String getName() {
@@ -249,6 +_,15 @@
         @Override
         public String getSerializedName() {
             return this.name;
+        }
+
+        public static net.neoforged.fml.common.asm.enumextension.ExtensionInfo getExtensionInfo() {
+            return net.neoforged.fml.common.asm.enumextension.ExtensionInfo.nonExtended(BiomeSpecialEffects.GrassColorModifier.class);
+        }
+
+        @FunctionalInterface
+        public interface ColorModifier {
+            int modifyGrassColor(double x, double z, int color);
         }
     }
 }
