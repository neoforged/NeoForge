--- a/net/minecraft/world/food/FoodProperties.java
+++ b/net/minecraft/world/food/FoodProperties.java
@@ -77,11 +_,18 @@
             return this;
         }
 
+        // Neo: Use supplier method instead
+        @Deprecated
         public FoodProperties.Builder effect(MobEffectInstance effect, float probability) {
             this.effects.add(new FoodProperties.PossibleEffect(effect, probability));
             return this;
         }
 
+        public FoodProperties.Builder effect(java.util.function.Supplier<MobEffectInstance> effectIn, float probability) {
+            this.effects.add(new FoodProperties.PossibleEffect(effectIn, probability));
+            return this;
+        }
+
         public FoodProperties.Builder usingConvertsTo(ItemLike item) {
             this.usingConvertsTo = Optional.of(new ItemStack(item));
             return this;
@@ -93,7 +_,7 @@
         }
     }
 
-    public static record PossibleEffect(MobEffectInstance effect, float probability) {
+    public static record PossibleEffect(java.util.function.Supplier<MobEffectInstance> effectSupplier, float probability) {
         public static final Codec<FoodProperties.PossibleEffect> CODEC = RecordCodecBuilder.create(
             p_337893_ -> p_337893_.group(
                         MobEffectInstance.CODEC.fieldOf("effect").forGetter(FoodProperties.PossibleEffect::effect),
@@ -109,8 +_,12 @@
             FoodProperties.PossibleEffect::new
         );
 
+        private PossibleEffect(MobEffectInstance effect, float probability) {
+            this(() -> effect, probability);
+        }
+
         public MobEffectInstance effect() {
-            return new MobEffectInstance(this.effect);
+            return new MobEffectInstance(this.effectSupplier.get());
         }
     }
 }
