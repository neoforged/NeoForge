--- a/net/minecraft/world/food/FoodProperties.java
+++ b/net/minecraft/world/food/FoodProperties.java
@@ -68,17 +_,24 @@
             return this;
         }
 
+        // Neo: Use supplier method instead
+        @Deprecated
         public FoodProperties.Builder effect(MobEffectInstance p_38763_, float p_38764_) {
             this.effects.add(new FoodProperties.PossibleEffect(p_38763_, p_38764_));
             return this;
         }
 
+        public FoodProperties.Builder effect(java.util.function.Supplier<MobEffectInstance> effectIn, float probability) {
+            this.effects.add(new FoodProperties.PossibleEffect(effectIn, probability));
+            return this;
+        }
+
         public FoodProperties build() {
             return new FoodProperties(this.nutrition, this.saturationModifier, this.canAlwaysEat, this.eatSeconds, this.effects.build());
         }
     }
 
-    public static record PossibleEffect(MobEffectInstance effect, float probability) {
+    public static record PossibleEffect(java.util.function.Supplier<MobEffectInstance> effectSupplier, float probability) {
         public static final Codec<FoodProperties.PossibleEffect> CODEC = RecordCodecBuilder.create(
             p_336029_ -> p_336029_.group(
                         MobEffectInstance.CODEC.fieldOf("effect").forGetter(FoodProperties.PossibleEffect::effect),
@@ -94,9 +_,13 @@
             FoodProperties.PossibleEffect::probability,
             FoodProperties.PossibleEffect::new
         );
+
+        private PossibleEffect(MobEffectInstance effect, float probability) {
+            this(() -> effect, probability);
+        }
 
         public MobEffectInstance effect() {
-            return new MobEffectInstance(this.effect);
+            return new MobEffectInstance(this.effectSupplier.get());
         }
     }
 }
