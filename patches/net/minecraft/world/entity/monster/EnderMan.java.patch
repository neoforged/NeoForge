--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -118,7 +_,6 @@
 
     @Override
     public void setTarget(@Nullable LivingEntity livingEntity) {
-        super.setTarget(livingEntity);
         AttributeInstance attributeinstance = this.getAttribute(Attributes.MOVEMENT_SPEED);
         if (livingEntity == null) {
             this.targetChangeTime = 0;
@@ -132,6 +_,7 @@
                 attributeinstance.addTransientModifier(SPEED_MODIFIER_ATTACKING);
             }
         }
+        super.setTarget(livingEntity); //Forge: Moved down to allow event handlers to write data manager values.
     }
 
     @Override
@@ -214,7 +_,7 @@
 
     boolean isLookingAtMe(Player player) {
         ItemStack itemstack = player.getInventory().armor.get(3);
-        if (itemstack.is(Blocks.CARVED_PUMPKIN.asItem())) {
+        if (net.neoforged.neoforge.common.CommonHooks.shouldSuppressEnderManAnger(this, player, itemstack)) {
             return false;
         } else {
             Vec3 vec3 = player.getViewVector(1.0F).normalize();
@@ -301,8 +_,10 @@
         boolean flag = blockstate.blocksMotion();
         boolean flag1 = blockstate.getFluidState().is(FluidTags.WATER);
         if (flag && !flag1) {
+            net.neoforged.neoforge.event.entity.EntityTeleportEvent.EnderEntity event = net.neoforged.neoforge.event.EventHooks.onEnderTeleport(this, x, y, z);
+            if (event.isCanceled()) return false;
             Vec3 vec3 = this.position();
-            boolean flag2 = this.randomTeleport(x, y, z, true);
+            boolean flag2 = this.randomTeleport(event.getTargetX(), event.getTargetY(), event.getTargetZ(), true);
             if (flag2) {
                 this.level().gameEvent(GameEvent.TELEPORT, vec3, GameEvent.Context.of(this));
                 if (!this.isSilent()) {
@@ -459,7 +_,7 @@
             if (this.enderman.getCarriedBlock() == null) {
                 return false;
             } else {
-                return !this.enderman.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)
+                return !net.neoforged.neoforge.event.EventHooks.canEntityGrief(this.enderman.level(), this.enderman)
                     ? false
                     : this.enderman.getRandom().nextInt(reducedTickDelay(2000)) == 0;
             }
@@ -479,7 +_,7 @@
             BlockState blockstate2 = this.enderman.getCarriedBlock();
             if (blockstate2 != null) {
                 blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level(), blockpos);
-                if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1)) {
+                if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1) && !net.neoforged.neoforge.event.EventHooks.onBlockPlace(enderman, net.neoforged.neoforge.common.util.BlockSnapshot.create(level.dimension(), level, blockpos1), net.minecraft.core.Direction.UP)) {
                     level.setBlock(blockpos, blockstate2, 3);
                     level.gameEvent(GameEvent.BLOCK_PLACE, blockpos, GameEvent.Context.of(this.enderman, blockstate2));
                     this.enderman.setCarriedBlock(null);
@@ -491,6 +_,7 @@
             return destinationState.isAir()
                 && !belowDestinationState.isAir()
                 && !belowDestinationState.is(Blocks.BEDROCK)
+                && !belowDestinationState.is(net.neoforged.neoforge.common.Tags.Blocks.ENDERMAN_PLACE_ON_BLACKLIST)
                 && belowDestinationState.isCollisionShapeFullBlock(level, belowDestinationPos)
                 && carriedState.canSurvive(level, destinationPos)
                 && level.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(destinationPos))).isEmpty();
@@ -602,7 +_,7 @@
             if (this.enderman.getCarriedBlock() != null) {
                 return false;
             } else {
-                return !this.enderman.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)
+                return !net.neoforged.neoforge.event.EventHooks.canEntityGrief(this.enderman.level(), this.enderman)
                     ? false
                     : this.enderman.getRandom().nextInt(reducedTickDelay(20)) == 0;
             }
