--- a/net/minecraft/world/entity/monster/Slime.java
+++ b/net/minecraft/world/entity/monster/Slime.java
@@ -136,6 +_,8 @@
         if (this.onGround() && !this.wasOnGround) {
             int i = this.getSize();
 
+            // Forge: Don't spawn particles if it's handled by the implementation itself
+            if (!spawnCustomParticles())
             for(int j = 0; j < i * 8; ++j) {
                 float f = this.random.nextFloat() * (float) (Math.PI * 2);
                 float f1 = this.random.nextFloat() * 0.5F + 0.5F;
@@ -200,6 +_,8 @@
             int j = i / 2;
             int k = 2 + this.random.nextInt(3);
 
+            var children = new java.util.ArrayList<Mob>(); // Neo: Children list for MobSplitEvent.
+
             for(int l = 0; l < k; ++l) {
                 float f1 = ((float)(l % 2) - 0.5F) * f;
                 float f2 = ((float)(l / 2) - 0.5F) * f;
@@ -214,8 +_,13 @@
                     slime.setInvulnerable(this.isInvulnerable());
                     slime.setSize(j, true);
                     slime.moveTo(this.getX() + (double)f1, this.getY() + 0.5, this.getZ() + (double)f2, this.random.nextFloat() * 360.0F, 0.0F);
-                    this.level().addFreshEntity(slime);
+
+                    children.add(slime); // Neo: Record the slime until after event firing.
                 }
+            }
+
+            if (!net.neoforged.neoforge.event.EventHooks.onMobSplit(this, children).isCanceled()) {
+                children.forEach(this.level()::addFreshEntity);
             }
         }
 
@@ -366,6 +_,12 @@
     public EntityDimensions getDimensions(Pose p_33597_) {
         return super.getDimensions(p_33597_).scale(0.255F * (float)this.getSize());
     }
+
+    /**
+     * Called when the slime spawns particles on landing, see onUpdate.
+     * Return true to prevent the spawning of the default particles.
+     */
+    protected boolean spawnCustomParticles() { return false; }
 
     static class SlimeAttackGoal extends Goal {
         private final Slime slime;
