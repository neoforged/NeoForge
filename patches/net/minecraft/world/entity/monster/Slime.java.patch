--- a/net/minecraft/world/entity/monster/Slime.java
+++ b/net/minecraft/world/entity/monster/Slime.java
@@ -146,6 +_,8 @@
             float f = this.getDimensions(this.getPose()).width() * 2.0F;
             float f1 = f / 2.0F;
 
+            // Forge: Don't spawn particles if it's handled by the implementation itself
+            if (!spawnCustomParticles())
             for (int i = 0; (float)i < f * 16.0F; i++) {
                 float f2 = this.random.nextFloat() * (float) (Math.PI * 2);
                 float f3 = this.random.nextFloat() * 0.5F + 0.5F;
@@ -210,15 +_,24 @@
             int k = 2 + this.random.nextInt(3);
             PlayerTeam playerteam = this.getTeam();
 
+            var children = new java.util.ArrayList<Mob>(); // Neo: Children list for MobSplitEvent.
+
+            this.preventConversionSpawns = true;
             for (int l = 0; l < k; l++) {
                 float f2 = ((float)(l % 2) - 0.5F) * f1;
                 float f3 = ((float)(l / 2) - 0.5F) * f1;
-                this.convertTo(
+                Slime slime = this.convertTo(
                     this.getType(), new ConversionParams(ConversionType.SPLIT_ON_DEATH, false, false, playerteam), EntitySpawnReason.TRIGGERED, p_381514_ -> {
                         p_381514_.setSize(j, true);
                         p_381514_.moveTo(this.getX() + (double)f2, this.getY() + 0.5, this.getZ() + (double)f3, this.random.nextFloat() * 360.0F, 0.0F);
                     }
                 );
+                children.add(slime); // Neo: Record the slime until after event firing.
+            }
+            this.preventConversionSpawns = false;
+
+            if (!net.neoforged.neoforge.event.EventHooks.onMobSplit(this, children).isCanceled()) {
+                children.forEach(this.level()::addFreshEntity);
             }
         }
 
@@ -327,6 +_,7 @@
         Vec3 vec3 = this.getDeltaMovement();
         this.setDeltaMovement(vec3.x, (double)this.getJumpPower(), vec3.z);
         this.hasImpulse = true;
+        net.neoforged.neoforge.common.CommonHooks.onLivingJump(this);
     }
 
     @Nullable
@@ -358,6 +_,12 @@
     public EntityDimensions getDefaultDimensions(Pose p_316359_) {
         return super.getDefaultDimensions(p_316359_).scale((float)this.getSize());
     }
+
+    /**
+     * Called when the slime spawns particles on landing, see onUpdate.
+     * Return true to prevent the spawning of the default particles.
+     */
+    protected boolean spawnCustomParticles() { return false; }
 
     static class SlimeAttackGoal extends Goal {
         private final Slime slime;
