--- a/net/minecraft/world/entity/ai/goal/RangedBowAttackGoal.java
+++ b/net/minecraft/world/entity/ai/goal/RangedBowAttackGoal.java
@@ -9,7 +_,7 @@
 import net.minecraft.world.item.BowItem;
 import net.minecraft.world.item.Items;
 
-public class RangedBowAttackGoal<T extends Monster & RangedAttackMob> extends Goal {
+public class RangedBowAttackGoal<T extends net.minecraft.world.entity.Mob & RangedAttackMob> extends Goal {
     private final T mob;
     private final double speedModifier;
     private int attackIntervalMin;
@@ -20,6 +_,10 @@
     private boolean strafingBackwards;
     private int strafingTime = -1;
 
+    public <M extends Monster & RangedAttackMob> RangedBowAttackGoal(M mob, double speedModifier, int attackIntervalMin, float attackRadius) {
+        this((T) mob, speedModifier, attackIntervalMin, attackRadius);
+    }
+
     public RangedBowAttackGoal(T mob, double speedModifier, int attackIntervalMin, float attackRadius) {
         this.mob = mob;
         this.speedModifier = speedModifier;
@@ -38,7 +_,7 @@
     }
 
     protected boolean isHoldingBow() {
-        return this.mob.isHolding(Items.BOW);
+        return this.mob.isHolding(is -> is.getItem() instanceof BowItem);
     }
 
     @Override
@@ -132,7 +_,7 @@
                     }
                 }
             } else if (--this.attackTime <= 0 && this.seeTime >= -60) {
-                this.mob.startUsingItem(ProjectileUtil.getWeaponHoldingHand(this.mob, Items.BOW));
+                this.mob.startUsingItem(ProjectileUtil.getWeaponHoldingHand(this.mob, item -> item instanceof BowItem));
             }
         }
     }
