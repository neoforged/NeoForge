--- a/net/minecraft/world/entity/ai/behavior/CrossbowAttack.java
+++ b/net/minecraft/world/entity/ai/behavior/CrossbowAttack.java
@@ -25,7 +_,7 @@
 
     protected boolean checkExtraStartConditions(ServerLevel level, E owner) {
         LivingEntity livingentity = getAttackTarget(owner);
-        return owner.isHolding(Items.CROSSBOW)
+        return owner.isHolding(is -> is.getItem() instanceof CrossbowItem)
             && BehaviorUtils.canSee(owner, livingentity)
             && BehaviorUtils.isWithinAttackRange(owner, livingentity, 0);
     }
@@ -45,7 +_,7 @@
             entity.stopUsingItem();
         }
 
-        if (entity.isHolding(Items.CROSSBOW)) {
+        if (entity.isHolding(is -> is.getItem() instanceof CrossbowItem)) {
             entity.setChargingCrossbow(false);
             entity.getUseItem().set(DataComponents.CHARGED_PROJECTILES, ChargedProjectiles.EMPTY);
         }
@@ -53,7 +_,7 @@
 
     private void crossbowAttack(E shooter, LivingEntity target) {
         if (this.crossbowState == CrossbowAttack.CrossbowState.UNCHARGED) {
-            shooter.startUsingItem(ProjectileUtil.getWeaponHoldingHand(shooter, Items.CROSSBOW));
+            shooter.startUsingItem(ProjectileUtil.getWeaponHoldingHand(shooter, item -> item instanceof CrossbowItem));
             this.crossbowState = CrossbowAttack.CrossbowState.CHARGING;
             shooter.setChargingCrossbow(true);
         } else if (this.crossbowState == CrossbowAttack.CrossbowState.CHARGING) {
