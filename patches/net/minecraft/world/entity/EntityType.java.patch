--- a/net/minecraft/world/entity/EntityType.java
+++ b/net/minecraft/world/entity/EntityType.java
@@ -620,6 +_,10 @@
     private final EntityDimensions dimensions;
     private final FeatureFlagSet requiredFeatures;
 
+    private final java.util.function.Predicate<EntityType<?>> trackDeltasSupplier;
+    private final java.util.function.ToIntFunction<EntityType<?>> trackingRangeSupplier;
+    private final java.util.function.ToIntFunction<EntityType<?>> updateIntervalSupplier;
+
     private static <T extends Entity> EntityType<T> register(String p_20635_, EntityType.Builder<T> p_20636_) {
         return Registry.register(BuiltInRegistries.ENTITY_TYPE, p_20635_, p_20636_.build(p_20635_));
     }
@@ -645,6 +_,24 @@
         int p_273451_,
         FeatureFlagSet p_273518_
     ) {
+         this(p_273268_, p_272918_, p_273417_, p_273389_, p_273556_, p_272654_, p_273631_, p_272946_, p_272895_, p_273451_, p_273518_, EntityType::defaultTrackDeltasSupplier, EntityType::defaultTrackingRangeSupplier, EntityType::defaultUpdateIntervalSupplier);
+    }
+    public EntityType(
+        EntityType.EntityFactory<T> p_273268_,
+        MobCategory p_272918_,
+        boolean p_273417_,
+        boolean p_273389_,
+        boolean p_273556_,
+        boolean p_272654_,
+        ImmutableSet<Block> p_273631_,
+        EntityDimensions p_272946_,
+        int p_272895_,
+        int p_273451_,
+        FeatureFlagSet p_273518_,
+        final java.util.function.Predicate<EntityType<?>> trackDeltasSupplier,
+        final java.util.function.ToIntFunction<EntityType<?>> trackingRangeSupplier,
+        final java.util.function.ToIntFunction<EntityType<?>> updateIntervalSupplier
+    ) {
         this.factory = p_273268_;
         this.category = p_272918_;
         this.canSpawnFarFromPlayer = p_272654_;
@@ -656,6 +_,9 @@
         this.clientTrackingRange = p_272895_;
         this.updateInterval = p_273451_;
         this.requiredFeatures = p_273518_;
+        this.trackDeltasSupplier = trackDeltasSupplier;
+        this.trackingRangeSupplier = trackingRangeSupplier;
+        this.updateIntervalSupplier = updateIntervalSupplier;
     }
 
     @Nullable
@@ -760,6 +_,15 @@
                 mob.yHeadRot = mob.getYRot();
                 mob.yBodyRot = mob.getYRot();
                 mob.finalizeSpawn(p_262637_, p_262637_.getCurrentDifficultyAt(mob.blockPosition()), p_262666_, null, p_262687_);
+
+                if (mob.isSpawnCancelled()) {
+                    // Neo: Discard mob, spawn was cancelled
+                    mob.discard();
+                    // return null, mob was killed, context should be lost
+                    // fixes llamas for wandering trader spawning if wandering trader was cancelled
+                    return null;
+                }
+
                 mob.playAmbientSound();
             }
 
@@ -958,14 +_,23 @@
     }
 
     public int clientTrackingRange() {
+        return trackingRangeSupplier.applyAsInt(this);
+    }
+    private int defaultTrackingRangeSupplier() {
         return this.clientTrackingRange;
     }
 
     public int updateInterval() {
+        return updateIntervalSupplier.applyAsInt(this);
+    }
+    private int defaultUpdateIntervalSupplier() {
         return this.updateInterval;
     }
 
     public boolean trackDeltas() {
+        return this.trackDeltasSupplier.test(this);
+    }
+    private boolean defaultTrackDeltasSupplier() {
         return this != PLAYER
             && this != LLAMA_SPIT
             && this != WITHER
@@ -1001,6 +_,8 @@
         return this.builtInRegistryHolder;
     }
 
+    public Stream<TagKey<EntityType<?>>> getTags() {return this.builtInRegistryHolder().tags();}
+
     public static class Builder<T extends Entity> {
         private final EntityType.EntityFactory<T> factory;
         private final MobCategory category;
@@ -1014,6 +_,10 @@
         private EntityDimensions dimensions = EntityDimensions.scalable(0.6F, 1.8F);
         private FeatureFlagSet requiredFeatures = FeatureFlags.VANILLA_SET;
 
+        private java.util.function.Predicate<EntityType<?>> velocityUpdateSupplier = EntityType::defaultTrackDeltasSupplier;
+        private java.util.function.ToIntFunction<EntityType<?>> trackingRangeSupplier = EntityType::defaultTrackingRangeSupplier;
+        private java.util.function.ToIntFunction<EntityType<?>> updateIntervalSupplier = EntityType::defaultUpdateIntervalSupplier;
+
         private Builder(EntityType.EntityFactory<T> p_20696_, MobCategory p_20697_) {
             this.factory = p_20696_;
             this.category = p_20697_;
@@ -1073,6 +_,21 @@
             return this;
         }
 
+        public EntityType.Builder<T> setUpdateInterval(int interval) {
+             this.updateIntervalSupplier = t->interval;
+             return this;
+        }
+
+        public EntityType.Builder<T> setTrackingRange(int range) {
+             this.trackingRangeSupplier = t->range;
+             return this;
+        }
+
+        public EntityType.Builder<T> setShouldReceiveVelocityUpdates(boolean value) {
+             this.velocityUpdateSupplier = t->value;
+             return this;
+        }
+
         public EntityType<T> build(String p_20713_) {
             if (this.serialize) {
                 Util.fetchChoiceType(References.ENTITY_TREE, p_20713_);
@@ -1089,7 +_,10 @@
                 this.dimensions,
                 this.clientTrackingRange,
                 this.updateInterval,
-                this.requiredFeatures
+                this.requiredFeatures,
+                velocityUpdateSupplier,
+                trackingRangeSupplier,
+                updateIntervalSupplier
             );
         }
     }
