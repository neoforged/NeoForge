--- a/net/minecraft/world/effect/MobEffectInstance.java
+++ b/net/minecraft/world/effect/MobEffectInstance.java
@@ -78,6 +_,7 @@
         this.showIcon = p_216892_;
         this.hiddenEffect = p_216893_;
         this.factorData = p_216894_;
+        this.effect.fillEffectCures(this.cures, this);
     }
 
     public MobEffectInstance(MobEffectInstance p_19543_) {
@@ -96,6 +_,8 @@
         this.ambient = p_19549_.ambient;
         this.visible = p_19549_.visible;
         this.showIcon = p_19549_.showIcon;
+        this.cures.clear();
+        this.cures.addAll(p_19549_.cures);
     }
 
     public boolean update(MobEffectInstance p_19559_) {
@@ -272,6 +_,7 @@
     public CompoundTag save(CompoundTag p_19556_) {
         ResourceLocation resourcelocation = BuiltInRegistries.MOB_EFFECT.getKey(this.effect);
         p_19556_.putString("id", resourcelocation.toString());
+        net.neoforged.neoforge.common.CommonHooks.saveMobEffect(p_19556_, "neoforge:id", this.getEffect());
         this.writeDetailsTo(p_19556_);
         return p_19556_;
     }
@@ -295,6 +_,8 @@
                         .resultOrPartial(LOGGER::error)
                         .ifPresent(p_216906_ -> p_19568_.put("factor_calculation_data", p_216906_))
             );
+
+        writeCures(p_19568_);
     }
 
     @Nullable
@@ -332,7 +_,7 @@
             optional = Optional.empty();
         }
 
-        return new MobEffectInstance(p_19546_, j, Math.max(i, 0), flag, flag1, flag2, mobeffectinstance, optional);
+        return new MobEffectInstance(p_19546_, j, Math.max(i, 0), flag, flag1, flag2, mobeffectinstance, optional).readCures(p_19547_);
     }
 
     public int compareTo(MobEffectInstance p_19566_) {
@@ -342,12 +_,42 @@
                 .compareFalseFirst(this.isAmbient(), p_19566_.isAmbient())
                 .compareFalseFirst(this.isInfiniteDuration(), p_19566_.isInfiniteDuration())
                 .compare(this.getDuration(), p_19566_.getDuration())
-                .compare(this.getEffect().getColor(), p_19566_.getEffect().getColor())
+                .compare(this.getEffect().getSortOrder(this), p_19566_.getEffect().getSortOrder(p_19566_))
                 .result()
             : ComparisonChain.start()
                 .compare(this.isAmbient(), p_19566_.isAmbient())
-                .compare(this.getEffect().getColor(), p_19566_.getEffect().getColor())
+                .compare(this.getEffect().getSortOrder(this), p_19566_.getEffect().getSortOrder(p_19566_))
                 .result();
+    }
+
+    private final java.util.Set<net.neoforged.neoforge.common.EffectCure> cures = com.google.common.collect.Sets.newIdentityHashSet();
+
+    /**
+     * {@return the {@link net.neoforged.neoforge.common.EffectCure}s which can cure the {@link MobEffect} held by this {@link MobEffectInstance}}
+     */
+    public java.util.Set<net.neoforged.neoforge.common.EffectCure> getCures() {
+        return cures;
+    }
+
+    private MobEffectInstance readCures(CompoundTag tag) {
+        cures.clear(); // Overwrite cures with ones stored in NBT, if any
+        if (tag.contains("neoforge:cures", Tag.TAG_LIST)) {
+            net.minecraft.nbt.ListTag list = tag.getList("neoforge:cures", Tag.TAG_STRING);
+            for (int i = 0; i < list.size(); i++) {
+                cures.add(net.neoforged.neoforge.common.EffectCure.get(list.getString(i)));
+            }
+        }
+        return this;
+    }
+
+    private void writeCures(CompoundTag tag) {
+        if (!cures.isEmpty()) {
+            net.minecraft.nbt.ListTag list = new net.minecraft.nbt.ListTag();
+            for (net.neoforged.neoforge.common.EffectCure cure : cures) {
+                list.add(net.minecraft.nbt.StringTag.valueOf(cure.name()));
+            }
+            tag.put("neoforge:cures", list);
+        }
     }
 
     public static class FactorData {
