--- a/net/minecraft/world/inventory/MenuType.java
+++ b/net/minecraft/world/inventory/MenuType.java
@@ -8,7 +_,7 @@
 import net.minecraft.world.flag.FeatureFlagSet;
 import net.minecraft.world.flag.FeatureFlags;
 
-public class MenuType<T extends AbstractContainerMenu> implements FeatureElement {
+public class MenuType<T extends AbstractContainerMenu> implements FeatureElement, net.neoforged.neoforge.common.extensions.IMenuTypeExtension<T> {
     public static final MenuType<ChestMenu> GENERIC_9x1 = register("generic_9x1", ChestMenu::oneRow);
     public static final MenuType<ChestMenu> GENERIC_9x2 = register("generic_9x2", ChestMenu::twoRows);
     public static final MenuType<ChestMenu> GENERIC_9x3 = register("generic_9x3", ChestMenu::threeRows);
@@ -36,6 +_,7 @@
     public static final MenuType<StonecutterMenu> STONECUTTER = register("stonecutter", StonecutterMenu::new);
     private final FeatureFlagSet requiredFeatures;
     private final MenuType.MenuSupplier<T> constructor;
+    private final it.unimi.dsi.fastutil.objects.ReferenceSet<net.neoforged.neoforge.flag.Flag> requiredFlags;
 
     private static <T extends AbstractContainerMenu> MenuType<T> register(String p_39989_, MenuType.MenuSupplier<T> p_39990_) {
         return Registry.register(BuiltInRegistries.MENU, p_39989_, new MenuType<>(p_39990_, FeatureFlags.VANILLA_SET));
@@ -48,6 +_,13 @@
     public MenuType(MenuType.MenuSupplier<T> p_267054_, FeatureFlagSet p_266909_) {
         this.constructor = p_267054_;
         this.requiredFeatures = p_266909_;
+        this.requiredFlags = it.unimi.dsi.fastutil.objects.ReferenceSets.emptySet();
+    }
+
+    public MenuType(MenuType.MenuSupplier<T> p_267054_, FeatureFlagSet p_266909_, net.neoforged.neoforge.flag.Flag[] requiredFlags) {
+        this.constructor = p_267054_;
+        this.requiredFeatures = p_266909_;
+        this.requiredFlags = it.unimi.dsi.fastutil.objects.ReferenceSet.of(requiredFlags);
     }
 
     public T create(int p_39986_, Inventory p_39987_) {
@@ -55,8 +_,21 @@
     }
 
     @Override
+    public T create(int windowId, Inventory playerInv, net.minecraft.network.RegistryFriendlyByteBuf extraData) {
+        if (this.constructor instanceof net.neoforged.neoforge.network.IContainerFactory) {
+            return ((net.neoforged.neoforge.network.IContainerFactory<T>) this.constructor).create(windowId, playerInv, extraData);
+        }
+        return create(windowId, playerInv);
+    }
+
+    @Override
     public FeatureFlagSet requiredFeatures() {
         return this.requiredFeatures;
+    }
+
+    @Override
+    public final it.unimi.dsi.fastutil.objects.ReferenceSet<net.neoforged.neoforge.flag.Flag> requiredFlags() {
+        return requiredFlags;
     }
 
     public interface MenuSupplier<T extends AbstractContainerMenu> {
