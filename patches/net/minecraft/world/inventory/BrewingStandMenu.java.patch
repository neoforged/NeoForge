--- a/net/minecraft/world/inventory/BrewingStandMenu.java
+++ b/net/minecraft/world/inventory/BrewingStandMenu.java
@@ -41,9 +_,9 @@
         this.brewingStand = brewingStandContainer;
         this.brewingStandData = brewingStandData;
         PotionBrewing potionbrewing = playerInventory.player.level().potionBrewing();
-        this.addSlot(new BrewingStandMenu.PotionSlot(brewingStandContainer, 0, 56, 51));
-        this.addSlot(new BrewingStandMenu.PotionSlot(brewingStandContainer, 1, 79, 58));
-        this.addSlot(new BrewingStandMenu.PotionSlot(brewingStandContainer, 2, 102, 51));
+        this.addSlot(new BrewingStandMenu.PotionSlot(potionbrewing, brewingStandContainer, 0, 56, 51));
+        this.addSlot(new BrewingStandMenu.PotionSlot(potionbrewing, brewingStandContainer, 1, 79, 58));
+        this.addSlot(new BrewingStandMenu.PotionSlot(potionbrewing, brewingStandContainer, 2, 102, 51));
         this.ingredientSlot = this.addSlot(new BrewingStandMenu.IngredientsSlot(potionbrewing, brewingStandContainer, 3, 79, 17));
         this.addSlot(new BrewingStandMenu.FuelSlot(brewingStandContainer, 4, 17, 17));
         this.addDataSlots(brewingStandData);
@@ -81,7 +_,7 @@
                     if (!this.moveItemStackTo(itemstack1, 3, 4, false)) {
                         return ItemStack.EMPTY;
                     }
-                } else if (BrewingStandMenu.PotionSlot.mayPlaceItem(itemstack)) {
+                } else if (BrewingStandMenu.PotionSlot.mayPlaceItem(player.level().potionBrewing(), itemstack)) {
                     if (!this.moveItemStackTo(itemstack1, 0, 3, false)) {
                         return ItemStack.EMPTY;
                     }
@@ -158,13 +_,20 @@
     }
 
     static class PotionSlot extends Slot {
+        private final PotionBrewing potionBrewing;
+
         public PotionSlot(Container container, int slot, int x, int y) {
+            this(PotionBrewing.EMPTY, container, slot, x, y);
+        }
+
+        public PotionSlot(PotionBrewing potionBrewing, Container container, int slot, int x, int y) {
             super(container, slot, x, y);
+            this.potionBrewing = potionBrewing;
         }
 
         @Override
         public boolean mayPlace(ItemStack stack) {
-            return mayPlaceItem(stack);
+            return mayPlaceItem(this.potionBrewing, stack);
         }
 
         @Override
@@ -176,14 +_,20 @@
         public void onTake(Player player, ItemStack stack) {
             Optional<Holder<Potion>> optional = stack.getOrDefault(DataComponents.POTION_CONTENTS, PotionContents.EMPTY).potion();
             if (optional.isPresent() && player instanceof ServerPlayer serverplayer) {
+                net.neoforged.neoforge.event.EventHooks.onPlayerBrewedPotion(player, stack);
                 CriteriaTriggers.BREWED_POTION.trigger(serverplayer, optional.get());
             }
 
             super.onTake(player, stack);
         }
 
+        @Deprecated // Neo: use the overload that takes PotionBrewing instead
         public static boolean mayPlaceItem(ItemStack stack) {
             return stack.is(Items.POTION) || stack.is(Items.SPLASH_POTION) || stack.is(Items.LINGERING_POTION) || stack.is(Items.GLASS_BOTTLE);
+        }
+
+        public static boolean mayPlaceItem(PotionBrewing potionBrewing, ItemStack stack) {
+            return potionBrewing.isInput(stack) || stack.is(Items.GLASS_BOTTLE);
         }
     }
 }
