--- a/net/minecraft/world/item/crafting/ShapelessRecipe.java
+++ b/net/minecraft/world/item/crafting/ShapelessRecipe.java
@@ -24,12 +_,14 @@
     final List<Ingredient> ingredients;
     @Nullable
     private PlacementInfo placementInfo;
+    private final boolean isSimple;
 
     public ShapelessRecipe(String p_249640_, CraftingBookCategory p_249390_, ItemStack p_252071_, List<Ingredient> p_361103_) {
         this.group = p_249640_;
         this.category = p_249390_;
         this.result = p_252071_;
         this.ingredients = p_361103_;
+        this.isSimple = p_361103_.stream().allMatch(Ingredient::isSimple);
     }
 
     @Override
@@ -59,6 +_,12 @@
     public boolean matches(CraftingInput p_346123_, Level p_44263_) {
         if (p_346123_.ingredientCount() != this.ingredients.size()) {
             return false;
+        } else if (!isSimple) {
+            var nonEmptyItems = new java.util.ArrayList<ItemStack>(p_346123_.ingredientCount());
+            for (var item : p_346123_.items())
+                if (!item.isEmpty())
+                    nonEmptyItems.add(item);
+            return net.neoforged.neoforge.common.util.RecipeMatcher.findMatches(nonEmptyItems, this.ingredients) != null;
         } else {
             return p_346123_.size() == 1 && this.ingredients.size() == 1
                 ? this.ingredients.getFirst().test(p_346123_.getItem(0))
@@ -87,7 +_,7 @@
                         Codec.STRING.optionalFieldOf("group", "").forGetter(p_301127_ -> p_301127_.group),
                         CraftingBookCategory.CODEC.fieldOf("category").orElse(CraftingBookCategory.MISC).forGetter(p_301133_ -> p_301133_.category),
                         ItemStack.STRICT_CODEC.fieldOf("result").forGetter(p_301142_ -> p_301142_.result),
-                        Ingredient.CODEC.listOf(1, 9).fieldOf("ingredients").forGetter(p_360071_ -> p_360071_.ingredients)
+                        Codec.lazyInitialized(() -> Ingredient.CODEC.listOf(1, ShapedRecipePattern.maxHeight * ShapedRecipePattern.maxWidth)).fieldOf("ingredients").forGetter(p_360071_ -> p_360071_.ingredients)
                     )
                     .apply(p_360072_, ShapelessRecipe::new)
         );
