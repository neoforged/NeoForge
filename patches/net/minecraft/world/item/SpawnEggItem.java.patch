--- a/net/minecraft/world/item/SpawnEggItem.java
+++ b/net/minecraft/world/item/SpawnEggItem.java
@@ -42,11 +_,14 @@
     private final int highlightColor;
     private final EntityType<?> defaultType;
 
+    /** @deprecated Forge: Use {@link net.neoforged.neoforge.common.DeferredSpawnEggItem} instead for suppliers */
+    @Deprecated
     public SpawnEggItem(EntityType<? extends Mob> defaultType, int backgroundColor, int highlightColor, Item.Properties properties) {
         super(properties);
         this.defaultType = defaultType;
         this.backgroundColor = backgroundColor;
         this.highlightColor = highlightColor;
+        if (defaultType != null)
         BY_ID.put(defaultType, this);
     }
 
@@ -134,6 +_,8 @@
 
     @Nullable
     public static SpawnEggItem byId(@Nullable EntityType<?> type) {
+        var ret = net.neoforged.neoforge.common.DeferredSpawnEggItem.deferredOnlyById(type);
+        if (ret != null) return ret;
         return BY_ID.get(type);
     }
 
@@ -143,12 +_,12 @@
 
     public EntityType<?> getType(ItemStack stack) {
         CustomData customdata = stack.getOrDefault(DataComponents.ENTITY_DATA, CustomData.EMPTY);
-        return !customdata.isEmpty() ? customdata.read(ENTITY_TYPE_FIELD_CODEC).result().orElse(this.defaultType) : this.defaultType;
+        return !customdata.isEmpty() ? customdata.read(ENTITY_TYPE_FIELD_CODEC).result().orElse(getDefaultType()) : getDefaultType();
     }
 
     @Override
     public FeatureFlagSet requiredFeatures() {
-        return this.defaultType.requiredFeatures();
+        return this.getDefaultType().requiredFeatures();
     }
 
     public Optional<Mob> spawnOffspringFromSpawnEgg(
@@ -179,5 +_,9 @@
                 }
             }
         }
+    }
+
+    protected EntityType<?> getDefaultType() {
+        return defaultType;
     }
 }
