--- a/net/minecraft/world/item/AxeItem.java
+++ b/net/minecraft/world/item/AxeItem.java
@@ -55,10 +_,9 @@
       BlockPos blockpos = p_40529_.getClickedPos();
       Player player = p_40529_.getPlayer();
       BlockState blockstate = level.getBlockState(blockpos);
-      Optional<BlockState> optional = this.getStripped(blockstate);
-      Optional<BlockState> optional1 = WeatheringCopper.getPrevious(blockstate);
-      Optional<BlockState> optional2 = Optional.ofNullable(HoneycombItem.WAX_OFF_BY_BLOCK.get().get(blockstate.getBlock()))
-         .map(p_150694_ -> p_150694_.withPropertiesOf(blockstate));
+      Optional<BlockState> optional = Optional.ofNullable(blockstate.getToolModifiedState(p_40529_, net.neoforged.neoforge.common.ToolActions.AXE_STRIP, false));
+      Optional<BlockState> optional1 = optional.isPresent() ? Optional.empty() : Optional.ofNullable(blockstate.getToolModifiedState(p_40529_, net.neoforged.neoforge.common.ToolActions.AXE_SCRAPE, false));
+      Optional<BlockState> optional2 = optional.isPresent() || optional1.isPresent() ? Optional.empty() : Optional.ofNullable(blockstate.getToolModifiedState(p_40529_, net.neoforged.neoforge.common.ToolActions.AXE_WAX_OFF, false));
       ItemStack itemstack = p_40529_.getItemInHand();
       Optional<BlockState> optional3 = Optional.empty();
       if (optional.isPresent()) {
@@ -91,8 +_,19 @@
       }
    }
 
+   @org.jetbrains.annotations.Nullable
+   public static BlockState getAxeStrippingState(BlockState originalState) {
+      Block block = STRIPPABLES.get(originalState.getBlock());
+      return block != null ? block.defaultBlockState().setValue(RotatedPillarBlock.AXIS, originalState.getValue(RotatedPillarBlock.AXIS)) : null;
+   }
+
    private Optional<BlockState> getStripped(BlockState p_150691_) {
       return Optional.ofNullable(STRIPPABLES.get(p_150691_.getBlock()))
          .map(p_150689_ -> p_150689_.defaultBlockState().setValue(RotatedPillarBlock.AXIS, p_150691_.getValue(RotatedPillarBlock.AXIS)));
+   }
+
+   @Override
+   public boolean canPerformAction(ItemStack stack, net.neoforged.neoforge.common.ToolAction toolAction) {
+      return net.neoforged.neoforge.common.ToolActions.DEFAULT_AXE_ACTIONS.contains(toolAction);
    }
 }
