--- a/net/minecraft/client/MouseHandler.java
+++ b/net/minecraft/client/MouseHandler.java
@@ -74,6 +_,7 @@
                 this.activeButton = -1;
             }
 
+            if (net.neoforged.neoforge.client.ClientHooks.onMouseButtonPre(p_91532_, p_91533_, p_91534_)) return;
             boolean[] aboolean = new boolean[]{false};
             if (this.minecraft.getOverlay() == null) {
                 if (this.minecraft.screen == null) {
@@ -86,13 +_,21 @@
                     Screen screen = this.minecraft.screen;
                     if (flag) {
                         screen.afterMouseAction();
-                        Screen.wrapScreenError(
-                            () -> aboolean[0] = screen.mouseClicked(d0, d1, i), "mouseClicked event handler", screen.getClass().getCanonicalName()
-                        );
+                        Screen.wrapScreenError(() -> {
+                            aboolean[0] = net.neoforged.neoforge.client.ClientHooks.onScreenMouseClickedPre(screen, d0, d1, i);
+                            if (!aboolean[0]) {
+                                aboolean[0] = screen.mouseClicked(d0, d1, i);
+                                aboolean[0] = net.neoforged.neoforge.client.ClientHooks.onScreenMouseClickedPost(screen, d0, d1, i, aboolean[0]);
+                            }
+                        }, "mouseClicked event handler", screen.getClass().getCanonicalName());
                     } else {
-                        Screen.wrapScreenError(
-                            () -> aboolean[0] = screen.mouseReleased(d0, d1, i), "mouseReleased event handler", screen.getClass().getCanonicalName()
-                        );
+                        Screen.wrapScreenError(() -> {
+                            aboolean[0] = net.neoforged.neoforge.client.ClientHooks.onScreenMouseReleasedPre(screen, d0, d1, i);
+                            if (!aboolean[0]) {
+                                aboolean[0] = screen.mouseReleased(d0, d1, i);
+                                aboolean[0] = net.neoforged.neoforge.client.ClientHooks.onScreenMouseReleasedPost(screen, d0, d1, i, aboolean[0]);
+                            }
+                        }, "mouseReleased event handler", screen.getClass().getCanonicalName());
                     }
                 }
             }
@@ -115,6 +_,7 @@
                     }
                 }
             }
+            net.neoforged.neoforge.client.ClientHooks.onMouseButtonPost(p_91532_, p_91533_, p_91534_);
         }
     }
 
@@ -128,7 +_,11 @@
                 if (this.minecraft.screen != null) {
                     double d3 = this.xpos * (double)this.minecraft.getWindow().getGuiScaledWidth() / (double)this.minecraft.getWindow().getScreenWidth();
                     double d4 = this.ypos * (double)this.minecraft.getWindow().getGuiScaledHeight() / (double)this.minecraft.getWindow().getScreenHeight();
-                    this.minecraft.screen.mouseScrolled(d3, d4, d1, d2);
+                    if (!net.neoforged.neoforge.client.ClientHooks.onScreenMouseScrollPre(this, this.minecraft.screen, d1, d2)) {
+                        if (!this.minecraft.screen.mouseScrolled(d3, d4, d1, d2)) {
+                            net.neoforged.neoforge.client.ClientHooks.onScreenMouseScrollPost(this, this.minecraft.screen, d1, d2);
+                        }
+                    }
                     this.minecraft.screen.afterMouseAction();
                 } else if (this.minecraft.player != null) {
                     if (this.accumulatedScrollX != 0.0 && Math.signum(d1) != Math.signum(this.accumulatedScrollX)) {
@@ -150,6 +_,7 @@
                     this.accumulatedScrollX -= (double)j;
                     this.accumulatedScrollY -= (double)i;
                     int k = i == 0 ? -j : i;
+                    if (net.neoforged.neoforge.client.ClientHooks.onMouseScroll(this, d1, d2)) return;
                     if (this.minecraft.player.isSpectator()) {
                         if (this.minecraft.gui.getSpectatorGui().isMenuActive()) {
                             this.minecraft.gui.getSpectatorGui().onMouseScrolled(-k);
@@ -209,9 +_,11 @@
                     double d3 = (p_91564_ - this.ypos)
                         * (double)this.minecraft.getWindow().getGuiScaledHeight()
                         / (double)this.minecraft.getWindow().getScreenHeight();
-                    Screen.wrapScreenError(
-                        () -> screen.mouseDragged(d0, d1, this.activeButton, d2, d3), "mouseDragged event handler", screen.getClass().getCanonicalName()
-                    );
+                    Screen.wrapScreenError(() -> {
+                        if (net.neoforged.neoforge.client.ClientHooks.onScreenMouseDragPre(screen, d0, d1, this.activeButton, d2, d3)) return;
+                        if (screen.mouseDragged(d0, d1, this.activeButton, d2, d3)) return;
+                        net.neoforged.neoforge.client.ClientHooks.onScreenMouseDragPost(screen, d0, d1, this.activeButton, d2, d3);
+                    }, "mouseDragged event handler", screen.getClass().getCanonicalName());
                 }
 
                 screen.afterMouseMove();
@@ -235,12 +_,13 @@
         double d1 = d0 - this.lastMouseEventTime;
         this.lastMouseEventTime = d0;
         if (this.isMouseGrabbed() && this.minecraft.isWindowActive()) {
-            double d4 = this.minecraft.options.sensitivity().get() * 0.6F + 0.2F;
+            var event = net.neoforged.neoforge.client.ClientHooks.getTurnPlayerValues(this.minecraft.options.sensitivity().get(), this.minecraft.options.smoothCamera);
+            double d4 = event.getMouseSensitivity() * 0.6F + 0.2F;
             double d5 = d4 * d4 * d4;
             double d6 = d5 * 8.0;
             double d2;
             double d3;
-            if (this.minecraft.options.smoothCamera) {
+            if (event.getCinematicCameraEnabled()) {
                 double d7 = this.smoothTurnX.getNewDeltaValue(this.accumulatedDX * d6, d1 * d6);
                 double d8 = this.smoothTurnY.getNewDeltaValue(this.accumulatedDY * d6, d1 * d6);
                 d2 = d7;
@@ -292,6 +_,14 @@
 
     public double ypos() {
         return this.ypos;
+    }
+
+    public double getXVelocity() {
+        return this.accumulatedDX;
+    }
+
+    public double getYVelocity() {
+        return this.accumulatedDY;
     }
 
     public void setIgnoreFirstMove() {
