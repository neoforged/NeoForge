--- a/net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen.java
+++ b/net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen.java
@@ -47,12 +_,17 @@
         Collection<MobEffectInstance> collection = this.minecraft.player.getActiveEffects();
         if (!collection.isEmpty() && j >= 32) {
             boolean flag = j >= 120;
+            var event = net.neoforged.neoforge.client.ClientHooks.onScreenPotionSize(this, j, !flag, i);
+            if (event.isCanceled()) return;
+            flag = !event.isCompact();
+            i = event.getHorizontalOffset();
             int k = 33;
             if (collection.size() > 5) {
                 k = 132 / (collection.size() - 1);
             }
 
-            Iterable<MobEffectInstance> iterable = Ordering.natural().sortedCopy(collection);
+
+            Iterable<MobEffectInstance> iterable = collection.stream().filter(net.neoforged.neoforge.client.ClientHooks::shouldRenderEffect).sorted().collect(java.util.stream.Collectors.toList());
             this.renderBackgrounds(guiGraphics, i, k, iterable, flag);
             this.renderIcons(guiGraphics, i, k, iterable, flag);
             if (flag) {
@@ -74,6 +_,8 @@
                         this.getEffectName(mobeffectinstance),
                         MobEffectUtil.formatDuration(mobeffectinstance, 1.0F, this.minecraft.level.tickRateManager().tickrate())
                     );
+                    // Neo: Allow mods to adjust the tooltip shown when hovering a mob effect.
+                    list = net.neoforged.neoforge.client.ClientHooks.getEffectTooltip(this, mobeffectinstance, list);
                     guiGraphics.renderTooltip(this.font, list, Optional.empty(), mouseX, mouseY);
                 }
             }
@@ -99,6 +_,11 @@
         int i = this.topPos;
 
         for (MobEffectInstance mobeffectinstance : effects) {
+            var renderer = net.neoforged.neoforge.client.extensions.common.IClientMobEffectExtensions.of(mobeffectinstance);
+            if (renderer.renderInventoryIcon(mobeffectinstance, this, guiGraphics, renderX + (isSmall ? 6 : 7), i, 0)) {
+                i += yOffset;
+                continue;
+            }
             Holder<MobEffect> holder = mobeffectinstance.getEffect();
             TextureAtlasSprite textureatlassprite = mobeffecttexturemanager.get(holder);
             guiGraphics.blit(renderX + (isSmall ? 6 : 7), i + 7, 0, 18, 18, textureatlassprite);
@@ -110,6 +_,11 @@
         int i = this.topPos;
 
         for (MobEffectInstance mobeffectinstance : effects) {
+            var renderer = net.neoforged.neoforge.client.extensions.common.IClientMobEffectExtensions.of(mobeffectinstance);
+            if (renderer.renderInventoryText(mobeffectinstance, this, guiGraphics, renderX, i, 0)) {
+                i += yOffset;
+                continue;
+            }
             Component component = this.getEffectName(mobeffectinstance);
             guiGraphics.drawString(this.font, component, renderX + 10 + 18, i + 6, 16777215);
             Component component1 = MobEffectUtil.formatDuration(mobeffectinstance, 1.0F, this.minecraft.level.tickRateManager().tickrate());
