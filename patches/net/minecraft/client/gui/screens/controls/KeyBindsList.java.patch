--- a/net/minecraft/client/gui/screens/controls/KeyBindsList.java
+++ b/net/minecraft/client/gui/screens/controls/KeyBindsList.java
@@ -158,6 +_,7 @@
                 )
                 .build();
             this.resetButton = Button.builder(RESET_BUTTON_TITLE, p_329729_ -> {
+                this.key.setToDefault();
                 KeyBindsList.this.minecraft.options.setKey(p_193916_, p_193916_.getDefaultKey());
                 KeyBindsList.this.resetMappingAndUpdateButtons();
             }).bounds(0, 0, 50, 20).createNarration(p_253313_ -> Component.translatable("narrator.controls.reset", p_193917_)).build();
@@ -184,7 +_,7 @@
             int k = i - 5 - this.changeButton.getWidth();
             this.changeButton.setPosition(k, j);
             this.changeButton.render(p_281805_, p_282224_, p_282053_, p_281432_);
-            p_281805_.drawString(KeyBindsList.this.minecraft.font, this.name, p_281373_, p_282357_ + p_281932_ / 2 - 9 / 2, -1);
+            p_281805_.drawScrollingString(KeyBindsList.this.minecraft.font, this.name, p_281373_, k - 9, p_282357_ + p_281932_ / 2 - 9 / 2, -1); // Neo: Makes descriptions start scrolling if too long
             if (this.hasCollision) {
                 int l = 3;
                 int i1 = this.changeButton.getX() - 6;
@@ -210,7 +_,7 @@
             MutableComponent mutablecomponent = Component.empty();
             if (!this.key.isUnbound()) {
                 for (KeyMapping keymapping : KeyBindsList.this.minecraft.options.keyMappings) {
-                    if (keymapping != this.key && this.key.same(keymapping)) {
+                    if ((keymapping != this.key && this.key.same(keymapping)) || keymapping.hasKeyModifierConflict(this.key)) { // Neo: gracefully handle conflicts like SHIFT vs SHIFT+G
                         if (this.hasCollision) {
                             mutablecomponent.append(", ");
                         }
