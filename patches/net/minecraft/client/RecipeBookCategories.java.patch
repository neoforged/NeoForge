--- a/net/minecraft/client/RecipeBookCategories.java
+++ b/net/minecraft/client/RecipeBookCategories.java
@@ -12,7 +_,7 @@
 import net.neoforged.api.distmarker.OnlyIn;
 
 @OnlyIn(Dist.CLIENT)
-public enum RecipeBookCategories {
+public enum RecipeBookCategories implements net.neoforged.fml.common.asm.enumextension.IExtensibleEnum {
     CRAFTING_SEARCH(new ItemStack(Items.COMPASS)),
     CRAFTING_BUILDING_BLOCKS(new ItemStack(Blocks.BRICKS)),
     CRAFTING_REDSTONE(new ItemStack(Items.REDSTONE)),
@@ -38,20 +_,20 @@
     public static final List<RecipeBookCategories> CRAFTING_CATEGORIES = ImmutableList.of(
         CRAFTING_SEARCH, CRAFTING_EQUIPMENT, CRAFTING_BUILDING_BLOCKS, CRAFTING_MISC, CRAFTING_REDSTONE
     );
-    public static final Map<RecipeBookCategories, List<RecipeBookCategories>> AGGREGATE_CATEGORIES = ImmutableMap.of(
-        CRAFTING_SEARCH,
-        ImmutableList.of(CRAFTING_EQUIPMENT, CRAFTING_BUILDING_BLOCKS, CRAFTING_MISC, CRAFTING_REDSTONE),
-        FURNACE_SEARCH,
-        ImmutableList.of(FURNACE_FOOD, FURNACE_BLOCKS, FURNACE_MISC),
-        BLAST_FURNACE_SEARCH,
-        ImmutableList.of(BLAST_FURNACE_BLOCKS, BLAST_FURNACE_MISC),
-        SMOKER_SEARCH,
-        ImmutableList.of(SMOKER_FOOD)
-    );
+    public static final Map<RecipeBookCategories, List<RecipeBookCategories>> AGGREGATE_CATEGORIES = net.neoforged.neoforge.client.RecipeBookManager.getAggregateCategories();
+    @Deprecated // Neo: Empty for custom categories. Use the getter.
     private final List<ItemStack> itemIcons;
+    private final java.util.function.Supplier<List<ItemStack>> itemIconsSupplier;
 
+    @net.neoforged.fml.common.asm.enumextension.ReservedConstructor
     private RecipeBookCategories(ItemStack... itemIcons) {
         this.itemIcons = ImmutableList.copyOf(itemIcons);
+        this.itemIconsSupplier = () -> this.itemIcons;
+    }
+
+    private RecipeBookCategories(java.util.function.Supplier<List<ItemStack>> itemIconsSupplier) {
+        this.itemIcons = List.of();
+        this.itemIconsSupplier = net.neoforged.neoforge.common.util.Lazy.of(itemIconsSupplier);
     }
 
     public static List<RecipeBookCategories> getCategories(RecipeBookType recipeBookType) {
@@ -60,10 +_,15 @@
             case FURNACE -> FURNACE_CATEGORIES;
             case BLAST_FURNACE -> BLAST_FURNACE_CATEGORIES;
             case SMOKER -> SMOKER_CATEGORIES;
+            default -> net.neoforged.neoforge.client.RecipeBookManager.getCustomCategoriesOrEmpty(recipeBookType);
         };
     }
 
     public List<ItemStack> getIconItems() {
-        return this.itemIcons;
+        return this.itemIconsSupplier.get();
+    }
+
+    public static net.neoforged.fml.common.asm.enumextension.ExtensionInfo getExtensionInfo() {
+        return net.neoforged.fml.common.asm.enumextension.ExtensionInfo.nonExtended(RecipeBookCategories.class);
     }
 }
