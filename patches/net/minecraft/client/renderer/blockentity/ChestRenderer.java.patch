--- a/net/minecraft/client/renderer/blockentity/ChestRenderer.java
+++ b/net/minecraft/client/renderer/blockentity/ChestRenderer.java
@@ -128,7 +_,7 @@
             f1 = 1.0F - f1;
             f1 = 1.0F - f1 * f1 * f1;
             int i = neighborcombineresult.apply(new BrightnessCombiner<>()).applyAsInt(packedLight);
-            Material material = Sheets.chooseMaterial(blockEntity, chesttype, this.xmasTextures);
+            Material material = this.getMaterial(blockEntity, chesttype);
             VertexConsumer vertexconsumer = material.buffer(bufferSource, RenderType::entityCutout);
             if (flag1) {
                 if (chesttype == ChestType.LEFT) {
@@ -159,5 +_,15 @@
         lidPart.render(poseStack, consumer, packedLight, packedOverlay);
         lockPart.render(poseStack, consumer, packedLight, packedOverlay);
         bottomPart.render(poseStack, consumer, packedLight, packedOverlay);
+    }
+
+    protected Material getMaterial(T blockEntity, ChestType chestType) {
+        return Sheets.chooseMaterial(blockEntity, chestType, this.xmasTextures);
+    }
+
+    @Override
+    public net.minecraft.world.phys.AABB getRenderBoundingBox(T blockEntity) {
+        net.minecraft.core.BlockPos pos = blockEntity.getBlockPos();
+        return net.minecraft.world.phys.AABB.encapsulatingFullBlocks(pos.offset(-1, 0, -1), pos.offset(1, 1, 1));
     }
 }
