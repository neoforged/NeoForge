--- a/net/minecraft/client/renderer/blockentity/ChestRenderer.java
+++ b/net/minecraft/client/renderer/blockentity/ChestRenderer.java
@@ -133,7 +_,7 @@
             f1 = 1.0F - f1;
             f1 = 1.0F - f1 * f1 * f1;
             int i = neighborcombineresult.<Int2IntFunction>apply(new BrightnessCombiner<>()).applyAsInt(p_112367_);
-            Material material = Sheets.chooseMaterial(p_112363_, chesttype, this.xmasTextures);
+            Material material = this.getMaterial(p_112363_, chesttype);
             VertexConsumer vertexconsumer = material.buffer(p_112366_, RenderType::entityCutout);
             if (flag1) {
                 if (chesttype == ChestType.LEFT) {
@@ -164,5 +_,15 @@
         p_112372_.render(p_112370_, p_112371_, p_112376_, p_112377_);
         p_112373_.render(p_112370_, p_112371_, p_112376_, p_112377_);
         p_112374_.render(p_112370_, p_112371_, p_112376_, p_112377_);
+    }
+
+    protected Material getMaterial(T blockEntity, ChestType chestType) {
+        return Sheets.chooseMaterial(blockEntity, chestType, this.xmasTextures);
+    }
+
+    @Override
+    public net.minecraft.world.phys.AABB getRenderBoundingBox(T blockEntity) {
+        net.minecraft.core.BlockPos pos = blockEntity.getBlockPos();
+        return net.minecraft.world.phys.AABB.encapsulatingFullBlocks(pos.offset(-1, 0, -1), pos.offset(1, 1, 1));
     }
 }
