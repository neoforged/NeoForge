--- a/net/minecraft/client/renderer/chunk/SectionRenderDispatcher.java
+++ b/net/minecraft/client/renderer/chunk/SectionRenderDispatcher.java
@@ -441,14 +_,15 @@
 
         public SectionRenderDispatcher.RenderSection.CompileTask createCompileTask(RenderRegionCache regionCache) {
             boolean flag = this.cancelTasks();
-            RenderChunkRegion renderchunkregion = regionCache.createRegion(SectionRenderDispatcher.this.level, SectionPos.of(this.origin));
+            var additionalRenderers = net.neoforged.neoforge.client.ClientHooks.gatherAdditionalRenderers(this.origin, SectionRenderDispatcher.this.level);
+            RenderChunkRegion renderchunkregion = regionCache.createRegion(SectionRenderDispatcher.this.level, SectionPos.of(this.origin), additionalRenderers.isEmpty());
             boolean flag1 = this.compiled.get() == SectionRenderDispatcher.CompiledSection.UNCOMPILED;
             if (flag1 && flag) {
                 this.initialCompilationCancelCount.incrementAndGet();
             }
 
             this.lastRebuildTask = new SectionRenderDispatcher.RenderSection.RebuildTask(
-                this.getDistToPlayerSqr(), renderchunkregion, !flag1 || this.initialCompilationCancelCount.get() > 2
+                this.getDistToPlayerSqr(), renderchunkregion, !flag1 || this.initialCompilationCancelCount.get() > 2, additionalRenderers
             );
             return this.lastRebuildTask;
         }
@@ -523,10 +_,17 @@
         class RebuildTask extends SectionRenderDispatcher.RenderSection.CompileTask {
             @Nullable
             protected RenderChunkRegion region;
+            private final List<net.neoforged.neoforge.client.event.AddSectionGeometryEvent.AdditionalSectionRenderer> additionalRenderers;
 
+            @Deprecated
             public RebuildTask(double distAtCreation, @Nullable RenderChunkRegion region, boolean isHighPriority) {
+                this(distAtCreation, region, isHighPriority, List.of());
+            }
+
+            public RebuildTask(double distAtCreation, @Nullable RenderChunkRegion region, boolean isHighPriority, List<net.neoforged.neoforge.client.event.AddSectionGeometryEvent.AdditionalSectionRenderer> additionalRenderers) {
                 super(distAtCreation, isHighPriority);
                 this.region = region;
+                this.additionalRenderers = additionalRenderers;
             }
 
             @Override
@@ -552,7 +_,7 @@
                     } else {
                         SectionPos sectionpos = SectionPos.of(RenderSection.this.origin);
                         SectionCompiler.Results sectioncompiler$results = SectionRenderDispatcher.this.sectionCompiler
-                            .compile(sectionpos, renderchunkregion, RenderSection.this.createVertexSorting(), sectionBufferBuilderPack);
+                            .compile(sectionpos, renderchunkregion, RenderSection.this.createVertexSorting(), sectionBufferBuilderPack, this.additionalRenderers);
                         RenderSection.this.updateGlobalBlockEntities(sectioncompiler$results.globalBlockEntities);
                         if (this.isCancelled.get()) {
                             sectioncompiler$results.release();
