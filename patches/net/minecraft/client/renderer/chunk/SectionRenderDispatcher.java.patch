--- a/net/minecraft/client/renderer/chunk/SectionRenderDispatcher.java
+++ b/net/minecraft/client/renderer/chunk/SectionRenderDispatcher.java
@@ -393,9 +_,10 @@
 
         public SectionRenderDispatcher.RenderSection.CompileTask createCompileTask(RenderRegionCache p_295324_) {
             this.cancelTasks();
-            RenderChunkRegion renderchunkregion = p_295324_.createRegion(SectionRenderDispatcher.this.level, SectionPos.of(this.sectionNode));
+            var additionalRenderers = net.neoforged.neoforge.client.ClientHooks.gatherAdditionalRenderers(this.origin, SectionRenderDispatcher.this.level);
+            RenderChunkRegion renderchunkregion = p_295324_.createRegion(SectionRenderDispatcher.this.level, SectionPos.of(this.sectionNode), additionalRenderers.isEmpty());
             boolean flag = this.compiled.get() != SectionRenderDispatcher.CompiledSection.UNCOMPILED;
-            this.lastRebuildTask = new SectionRenderDispatcher.RenderSection.RebuildTask(renderchunkregion, flag);
+            this.lastRebuildTask = new SectionRenderDispatcher.RenderSection.RebuildTask(renderchunkregion, flag, additionalRenderers);
             return this.lastRebuildTask;
         }
 
@@ -464,10 +_,17 @@
         class RebuildTask extends SectionRenderDispatcher.RenderSection.CompileTask {
             @Nullable
             protected volatile RenderChunkRegion region;
+            private final List<net.neoforged.neoforge.client.event.AddSectionGeometryEvent.AdditionalSectionRenderer> additionalRenderers;
 
+            @Deprecated
             public RebuildTask(@Nullable RenderChunkRegion p_294382_, boolean p_295207_) {
+                this(p_294382_, p_295207_, List.of());
+            }
+
+            public RebuildTask(@Nullable RenderChunkRegion p_294382_, boolean p_295207_, List<net.neoforged.neoforge.client.event.AddSectionGeometryEvent.AdditionalSectionRenderer> additionalRenderers) {
                 super(p_295207_);
                 this.region = p_294382_;
+                this.additionalRenderers = additionalRenderers;
             }
 
             @Override
@@ -498,7 +_,7 @@
                             SectionCompiler.Results sectioncompiler$results;
                             try (Zone zone = Profiler.get().zone("Compile Section")) {
                                 sectioncompiler$results = SectionRenderDispatcher.this.sectionCompiler
-                                    .compile(sectionpos, renderchunkregion, RenderSection.this.createVertexSorting(), p_296138_);
+                                    .compile(sectionpos, renderchunkregion, RenderSection.this.createVertexSorting(), p_296138_, this.additionalRenderers);
                             }
 
                             SectionRenderDispatcher.TranslucencyPointOfView sectionrenderdispatcher$translucencypointofview = SectionRenderDispatcher.TranslucencyPointOfView.of(
