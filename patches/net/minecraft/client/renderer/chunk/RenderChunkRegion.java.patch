--- a/net/minecraft/client/renderer/chunk/RenderChunkRegion.java
+++ b/net/minecraft/client/renderer/chunk/RenderChunkRegion.java
@@ -20,12 +_,18 @@
     private final int centerZ;
     protected final RenderChunk[][] chunks;
     protected final Level level;
+    private final it.unimi.dsi.fastutil.longs.Long2ObjectFunction<net.neoforged.neoforge.client.model.data.ModelData> modelDataSnapshot;
 
+    @Deprecated
     RenderChunkRegion(Level p_200456_, int p_200457_, int p_200458_, RenderChunk[][] p_200459_) {
+        this(p_200456_, p_200457_, p_200458_, p_200459_, net.neoforged.neoforge.client.model.data.ModelDataManager.EMPTY_SNAPSHOT);
+    }
+    RenderChunkRegion(Level p_200456_, int p_200457_, int p_200458_, RenderChunk[][] p_200459_, it.unimi.dsi.fastutil.longs.Long2ObjectFunction<net.neoforged.neoforge.client.model.data.ModelData> modelDataSnapshot) {
         this.level = p_200456_;
         this.centerX = p_200457_;
         this.centerZ = p_200458_;
         this.chunks = p_200459_;
+        this.modelDataSnapshot = modelDataSnapshot;
     }
 
     @Override
@@ -73,5 +_,22 @@
     @Override
     public int getHeight() {
         return this.level.getHeight();
+    }
+
+    @Override
+    public float getShade(float normalX, float normalY, float normalZ, boolean shade) {
+        return this.level.getShade(normalX, normalY, normalZ, shade);
+    }
+
+    @Override
+    public net.neoforged.neoforge.client.model.data.ModelData getModelData(BlockPos pos) {
+        return modelDataSnapshot.get(pos.asLong());
+    }
+
+    @Override
+    public net.neoforged.neoforge.common.world.AuxiliaryLightManager getAuxLightManager(net.minecraft.world.level.ChunkPos pos) {
+        int relX = pos.x - this.centerX;
+        int relZ = pos.z - this.centerZ;
+        return this.chunks[relX][relZ].wrapped.getAuxLightManager(pos);
     }
 }
