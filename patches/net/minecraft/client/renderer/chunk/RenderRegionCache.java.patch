--- a/net/minecraft/client/renderer/chunk/RenderRegionCache.java
+++ b/net/minecraft/client/renderer/chunk/RenderRegionCache.java
@@ -16,8 +_,13 @@
 
     @Nullable
     public RenderChunkRegion createRegion(Level level, SectionPos sectionPos) {
+        return createRegion(level, sectionPos, true);
+    }
+
+    @Nullable
+    public RenderChunkRegion createRegion(Level level, SectionPos sectionPos, boolean nullForEmpty) {
         RenderRegionCache.ChunkInfo renderregioncache$chunkinfo = this.getChunkInfo(level, sectionPos.x(), sectionPos.z());
-        if (renderregioncache$chunkinfo.chunk().isSectionEmpty(sectionPos.y())) {
+        if (nullForEmpty && renderregioncache$chunkinfo.chunk().isSectionEmpty(sectionPos.y())) {
             return null;
         } else {
             int i = sectionPos.x() - 1;
@@ -36,7 +_,10 @@
                 }
             }
 
-            return new RenderChunkRegion(level, i, j, arenderchunk);
+            int sectionMinY = sectionPos.getY() - RenderChunkRegion.RADIUS;
+            int sectionMaxY = sectionPos.getY() + RenderChunkRegion.RADIUS;
+            var modelDataManager = level.getModelDataManager().snapshotSectionRegion(i, sectionMinY, j, k, sectionMaxY, l);
+            return new RenderChunkRegion(level, i, j, arenderchunk, modelDataManager);
         }
     }
 
