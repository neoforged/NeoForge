--- a/net/minecraft/client/renderer/entity/LivingEntityRenderer.java
+++ b/net/minecraft/client/renderer/entity/LivingEntityRenderer.java
@@ -50,14 +_,16 @@
     }
 
     public void render(T entity, float entityYaw, float partialTicks, PoseStack poseStack, MultiBufferSource buffer, int packedLight) {
+        if (net.neoforged.neoforge.common.NeoForge.EVENT_BUS.post(new net.neoforged.neoforge.client.event.RenderLivingEvent.Pre<T, M>(entity, this, partialTicks, poseStack, buffer, packedLight)).isCanceled()) return;
         poseStack.pushPose();
         this.model.attackTime = this.getAttackAnim(entity, partialTicks);
-        this.model.riding = entity.isPassenger();
+        boolean shouldSit = entity.isPassenger() && (entity.getVehicle() != null && entity.getVehicle().shouldRiderSit());
+        this.model.riding = shouldSit;
         this.model.young = entity.isBaby();
         float f = Mth.rotLerp(partialTicks, entity.yBodyRotO, entity.yBodyRot);
         float f1 = Mth.rotLerp(partialTicks, entity.yHeadRotO, entity.yHeadRot);
         float f2 = f1 - f;
-        if (entity.isPassenger() && entity.getVehicle() instanceof LivingEntity livingentity) {
+        if (shouldSit && entity.getVehicle() instanceof LivingEntity livingentity) {
             f = Mth.rotLerp(partialTicks, livingentity.yBodyRotO, livingentity.yBodyRot);
             f2 = f1 - f;
             float f7 = Mth.wrapDegrees(f2);
@@ -101,7 +_,7 @@
         poseStack.translate(0.0F, -1.501F, 0.0F);
         float f4 = 0.0F;
         float f5 = 0.0F;
-        if (!entity.isPassenger() && entity.isAlive()) {
+        if (!shouldSit && entity.isAlive()) {
             f4 = entity.walkAnimation.speed(partialTicks);
             f5 = entity.walkAnimation.position(partialTicks);
             if (entity.isBaby()) {
@@ -134,6 +_,7 @@
 
         poseStack.popPose();
         super.render(entity, entityYaw, partialTicks, poseStack, buffer, packedLight);
+        net.neoforged.neoforge.common.NeoForge.EVENT_BUS.post(new net.neoforged.neoforge.client.event.RenderLivingEvent.Post<T, M>(entity, this, partialTicks, poseStack, buffer, packedLight));
     }
 
     @Nullable
