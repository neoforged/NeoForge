--- a/net/minecraft/client/renderer/entity/player/PlayerRenderer.java
+++ b/net/minecraft/client/renderer/entity/player/PlayerRenderer.java
@@ -68,7 +_,9 @@
 
     public void render(AbstractClientPlayer entity, float entityYaw, float partialTicks, PoseStack poseStack, MultiBufferSource buffer, int packedLight) {
         this.setModelProperties(entity);
+        if (net.neoforged.neoforge.common.NeoForge.EVENT_BUS.post(new net.neoforged.neoforge.client.event.RenderPlayerEvent.Pre(entity, this, partialTicks, poseStack, buffer, packedLight)).isCanceled()) return;
         super.render(entity, entityYaw, partialTicks, poseStack, buffer, packedLight);
+        net.neoforged.neoforge.common.NeoForge.EVENT_BUS.post(new net.neoforged.neoforge.client.event.RenderPlayerEvent.Post(entity, this, partialTicks, poseStack, buffer, packedLight));
     }
 
     public Vec3 getRenderOffset(AbstractClientPlayer entity, float partialTicks) {
@@ -140,9 +_,11 @@
                 if (useanim == UseAnim.BRUSH) {
                     return HumanoidModel.ArmPose.BRUSH;
                 }
-            } else if (!player.swinging && itemstack.is(Items.CROSSBOW) && CrossbowItem.isCharged(itemstack)) {
+            } else if (!player.swinging && itemstack.getItem() instanceof CrossbowItem && CrossbowItem.isCharged(itemstack)) {
                 return HumanoidModel.ArmPose.CROSSBOW_HOLD;
             }
+            HumanoidModel.ArmPose forgeArmPose = net.neoforged.neoforge.client.extensions.common.IClientItemExtensions.of(itemstack).getArmPose(player, hand, itemstack);
+            if (forgeArmPose != null) return forgeArmPose;
 
             return HumanoidModel.ArmPose.ITEM;
         }
@@ -185,10 +_,12 @@
     }
 
     public void renderRightHand(PoseStack poseStack, MultiBufferSource buffer, int combinedLight, AbstractClientPlayer player) {
+        if(!net.neoforged.neoforge.client.ClientHooks.renderSpecificFirstPersonArm(poseStack, buffer, combinedLight, player, HumanoidArm.RIGHT))
         this.renderHand(poseStack, buffer, combinedLight, player, this.model.rightArm, this.model.rightSleeve);
     }
 
     public void renderLeftHand(PoseStack poseStack, MultiBufferSource buffer, int combinedLight, AbstractClientPlayer player) {
+        if(!net.neoforged.neoforge.client.ClientHooks.renderSpecificFirstPersonArm(poseStack, buffer, combinedLight, player, HumanoidArm.LEFT))
         this.renderHand(poseStack, buffer, combinedLight, player, this.model.leftArm, this.model.leftSleeve);
     }
 
@@ -230,7 +_,7 @@
             }
         } else if (f > 0.0F) {
             super.setupRotations(entity, poseStack, bob, yBodyRot, partialTick, scale);
-            float f4 = entity.isInWater() ? -90.0F - f1 : -90.0F;
+            float f4 = entity.isInWater() || entity.isInFluidType((fluidType, height) -> entity.canSwimInFluidType(fluidType)) ? -90.0F - entity.getXRot() : -90.0F;
             float f5 = Mth.lerp(f, 0.0F, f4);
             poseStack.mulPose(Axis.XP.rotationDegrees(f5));
             if (entity.isVisuallySwimming()) {
