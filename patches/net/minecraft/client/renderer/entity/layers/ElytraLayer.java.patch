--- a/net/minecraft/client/renderer/entity/layers/ElytraLayer.java
+++ b/net/minecraft/client/renderer/entity/layers/ElytraLayer.java
@@ -45,7 +_,7 @@
         float headPitch
     ) {
         ItemStack itemstack = livingEntity.getItemBySlot(EquipmentSlot.CHEST);
-        if (itemstack.is(Items.ELYTRA)) {
+        if (shouldRender(itemstack, livingEntity)) {
             ResourceLocation resourcelocation;
             if (livingEntity instanceof AbstractClientPlayer abstractclientplayer) {
                 PlayerSkin playerskin = abstractclientplayer.getSkin();
@@ -54,10 +_,10 @@
                 } else if (playerskin.capeTexture() != null && abstractclientplayer.isModelPartShown(PlayerModelPart.CAPE)) {
                     resourcelocation = playerskin.capeTexture();
                 } else {
-                    resourcelocation = WINGS_LOCATION;
+                    resourcelocation = getElytraTexture(itemstack, livingEntity);
                 }
             } else {
-                resourcelocation = WINGS_LOCATION;
+                resourcelocation = getElytraTexture(itemstack, livingEntity);
             }
 
             poseStack.pushPose();
@@ -68,5 +_,30 @@
             this.elytraModel.renderToBuffer(poseStack, vertexconsumer, packedLight, OverlayTexture.NO_OVERLAY);
             poseStack.popPose();
         }
+    }
+
+    /**
+     * Determines if the ElytraLayer should render.
+     * ItemStack and Entity are provided for modder convenience,
+     * For example, using the same ElytraLayer for multiple custom Elytra.
+     *
+     * @param stack  The Elytra ItemStack
+     * @param entity The entity being rendered.
+     * @return If the ElytraLayer should render.
+     */
+    public boolean shouldRender(ItemStack stack, T entity) {
+        return stack.getItem() == Items.ELYTRA;
+    }
+
+    /**
+     * Gets the texture to use with this ElytraLayer.
+     * This assumes the vanilla Elytra model.
+     *
+     * @param stack  The Elytra ItemStack.
+     * @param entity The entity being rendered.
+     * @return The texture.
+     */
+    public ResourceLocation getElytraTexture(ItemStack stack, T entity) {
+        return WINGS_LOCATION;
     }
 }
