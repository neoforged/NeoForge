--- a/net/minecraft/client/renderer/entity/EntityRenderer.java
+++ b/net/minecraft/client/renderer/entity/EntityRenderer.java
@@ -94,8 +_,11 @@
             }
         }
 
-        if (this.shouldShowName(p_entity)) {
-            this.renderNameTag(p_entity, p_entity.getDisplayName(), poseStack, bufferSource, packedLight, partialTick);
+        // Neo: Post the RenderNameTagEvent and conditionally wrap #renderNameTag based on the result.
+        var event = new net.neoforged.neoforge.client.event.RenderNameTagEvent(p_entity, p_entity.getDisplayName(), this, poseStack, bufferSource, packedLight, partialTick);
+        net.neoforged.neoforge.common.NeoForge.EVENT_BUS.post(event);
+        if (event.canRender().isTrue() || event.canRender().isDefault() && this.shouldShowName(p_entity)) {
+            this.renderNameTag(p_entity, event.getContent(), poseStack, bufferSource, packedLight, partialTick);
         }
     }
 
@@ -181,7 +_,7 @@
 
     protected void renderNameTag(T entity, Component displayName, PoseStack poseStack, MultiBufferSource bufferSource, int packedLight, float partialTick) {
         double d0 = this.entityRenderDispatcher.distanceToSqr(entity);
-        if (!(d0 > 4096.0)) {
+        if (net.neoforged.neoforge.client.ClientHooks.isNameplateInRenderDistance(entity, d0)) {
             Vec3 vec3 = entity.getAttachments().getNullable(EntityAttachment.NAME_TAG, 0, entity.getViewYRot(partialTick));
             if (vec3 != null) {
                 boolean flag = !entity.isDiscrete();
