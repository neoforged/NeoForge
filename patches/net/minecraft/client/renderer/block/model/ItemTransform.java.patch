--- a/net/minecraft/client/renderer/block/model/ItemTransform.java
+++ b/net/minecraft/client/renderer/block/model/ItemTransform.java
@@ -21,11 +_,17 @@
     public final Vector3f rotation;
     public final Vector3f translation;
     public final Vector3f scale;
+    public final Vector3f rightRotation;
 
     public ItemTransform(Vector3f rotation, Vector3f translation, Vector3f scale) {
+        this(rotation, translation, scale, new Vector3f());
+    }
+
+    public ItemTransform(Vector3f rotation, Vector3f translation, Vector3f scale, Vector3f rightRotation) {
         this.rotation = new Vector3f(rotation);
         this.translation = new Vector3f(translation);
         this.scale = new Vector3f(scale);
+        this.rightRotation = new Vector3f(rightRotation);
     }
 
     public void apply(boolean leftHand, PoseStack poseStack) {
@@ -42,6 +_,7 @@
             poseStack.translate((float)i * this.translation.x(), this.translation.y(), this.translation.z());
             poseStack.mulPose(new Quaternionf().rotationXYZ(f * (float) (Math.PI / 180.0), f1 * (float) (Math.PI / 180.0), f2 * (float) (Math.PI / 180.0)));
             poseStack.scale(this.scale.x(), this.scale.y(), this.scale.z());
+            poseStack.mulPose(net.neoforged.neoforge.common.util.TransformationHelper.quatFromXYZ(rightRotation.x(), rightRotation.y() * (leftHand ? -1 : 1), rightRotation.z() * (leftHand ? -1 : 1), true));
         }
     }
 
@@ -80,7 +_,8 @@
             vector3f1.set(Mth.clamp(vector3f1.x, -5.0F, 5.0F), Mth.clamp(vector3f1.y, -5.0F, 5.0F), Mth.clamp(vector3f1.z, -5.0F, 5.0F));
             Vector3f vector3f2 = this.getVector3f(jsonobject, "scale", DEFAULT_SCALE);
             vector3f2.set(Mth.clamp(vector3f2.x, -4.0F, 4.0F), Mth.clamp(vector3f2.y, -4.0F, 4.0F), Mth.clamp(vector3f2.z, -4.0F, 4.0F));
-            return new ItemTransform(vector3f, vector3f1, vector3f2);
+            Vector3f rightRotation = this.getVector3f(jsonobject, "right_rotation", DEFAULT_ROTATION);
+            return new ItemTransform(vector3f, vector3f1, vector3f2, rightRotation);
         }
 
         private Vector3f getVector3f(JsonObject json, String key, Vector3f fallback) {
