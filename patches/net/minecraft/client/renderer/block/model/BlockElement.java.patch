--- a/net/minecraft/client/renderer/block/model/BlockElement.java
+++ b/net/minecraft/client/renderer/block/model/BlockElement.java
@@ -29,16 +_,23 @@
     public final Map<Direction, BlockElementFace> faces;
     public final BlockElementRotation rotation;
     public final boolean shade;
+    private net.neoforged.neoforge.client.model.ExtraFaceData faceData;
 
     public BlockElement(
         Vector3f from, Vector3f to, Map<Direction, BlockElementFace> faces, @Nullable BlockElementRotation rotation, boolean shade
     ) {
+      this(from, to, faces, rotation, shade, net.neoforged.neoforge.client.model.ExtraFaceData.DEFAULT);
+    }
+
+    public BlockElement(Vector3f from, Vector3f to, Map<Direction, BlockElementFace> faces, @Nullable BlockElementRotation rotation, boolean shade, net.neoforged.neoforge.client.model.ExtraFaceData faceData) {
         this.from = from;
         this.to = to;
         this.faces = faces;
         this.rotation = rotation;
         this.shade = shade;
         this.fillUvs();
+        this.setFaceData(faceData);
+        this.faces.values().forEach(face -> face.parent().setValue(this));
     }
 
     private void fillUvs() {
@@ -80,7 +_,9 @@
                 throw new JsonParseException("Expected shade to be a Boolean");
             } else {
                 boolean flag = GsonHelper.getAsBoolean(jsonobject, "shade", true);
-                return new BlockElement(vector3f, vector3f1, map, blockelementrotation, flag);
+                if (jsonobject.has("forge_data")) throw new JsonParseException("forge_data should be replaced by neoforge_data"); // TODO 1.22: Remove
+                var faceData = net.neoforged.neoforge.client.model.ExtraFaceData.read(jsonobject.get("neoforge_data"), net.neoforged.neoforge.client.model.ExtraFaceData.DEFAULT);
+                return new BlockElement(vector3f, vector3f1, map, blockelementrotation, flag, faceData);
             }
         }
 
@@ -191,5 +_,13 @@
                 return new Vector3f(afloat[0], afloat[1], afloat[2]);
             }
         }
+    }
+
+    public net.neoforged.neoforge.client.model.ExtraFaceData getFaceData() {
+        return this.faceData;
+    }
+
+    public void setFaceData(net.neoforged.neoforge.client.model.ExtraFaceData faceData) {
+        this.faceData = java.util.Objects.requireNonNull(faceData);
     }
 }
