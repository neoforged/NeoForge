--- a/net/minecraft/client/renderer/block/model/ItemTransforms.java
+++ b/net/minecraft/client/renderer/block/model/ItemTransforms.java
@@ -21,6 +_,7 @@
     public final ItemTransform gui;
     public final ItemTransform ground;
     public final ItemTransform fixed;
+    public final com.google.common.collect.ImmutableMap<ItemDisplayContext, ItemTransform> moddedTransforms;
 
     private ItemTransforms() {
         this(
@@ -44,8 +_,10 @@
         this.gui = transforms.gui;
         this.ground = transforms.ground;
         this.fixed = transforms.fixed;
+        this.moddedTransforms = transforms.moddedTransforms;
     }
 
+    @Deprecated
     public ItemTransforms(
         ItemTransform thirdPersonLeftHand,
         ItemTransform thirdPersonRightHand,
@@ -56,6 +_,20 @@
         ItemTransform ground,
         ItemTransform fixed
     ) {
+        this(thirdPersonLeftHand, thirdPersonRightHand, firstPersonLeftHand, firstPersonRightHand, head, gui, ground, fixed, com.google.common.collect.ImmutableMap.of());
+    }
+
+    public ItemTransforms(
+        ItemTransform thirdPersonLeftHand,
+        ItemTransform thirdPersonRightHand,
+        ItemTransform firstPersonLeftHand,
+        ItemTransform firstPersonRightHand,
+        ItemTransform head,
+        ItemTransform gui,
+        ItemTransform ground,
+        ItemTransform fixed,
+        com.google.common.collect.ImmutableMap<ItemDisplayContext, ItemTransform> moddedTransforms
+    ) {
         this.thirdPersonLeftHand = thirdPersonLeftHand;
         this.thirdPersonRightHand = thirdPersonRightHand;
         this.firstPersonLeftHand = firstPersonLeftHand;
@@ -64,9 +_,21 @@
         this.gui = gui;
         this.ground = ground;
         this.fixed = fixed;
+        this.moddedTransforms = moddedTransforms;
     }
 
     public ItemTransform getTransform(ItemDisplayContext displayContext) {
+        if (displayContext.isModded()) {
+            ItemTransform moddedTransform = moddedTransforms.get(displayContext);
+            if (moddedTransform != null) {
+                return moddedTransform;
+            }
+            ItemDisplayContext moddedFallback = displayContext.fallback();
+            if (moddedFallback == null) {
+                return ItemTransform.NO_TRANSFORM;
+            }
+            displayContext = moddedFallback;
+        }
         return switch (displayContext) {
             case THIRD_PERSON_LEFT_HAND -> this.thirdPersonLeftHand;
             case THIRD_PERSON_RIGHT_HAND -> this.thirdPersonRightHand;
@@ -104,9 +_,23 @@
             ItemTransform itemtransform5 = this.getTransform(context, jsonobject, ItemDisplayContext.GUI);
             ItemTransform itemtransform6 = this.getTransform(context, jsonobject, ItemDisplayContext.GROUND);
             ItemTransform itemtransform7 = this.getTransform(context, jsonobject, ItemDisplayContext.FIXED);
-            return new ItemTransforms(
-                itemtransform1, itemtransform, itemtransform3, itemtransform2, itemtransform4, itemtransform5, itemtransform6, itemtransform7
-            );
+
+            var builder = com.google.common.collect.ImmutableMap.<ItemDisplayContext, ItemTransform>builder();
+            for (ItemDisplayContext ctxType : ItemDisplayContext.values()) {
+                if (ctxType.isModded()) {
+                    var transform = this.getTransform(context, jsonobject, ctxType);
+                    var fallbackType = ctxType;
+                    while (transform == ItemTransform.NO_TRANSFORM && fallbackType.fallback() != null) {
+                        fallbackType = fallbackType.fallback();
+                        transform = this.getTransform(context, jsonobject, fallbackType);
+                    }
+                    if (transform != ItemTransform.NO_TRANSFORM){
+                        builder.put(ctxType, transform);
+                    }
+                }
+            }
+
+            return new ItemTransforms(itemtransform1, itemtransform, itemtransform3, itemtransform2, itemtransform4, itemtransform5, itemtransform6, itemtransform7, builder.build());
         }
 
         private ItemTransform getTransform(JsonDeserializationContext deserializationContext, JsonObject json, ItemDisplayContext displayContext) {
