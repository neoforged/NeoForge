--- a/net/minecraft/client/renderer/ItemInHandRenderer.java
+++ b/net/minecraft/client/renderer/ItemInHandRenderer.java
@@ -168,11 +_,11 @@
         ResourceLocation resourcelocation = this.minecraft.player.getSkin().texture();
         if (p_109365_ == HumanoidArm.RIGHT) {
             playerrenderer.renderRightHand(
-                p_109362_, p_109363_, p_109364_, resourcelocation, this.minecraft.player.isModelPartShown(PlayerModelPart.RIGHT_SLEEVE)
+                p_109362_, p_109363_, p_109364_, resourcelocation, this.minecraft.player.isModelPartShown(PlayerModelPart.RIGHT_SLEEVE), this.minecraft.player
             );
         } else {
             playerrenderer.renderLeftHand(
-                p_109362_, p_109363_, p_109364_, resourcelocation, this.minecraft.player.isModelPartShown(PlayerModelPart.LEFT_SLEEVE)
+                p_109362_, p_109363_, p_109364_, resourcelocation, this.minecraft.player.isModelPartShown(PlayerModelPart.LEFT_SLEEVE), this.minecraft.player
             );
         }
 
@@ -234,7 +_,7 @@
         p_109367_.translate(-0.5F, -0.5F, 0.0F);
         p_109367_.scale(0.0078125F, 0.0078125F, 0.0078125F);
         MapId mapid = p_109370_.get(DataComponents.MAP_ID);
-        MapItemSavedData mapitemsaveddata = MapItem.getSavedData(mapid, this.minecraft.level);
+        MapItemSavedData mapitemsaveddata = MapItem.getSavedData(p_109370_, this.minecraft.level);
         VertexConsumer vertexconsumer = p_109368_.getBuffer(mapitemsaveddata == null ? MAP_BACKGROUND : MAP_BACKGROUND_CHECKERBOARD);
         Matrix4f matrix4f = p_109367_.last().pose();
         vertexconsumer.addVertex(matrix4f, -7.0F, 135.0F, 0.0F).setColor(-1).setUv(0.0F, 1.0F).setLight(p_109369_);
@@ -271,10 +_,10 @@
         ResourceLocation resourcelocation = abstractclientplayer.getSkin().texture();
         if (flag) {
             playerrenderer.renderRightHand(
-                p_109347_, p_109348_, p_109349_, resourcelocation, abstractclientplayer.isModelPartShown(PlayerModelPart.RIGHT_SLEEVE)
+                p_109347_, p_109348_, p_109349_, resourcelocation, abstractclientplayer.isModelPartShown(PlayerModelPart.RIGHT_SLEEVE), abstractclientplayer
             );
         } else {
-            playerrenderer.renderLeftHand(p_109347_, p_109348_, p_109349_, resourcelocation, abstractclientplayer.isModelPartShown(PlayerModelPart.LEFT_SLEEVE));
+            playerrenderer.renderLeftHand(p_109347_, p_109348_, p_109349_, resourcelocation, abstractclientplayer.isModelPartShown(PlayerModelPart.LEFT_SLEEVE), abstractclientplayer);
         }
     }
 
@@ -347,12 +_,14 @@
         if (iteminhandrenderer$handrenderselection.renderMainHand) {
             float f4 = interactionhand == InteractionHand.MAIN_HAND ? f : 0.0F;
             float f5 = 1.0F - Mth.lerp(p_109315_, this.oMainHandHeight, this.mainHandHeight);
+            if(!net.neoforged.neoforge.client.ClientHooks.renderSpecificFirstPersonHand(InteractionHand.MAIN_HAND, p_109316_, p_109317_, p_109319_, p_109315_, f1, f4, f5, this.mainHandItem))
             this.renderArmWithItem(p_109318_, p_109315_, f1, InteractionHand.MAIN_HAND, f4, this.mainHandItem, f5, p_109316_, p_109317_, p_109319_);
         }
 
         if (iteminhandrenderer$handrenderselection.renderOffHand) {
             float f6 = interactionhand == InteractionHand.OFF_HAND ? f : 0.0F;
             float f7 = 1.0F - Mth.lerp(p_109315_, this.oOffHandHeight, this.offHandHeight);
+            if(!net.neoforged.neoforge.client.ClientHooks.renderSpecificFirstPersonHand(InteractionHand.OFF_HAND, p_109316_, p_109317_, p_109319_, p_109315_, f1, f6, f7, this.offHandItem))
             this.renderArmWithItem(p_109318_, p_109315_, f1, InteractionHand.OFF_HAND, f6, this.offHandItem, f7, p_109316_, p_109317_, p_109319_);
         }
 
@@ -412,13 +_,13 @@
                 if (flag && !p_109372_.isInvisible()) {
                     this.renderPlayerArm(p_109379_, p_109380_, p_109381_, p_109378_, p_109376_, humanoidarm);
                 }
-            } else if (p_109377_.has(DataComponents.MAP_ID)) {
+            } else if (p_109377_.getItem() instanceof MapItem) {
                 if (flag && this.offHandItem.isEmpty()) {
                     this.renderTwoHandedMap(p_109379_, p_109380_, p_109381_, p_109374_, p_109378_, p_109376_);
                 } else {
                     this.renderOneHandedMap(p_109379_, p_109380_, p_109381_, p_109378_, humanoidarm, p_109376_, p_109377_);
                 }
-            } else if (p_109377_.is(Items.CROSSBOW)) {
+            } else if (p_109377_.getItem() instanceof CrossbowItem) {
                 boolean flag1 = CrossbowItem.isCharged(p_109377_);
                 boolean flag2 = humanoidarm == HumanoidArm.RIGHT;
                 int i = flag2 ? 1 : -1;
@@ -468,6 +_,7 @@
                 );
             } else {
                 boolean flag3 = humanoidarm == HumanoidArm.RIGHT;
+                if (!net.neoforged.neoforge.client.extensions.common.IClientItemExtensions.of(p_109377_).applyForgeHandTransform(p_109379_, minecraft.player, humanoidarm, p_109377_, p_109373_, p_109378_, p_109376_)) // FORGE: Allow items to define custom arm animation
                 if (p_109372_.isUsingItem() && p_109372_.getUseItemRemainingTicks() > 0 && p_109372_.getUsedItemHand() == p_109375_) {
                     int k = flag3 ? 1 : -1;
                     switch (p_109377_.getUseAnimation()) {
@@ -582,8 +_,16 @@
             this.offHandHeight = Mth.clamp(this.offHandHeight - 0.4F, 0.0F, 1.0F);
         } else {
             float f = localplayer.getAttackStrengthScale(1.0F);
-            this.mainHandHeight = this.mainHandHeight + Mth.clamp((this.mainHandItem == itemstack ? f * f * f : 0.0F) - this.mainHandHeight, -0.4F, 0.4F);
-            this.offHandHeight = this.offHandHeight + Mth.clamp((float)(this.offHandItem == itemstack1 ? 1 : 0) - this.offHandHeight, -0.4F, 0.4F);
+            boolean requipM = net.neoforged.neoforge.client.ClientHooks.shouldCauseReequipAnimation(this.mainHandItem, itemstack, localplayer.getInventory().selected);
+            boolean requipO = net.neoforged.neoforge.client.ClientHooks.shouldCauseReequipAnimation(this.offHandItem, itemstack1, -1);
+
+            if (!requipM && this.mainHandItem != itemstack)
+                this.mainHandItem = itemstack;
+            if (!requipO && this.offHandItem != itemstack1)
+                this.offHandItem = itemstack1;
+
+            this.mainHandHeight += Mth.clamp((!requipM ? f * f * f : 0.0F) - this.mainHandHeight, -0.4F, 0.4F);
+            this.offHandHeight += Mth.clamp((float)(!requipO ? 1 : 0) - this.offHandHeight, -0.4F, 0.4F);
         }
 
         if (this.mainHandHeight < 0.1F) {
