--- a/net/minecraft/client/KeyboardHandler.java
+++ b/net/minecraft/client/KeyboardHandler.java
@@ -366,7 +_,9 @@
                 }
             }
 
-            if (action == 1 && (!(this.minecraft.screen instanceof KeyBindsScreen) || ((KeyBindsScreen)screen).lastKeySelection <= Util.getMillis() - 20L)) {
+
+            if ((!(this.minecraft.screen instanceof KeyBindsScreen) || ((KeyBindsScreen)screen).lastKeySelection <= Util.getMillis() - 20L)) {
+                if (action == 1) {
                 if (this.minecraft.options.keyFullscreen.matches(key, scanCode)) {
                     this.minecraft.getWindow().toggleFullScreen();
                     this.minecraft.options.fullscreen().set(this.minecraft.getWindow().isFullscreen());
@@ -384,6 +_,8 @@
                     );
                     return;
                 }
+                } else if (action == 0 /*GLFW_RELEASE*/ && this.minecraft.screen instanceof KeyBindsScreen && net.neoforged.neoforge.client.settings.KeyModifier.getActiveModifier() != net.neoforged.neoforge.client.settings.KeyModifier.NONE)
+                    ((KeyBindsScreen)this.minecraft.screen).selectedKey = null; //Forge: Unset pure modifiers.
             }
 
             if (action != 0) {
@@ -407,9 +_,13 @@
                 Screen.wrapScreenError(() -> {
                     if (action == 1 || action == 2) {
                         screen.afterKeyboardAction();
-                        aboolean[0] = screen.keyPressed(key, scanCode, modifiers);
+                        aboolean[0] = net.neoforged.neoforge.client.ClientHooks.onScreenKeyPressedPre(screen, key, scanCode, modifiers);
+                        if (!aboolean[0]) aboolean[0] = screen.keyPressed(key, scanCode, modifiers);
+                        if (!aboolean[0]) aboolean[0] = net.neoforged.neoforge.client.ClientHooks.onScreenKeyPressedPost(screen, key, scanCode, modifiers);
                     } else if (action == 0) {
-                        aboolean[0] = screen.keyReleased(key, scanCode, modifiers);
+                        aboolean[0] = net.neoforged.neoforge.client.ClientHooks.onScreenKeyReleasedPre(screen, key, scanCode, modifiers);
+                        if (!aboolean[0]) aboolean[0] = screen.keyReleased(key, scanCode, modifiers);
+                        if (!aboolean[0]) aboolean[0] = net.neoforged.neoforge.client.ClientHooks.onScreenKeyReleasedPost(screen, key, scanCode, modifiers);
                     }
                 }, "keyPressed event handler", screen.getClass().getCanonicalName());
                 if (aboolean[0]) {
@@ -478,22 +_,27 @@
                     }
                 }
             }
+            net.neoforged.neoforge.client.ClientHooks.onKeyInput(key, scanCode, action, modifiers);
         }
     }
 
     private void charTyped(long windowPointer, int codePoint, int modifiers) {
         if (windowPointer == this.minecraft.getWindow().getWindow()) {
-            GuiEventListener guieventlistener = this.minecraft.screen;
+            Screen guieventlistener = this.minecraft.screen;
             if (guieventlistener != null && this.minecraft.getOverlay() == null) {
                 if (Character.charCount(codePoint) == 1) {
-                    Screen.wrapScreenError(
-                        () -> guieventlistener.charTyped((char)codePoint, modifiers), "charTyped event handler", guieventlistener.getClass().getCanonicalName()
-                    );
+                    Screen.wrapScreenError(() -> {
+                        if (net.neoforged.neoforge.client.ClientHooks.onScreenCharTypedPre(guieventlistener, (char)codePoint, modifiers)) return;
+                        if (guieventlistener.charTyped((char)codePoint, modifiers)) return;
+                        net.neoforged.neoforge.client.ClientHooks.onScreenCharTypedPost(guieventlistener, (char)codePoint, modifiers);
+                    }, "charTyped event handler", guieventlistener.getClass().getCanonicalName());
                 } else {
                     for (char c0 : Character.toChars(codePoint)) {
-                        Screen.wrapScreenError(
-                            () -> guieventlistener.charTyped(c0, modifiers), "charTyped event handler", guieventlistener.getClass().getCanonicalName()
-                        );
+                        Screen.wrapScreenError(() -> {
+                            if (net.neoforged.neoforge.client.ClientHooks.onScreenCharTypedPre(guieventlistener, c0, modifiers)) return;
+                            if (guieventlistener.charTyped(c0, modifiers)) return;
+                            net.neoforged.neoforge.client.ClientHooks.onScreenCharTypedPost(guieventlistener, c0, modifiers);
+                        }, "charTyped event handler", guieventlistener.getClass().getCanonicalName());
                     }
                 }
             }
