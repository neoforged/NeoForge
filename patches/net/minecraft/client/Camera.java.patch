--- a/net/minecraft/client/Camera.java
+++ b/net/minecraft/client/Camera.java
@@ -42,6 +_,7 @@
     private float eyeHeightOld;
     private float partialTickTime;
     public static final float FOG_DISTANCE_SCALE = 0.083333336F;
+    private float roll;
 
     public void setup(BlockGetter level, Entity entity, boolean detached, boolean thirdPersonReverse, float partialTick) {
         this.initialized = true;
@@ -49,7 +_,10 @@
         this.entity = entity;
         this.detached = detached;
         this.partialTickTime = partialTick;
-        this.setRotation(entity.getViewYRot(partialTick), entity.getViewXRot(partialTick));
+        var cameraSetup = net.neoforged.neoforge.common.NeoForge.EVENT_BUS.post(new net.neoforged.neoforge.client.event.ViewportEvent.ComputeCameraAngles(
+                this, partialTick, entity.getViewYRot(partialTick), entity.getViewXRot(partialTick), 0)
+        );
+        this.setRotation(cameraSetup.getYaw(), cameraSetup.getPitch(), cameraSetup.getRoll());
         this.setPosition(
             Mth.lerp((double)partialTick, entity.xo, entity.getX()),
             Mth.lerp((double)partialTick, entity.yo, entity.getY()) + (double)Mth.lerp(partialTick, this.eyeHeightOld, this.eyeHeight),
@@ -57,11 +_,11 @@
         );
         if (detached) {
             if (thirdPersonReverse) {
-                this.setRotation(this.yRot + 180.0F, -this.xRot);
+                this.setRotation(this.yRot + 180.0F, -this.xRot, -this.roll);
             }
 
             float f = entity instanceof LivingEntity livingentity ? livingentity.getScale() : 1.0F;
-            this.move(-this.getMaxZoom(4.0F * f), 0.0F, 0.0F);
+            this.move(-this.getMaxZoom(net.neoforged.neoforge.client.ClientHooks.getDetachedCameraDistance(this, thirdPersonReverse, f, 4.0F) * f), 0.0F, 0.0F);
         } else if (entity instanceof LivingEntity && ((LivingEntity)entity).isSleeping()) {
             Direction direction = ((LivingEntity)entity).getBedOrientation();
             this.setRotation(direction != null ? direction.toYRot() - 180.0F : 0.0F, 0.0F);
@@ -102,10 +_,17 @@
         this.setPosition(new Vec3(this.position.x + (double)vector3f.x, this.position.y + (double)vector3f.y, this.position.z + (double)vector3f.z));
     }
 
+    /** @deprecated Neo: call {@link #setRotation(float, float, float)} instead */
+    @Deprecated
     protected void setRotation(float yRot, float xRot) {
+        setRotation(yRot, xRot, 0F);
+    }
+
+    protected void setRotation(float yRot, float xRot, float roll) {
         this.xRot = xRot;
         this.yRot = yRot;
-        this.rotation.rotationYXZ((float) Math.PI - yRot * (float) (Math.PI / 180.0), -xRot * (float) (Math.PI / 180.0), 0.0F);
+        this.roll = roll;
+        this.rotation.rotationYXZ((float) Math.PI - yRot * (float) (Math.PI / 180.0), -xRot * (float) (Math.PI / 180.0), -roll * (float) (Math.PI / 180.0));
         FORWARDS.rotate(this.rotation, this.forwards);
         UP.rotate(this.rotation, this.up);
         LEFT.rotate(this.rotation, this.left);
@@ -221,6 +_,17 @@
 
     public float getPartialTickTime() {
         return this.partialTickTime;
+    }
+
+    public float getRoll() {
+        return this.roll;
+    }
+
+    public net.minecraft.world.level.block.state.BlockState getBlockAtCamera() {
+        if (!this.initialized)
+            return net.minecraft.world.level.block.Blocks.AIR.defaultBlockState();
+        else
+            return this.level.getBlockState(this.blockPosition).getStateAtViewpoint(this.level, this.blockPosition, this.position);
     }
 
     @OnlyIn(Dist.CLIENT)
