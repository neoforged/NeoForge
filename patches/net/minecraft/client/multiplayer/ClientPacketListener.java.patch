--- a/net/minecraft/client/multiplayer/ClientPacketListener.java
+++ b/net/minecraft/client/multiplayer/ClientPacketListener.java
@@ -344,6 +_,7 @@
     private final ChunkBatchSizeCalculator chunkBatchSizeCalculator = new ChunkBatchSizeCalculator();
     private final PingDebugMonitor pingDebugMonitor;
     private final DebugSampleSubscriber debugSampleSubscriber;
+    private net.neoforged.neoforge.network.connection.ConnectionType connectionType;
     @Nullable
     private LevelLoadStatusManager levelLoadStatusManager;
     private boolean serverEnforcesSecureChat;
@@ -366,6 +_,7 @@
             minecraft.gui.getChat().restoreState(commonListenerCookie.chatState());
         }
 
+        this.connectionType = commonListenerCookie.connectionType();
         this.potionBrewing = PotionBrewing.bootstrap(this.enabledFeatures);
     }
 
@@ -427,6 +_,7 @@
 
         this.minecraft.debugRenderer.clear();
         this.minecraft.player.resetPos();
+        net.neoforged.neoforge.client.ClientHooks.firePlayerLogin(this.minecraft.gameMode, this.minecraft.player, this.minecraft.getConnection().connection);
         this.minecraft.player.setId(packet.playerId());
         this.level.addEntity(this.minecraft.player);
         this.minecraft.player.input = new KeyboardInput(this.minecraft.options);
@@ -828,7 +_,8 @@
                         chatcomponent$state,
                         this.strictErrorHandling,
                         this.customReportDetails,
-                        this.serverLinks
+                        this.serverLinks,
+                        this.connectionType
                     )
                 )
             );
@@ -1164,6 +_,7 @@
         }
 
         localplayer1.resetPos();
+        net.neoforged.neoforge.client.ClientHooks.firePlayerRespawn(this.minecraft.gameMode, localplayer, localplayer1, localplayer1.connection.connection);
         this.level.addEntity(localplayer1);
         localplayer1.setYRot(-180.0F);
         localplayer1.input = new KeyboardInput(this.minecraft.options);
@@ -1306,10 +_,7 @@
         PacketUtils.ensureRunningOnSameThread(packet, this, this.minecraft);
         BlockPos blockpos = packet.getPos();
         this.minecraft.level.getBlockEntity(blockpos, packet.getType()).ifPresent(p_337415_ -> {
-            CompoundTag compoundtag = packet.getTag();
-            if (!compoundtag.isEmpty()) {
-                p_337415_.loadWithComponents(compoundtag, this.registryAccess);
-            }
+            p_337415_.onDataPacket(connection, packet, this.registryAccess);
 
             if (p_337415_ instanceof CommandBlockEntity && this.minecraft.screen instanceof CommandBlockEditScreen) {
                 ((CommandBlockEditScreen)this.minecraft.screen).updateGui();
@@ -1471,7 +_,9 @@
     @Override
     public void handleCommands(ClientboundCommandsPacket packet) {
         PacketUtils.ensureRunningOnSameThread(packet, this, this.minecraft);
-        this.commands = new CommandDispatcher<>(packet.getRoot(CommandBuildContext.simple(this.registryAccess, this.enabledFeatures)));
+        var context = CommandBuildContext.simple(this.registryAccess, this.enabledFeatures);
+        this.commands = new CommandDispatcher<>(packet.getRoot(context));
+        this.commands = net.neoforged.neoforge.client.ClientCommandHandler.mergeServerCommands(this.commands, context);
     }
 
     @Override
@@ -1493,6 +_,7 @@
         ClientRecipeBook clientrecipebook = this.minecraft.player.getRecipeBook();
         clientrecipebook.setupCollections(this.recipeManager.getOrderedRecipes(), this.minecraft.level.registryAccess());
         this.searchTrees.updateRecipes(clientrecipebook, this.registryAccess);
+        net.neoforged.neoforge.client.ClientHooks.onRecipesUpdated(this.recipeManager);
     }
 
     @Override
@@ -1595,8 +_,10 @@
         TagCollector tagcollector = new TagCollector();
         packet.getTags().forEach(tagcollector::append);
         tagcollector.updateTags(this.registryAccess, this.connection.isMemoryConnection());
-        List<ItemStack> list = List.copyOf(CreativeModeTabs.searchTab().getDisplayItems());
-        this.searchTrees.updateCreativeTags(list);
+        CreativeModeTabs.allTabs().stream().filter(net.minecraft.world.item.CreativeModeTab::hasSearchBar).forEach(tab -> {
+            List<ItemStack> list = List.copyOf(tab.getDisplayItems());
+            this.searchTrees.updateCreativeTags(list, net.neoforged.neoforge.client.CreativeModeTabSearchRegistry.getTagSearchKey(tab));
+        });
     }
 
     @Override
@@ -2407,6 +_,8 @@
     }
 
     public void sendChat(String message) {
+        message = net.neoforged.neoforge.client.ClientHooks.onClientSendMessage(message);
+        if (message.isEmpty()) return;
         Instant instant = Instant.now();
         long i = Crypt.SaltSupplier.getLong();
         LastSeenMessagesTracker.Update lastseenmessagestracker$update = this.lastSeenMessages.generateAndApplyUpdate();
@@ -2416,6 +_,7 @@
     }
 
     public void sendCommand(String command) {
+        if (net.neoforged.neoforge.client.ClientCommandHandler.runCommand(command)) return;
         SignableCommand<SharedSuggestionProvider> signablecommand = SignableCommand.of(this.parseCommand(command));
         if (signablecommand.arguments().isEmpty()) {
             this.send(new ServerboundChatCommandPacket(command));
@@ -2490,6 +_,10 @@
 
     public Scoreboard scoreboard() {
         return this.scoreboard;
+    }
+
+    public net.neoforged.neoforge.network.connection.ConnectionType getConnectionType() {
+        return this.connectionType;
     }
 
     public PotionBrewing potionBrewing() {
