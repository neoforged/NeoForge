--- a/net/minecraft/data/tags/ItemTagsProvider.java
+++ b/net/minecraft/data/tags/ItemTagsProvider.java
@@ -17,19 +_,48 @@
     private final Map<TagKey<Block>, TagKey<Item>> tagsToCopy = new HashMap<>();
 
     public ItemTagsProvider(
+    /**
+     * @deprecated Forge: Use the {@linkplain #ItemTagsProvider(PackOutput, CompletableFuture, CompletableFuture, String, net.neoforged.neoforge.common.data.ExistingFileHelper) mod id variant}
+     */
+    @Deprecated
         PackOutput output, CompletableFuture<HolderLookup.Provider> lookupProvider, CompletableFuture<TagsProvider.TagLookup<Block>> blockTags
     ) {
-        super(output, Registries.ITEM, lookupProvider, p_255790_ -> p_255790_.builtInRegistryHolder().key());
-        this.blockTags = blockTags;
+        this(output, lookupProvider, blockTags, "vanilla", null);
     }
 
+    /**
+     * @deprecated Forge: Use the {@linkplain #ItemTagsProvider(PackOutput, CompletableFuture, CompletableFuture, CompletableFuture, String, net.neoforged.neoforge.common.data.ExistingFileHelper) mod id variant}
+     */
+    @Deprecated
     public ItemTagsProvider(
         PackOutput output,
         CompletableFuture<HolderLookup.Provider> lookupProvider,
         CompletableFuture<TagsProvider.TagLookup<Item>> parentProvider,
         CompletableFuture<TagsProvider.TagLookup<Block>> blockTags
     ) {
-        super(output, Registries.ITEM, lookupProvider, parentProvider, p_274765_ -> p_274765_.builtInRegistryHolder().key());
+        this(output, lookupProvider, parentProvider, blockTags, "vanilla", null);
+    }
+
+    public ItemTagsProvider(
+        PackOutput output,
+        CompletableFuture<HolderLookup.Provider> lookupProvider,
+        CompletableFuture<TagsProvider.TagLookup<Block>> blockTags,
+        String modId,
+        @org.jetbrains.annotations.Nullable net.neoforged.neoforge.common.data.ExistingFileHelper existingFileHelper
+    ) {
+        super(output, Registries.ITEM, lookupProvider, p_255790_ -> p_255790_.builtInRegistryHolder().key(), modId, existingFileHelper);
+        this.blockTags = blockTags;
+    }
+
+    public ItemTagsProvider(
+        PackOutput output,
+        CompletableFuture<HolderLookup.Provider> lookupProvider,
+        CompletableFuture<TagsProvider.TagLookup<Item>> parentProvider,
+        CompletableFuture<TagsProvider.TagLookup<Block>> blockTags,
+        String modId,
+        @org.jetbrains.annotations.Nullable net.neoforged.neoforge.common.data.ExistingFileHelper existingFileHelper
+    ) {
+        super(output, Registries.ITEM, lookupProvider, parentProvider, p_274765_ -> p_274765_.builtInRegistryHolder().key(), modId, existingFileHelper);
         this.blockTags = blockTags;
     }
 
