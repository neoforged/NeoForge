--- a/net/minecraft/data/recipes/RecipeProvider.java
+++ b/net/minecraft/data/recipes/RecipeProvider.java
@@ -566,8 +_,7 @@
     }
 
     protected void waxRecipes(FeatureFlagSet p_313879_) {
-        HoneycombItem.WAXABLES
-            .get()
+        net.neoforged.neoforge.common.DataMapHooks.INVERSE_WAXABLES_DATAMAP
             .forEach(
                 (p_359424_, p_359425_) -> {
                     if (p_359425_.requiredFeatures().isSubsetOf(p_313879_)) {
@@ -756,13 +_,13 @@
                         final List<CompletableFuture<?>> list = new ArrayList<>();
                         RecipeOutput recipeoutput = new RecipeOutput() {
                             @Override
-                            public void accept(ResourceKey<Recipe<?>> p_380360_, Recipe<?> p_362882_, @Nullable AdvancementHolder p_364507_) {
+                            public void accept(ResourceKey<Recipe<?>> p_380360_, Recipe<?> p_362882_, @Nullable AdvancementHolder p_364507_, net.neoforged.neoforge.common.conditions.ICondition... conditions) {
                                 if (!set.add(p_380360_)) {
                                     throw new IllegalStateException("Duplicate recipe " + p_380360_.location());
                                 } else {
-                                    this.saveRecipe(p_380360_, p_362882_);
+                                    this.saveRecipe(p_380360_, p_362882_, conditions);
                                     if (p_364507_ != null) {
-                                        this.saveAdvancement(p_364507_);
+                                        this.saveAdvancement(p_364507_, conditions);
                                     }
                                 }
                             }
@@ -781,15 +_,21 @@
                             }
 
                             private void saveRecipe(ResourceKey<Recipe<?>> p_380099_, Recipe<?> p_364792_) {
+                                saveRecipe(p_380099_, p_364792_, new net.neoforged.neoforge.common.conditions.ICondition[0]);
+                            }
+                            private void saveRecipe(ResourceKey<Recipe<?>> p_380099_, Recipe<?> p_364792_, net.neoforged.neoforge.common.conditions.ICondition... conditions) {
                                 list.add(
-                                    DataProvider.saveStable(p_364823_, p_364211_, Recipe.CODEC, p_364792_, packoutput$pathprovider.json(p_380099_.location()))
+                                    DataProvider.saveStable(p_364823_, p_364211_, Recipe.CONDITIONAL_CODEC, Optional.of(new net.neoforged.neoforge.common.conditions.WithConditions<>(p_364792_, conditions)), packoutput$pathprovider.json(p_380099_.location()))
                                 );
                             }
 
                             private void saveAdvancement(AdvancementHolder p_363148_) {
+                                saveAdvancement(p_363148_, new net.neoforged.neoforge.common.conditions.ICondition[0]);
+                            }
+                            private void saveAdvancement(AdvancementHolder p_363148_, net.neoforged.neoforge.common.conditions.ICondition... conditions) {
                                 list.add(
                                     DataProvider.saveStable(
-                                        p_364823_, p_364211_, Advancement.CODEC, p_363148_.value(), packoutput$pathprovider1.json(p_363148_.id())
+                                        p_364823_, p_364211_, Advancement.CONDITIONAL_CODEC, Optional.of(new net.neoforged.neoforge.common.conditions.WithConditions<>(p_363148_.value(), conditions)), packoutput$pathprovider1.json(p_363148_.id())
                                     )
                                 );
                             }
