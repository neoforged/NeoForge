--- a/net/minecraft/network/codec/ByteBufCodecs.java
+++ b/net/minecraft/network/codec/ByteBufCodecs.java
@@ -463,7 +_,11 @@
     ) {
         return new StreamCodec<RegistryFriendlyByteBuf, R>() {
             private IdMap<R> getRegistryOrThrow(RegistryFriendlyByteBuf p_330361_) {
-                return p_320353_.apply(p_330361_.registryAccess().registryOrThrow(p_319942_));
+                var registry = p_330361_.registryAccess().registryOrThrow(p_319942_);
+                if (net.neoforged.neoforge.registries.RegistryManager.isNonSyncedBuiltInRegistry(registry)) {
+                    throw new IllegalStateException("Cannot use ID syncing for non-synced built-in registry: " + registry.key());
+                }
+                return p_320353_.apply(registry);
             }
 
             public R decode(RegistryFriendlyByteBuf p_331253_) {
@@ -493,7 +_,11 @@
             private static final int DIRECT_HOLDER_ID = 0;
 
             private IdMap<Holder<T>> getRegistryOrThrow(RegistryFriendlyByteBuf p_341377_) {
-                return p_341377_.registryAccess().registryOrThrow(p_320391_).asHolderIdMap();
+                var registry = p_341377_.registryAccess().registryOrThrow(p_320391_);
+                if (net.neoforged.neoforge.registries.RegistryManager.isNonSyncedBuiltInRegistry(registry)) {
+                    throw new IllegalStateException("Cannot use ID syncing for non-synced built-in registry: " + registry.key());
+                }
+                return registry.asHolderIdMap();
             }
 
             public Holder<T> decode(RegistryFriendlyByteBuf p_330998_) {
