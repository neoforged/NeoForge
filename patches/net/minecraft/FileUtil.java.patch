--- a/net/minecraft/FileUtil.java
+++ b/net/minecraft/FileUtil.java
@@ -13,12 +_,14 @@
 import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+
 import org.apache.commons.io.FilenameUtils;
 
 public class FileUtil {
     private static final Pattern COPY_COUNTER_PATTERN = Pattern.compile("(<name>.*) \\((<count>\\d*)\\)", 66);
     private static final int MAX_FILE_NAME = 255;
     private static final Pattern RESERVED_WINDOWS_FILENAMES = Pattern.compile(".*\\.|(?:COM|CLOCK\\$|CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9])(?:\\..*)?", 2);
+    private static final Pattern RESERVED_WINDOWS_FILENAMES_NEOFORGE = Pattern.compile(".*\\.|(?:CON|PRN|AUX|NUL|CLOCK\\$|CONIN\\$|CONOUT\\$|(?:COM|LPT)[¹²³0-9])(?:\\..*)?", 2); // Neo: Fix MC-268617 - See PR #767
     private static final Pattern STRICT_PATH_SEGMENT_CHECK = Pattern.compile("[-._a-z0-9]+");
 
     public static String sanitizeName(String name) {
@@ -31,7 +_,7 @@
 
     public static String findAvailableName(Path dirPath, String fileName, String fileFormat) throws IOException {
         fileName = sanitizeName(fileName);
-        if (RESERVED_WINDOWS_FILENAMES.matcher(fileName).matches()) {
+        if ((net.neoforged.neoforge.common.NeoForgeMod.getProperFilenameValidation() ? RESERVED_WINDOWS_FILENAMES_NEOFORGE : RESERVED_WINDOWS_FILENAMES).matcher(fileName).matches()) {
             fileName = "_" + fileName + "_";
         }
 
@@ -78,7 +_,7 @@
 
     public static boolean isPathPortable(Path p_path) {
         for (Path path : p_path) {
-            if (RESERVED_WINDOWS_FILENAMES.matcher(path.toString()).matches()) {
+            if ((net.neoforged.neoforge.common.NeoForgeMod.getProperFilenameValidation() ? RESERVED_WINDOWS_FILENAMES_NEOFORGE : RESERVED_WINDOWS_FILENAMES).matcher(path.toString()).matches()) {
                 return false;
             }
         }
