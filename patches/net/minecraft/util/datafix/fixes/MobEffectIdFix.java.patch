--- a/net/minecraft/util/datafix/fixes/MobEffectIdFix.java
+++ b/net/minecraft/util/datafix/fixes/MobEffectIdFix.java
@@ -76,8 +_,20 @@
         return updateMobEffectIdField(dynamic, oldName, dynamic, newName);
     }
 
+    private static <T> Dynamic<T> updateMobEffectIdFieldConsideringForge(Dynamic<T> oldDynamic, String oldName, Dynamic<T> newDynamic, String newName, String forgeFieldId) {
+        final var forgeField = oldDynamic.get(forgeFieldId).result();
+        if (forgeField.isPresent()) {
+                return setFieldIfPresent((oldDynamic == newDynamic ? oldDynamic.remove(forgeFieldId) : newDynamic), newName, forgeField);
+            }
+        return updateMobEffectIdField(oldDynamic, oldName, newDynamic, newName);
+    }
+
+    private static <T> Dynamic<T> setFieldIfPresent(Dynamic<T> dynamic, String s, Optional<Dynamic<T>> optional) {
+        return optional.isEmpty() ? dynamic : dynamic.set(s, optional.get());
+    }
+
     private static <T> Dynamic<T> updateMobEffectInstance(Dynamic<T> dynamic) {
-        dynamic = updateMobEffectIdField(dynamic, "Id", "id");
+        dynamic = updateMobEffectIdFieldConsideringForge(dynamic, "Id", dynamic, "id", "forge:id");
         dynamic = dynamic.renameField("Ambient", "ambient");
         dynamic = dynamic.renameField("Amplifier", "amplifier");
         dynamic = dynamic.renameField("Duration", "duration");
@@ -96,7 +_,7 @@
     }
 
     private static <T> Dynamic<T> updateSuspiciousStewEntry(Dynamic<T> oldDynamic, Dynamic<T> newDynamic) {
-        newDynamic = updateMobEffectIdField(oldDynamic, "EffectId", newDynamic, "id");
+        newDynamic = updateMobEffectIdFieldConsideringForge(oldDynamic, "EffectId", newDynamic, "id", "forge:effect_id");
         Optional<Dynamic<T>> optional = oldDynamic.get("EffectDuration").result();
         return newDynamic.replaceField("EffectDuration", "duration", optional);
     }
