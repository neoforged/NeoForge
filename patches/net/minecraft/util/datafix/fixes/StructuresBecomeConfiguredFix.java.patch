--- a/net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix.java
+++ b/net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix.java
@@ -179,7 +_,11 @@
     private Dynamic<?> findUpdatedStructureType(Dynamic<?> p_207725_, Dynamic<?> data) {
         String s = p_207725_.asString("UNKNOWN").toLowerCase(Locale.ROOT);
         StructuresBecomeConfiguredFix.Conversion structuresbecomeconfiguredfix$conversion = CONVERSION_MAP.get(s);
+        if (structuresbecomeconfiguredfix$conversion == null) structuresbecomeconfiguredfix$conversion = net.neoforged.neoforge.common.CommonHooks.getStructureConversion(s); // Neo: hook for mods to register conversions through RegisterStructureConversionsEvent
         if (structuresbecomeconfiguredfix$conversion == null) {
+            // Porting 1.20.5 check if this is correct
+            if (net.neoforged.neoforge.common.CommonHooks.checkStructureNamespace(s)) return data.createString(s); // Neo: pass-through structure IDs which have a non-"minecraft" namespace
+            if (true) return data.createString("unknown." + s); // Neo: Pass-through with "unknown." prefix, so deserializer logs and ignores rather than fixer throwing an exception and dropping chunk data
             return null;
         } else {
             String s1 = structuresbecomeconfiguredfix$conversion.fallback;
